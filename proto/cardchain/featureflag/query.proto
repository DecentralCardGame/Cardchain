syntax = "proto3";

package DecentralCardGame.cardchain.featureflag;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cardchain/featureflag/params.proto";
import "cardchain/featureflag/flag.proto";

option go_package = "github.com/DecentralCardGame/Cardchain/x/featureflag/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/DecentralCardGame/Cardchain/featureflag/params";
  
  }

  // Queries a list of QFlag items.
  rpc QFlag (QueryQFlagRequest) returns (QueryQFlagResponse) {
    option (google.api.http).get = "/DecentralCardGame/Cardchain/featureflag/q_flag/{module}/{name}";

  }

  // Queries a list of QFlags items.
  rpc QFlags (QueryQFlagsRequest) returns (QueryQFlagsResponse) {
    option (google.api.http).get = "/DecentralCardGame/Cardchain/featureflag/q_flags";

  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryQFlagRequest {
  string module = 1;
  string name = 2;
}

message QueryQFlagResponse {
  Flag flag = 1;
}

message QueryQFlagsRequest {}

message QueryQFlagsResponse {
  repeated Flag flags = 1;
}

