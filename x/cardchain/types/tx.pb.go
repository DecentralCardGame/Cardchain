// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cardchain/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Outcome int32

const (
	Outcome_AWon    Outcome = 0
	Outcome_BWon    Outcome = 1
	Outcome_Draw    Outcome = 2
	Outcome_Aborted Outcome = 3
)

var Outcome_name = map[int32]string{
	0: "AWon",
	1: "BWon",
	2: "Draw",
	3: "Aborted",
}

var Outcome_value = map[string]int32{
	"AWon":    0,
	"BWon":    1,
	"Draw":    2,
	"Aborted": 3,
}

func (x Outcome) String() string {
	return proto.EnumName(Outcome_name, int32(x))
}

func (Outcome) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{0}
}

type MsgCreateuser struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NewUser string `protobuf:"bytes,2,opt,name=newUser,proto3" json:"newUser,omitempty"`
	Alias   string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (m *MsgCreateuser) Reset()         { *m = MsgCreateuser{} }
func (m *MsgCreateuser) String() string { return proto.CompactTextString(m) }
func (*MsgCreateuser) ProtoMessage()    {}
func (*MsgCreateuser) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{0}
}
func (m *MsgCreateuser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateuser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateuser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateuser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateuser.Merge(m, src)
}
func (m *MsgCreateuser) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateuser) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateuser.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateuser proto.InternalMessageInfo

func (m *MsgCreateuser) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateuser) GetNewUser() string {
	if m != nil {
		return m.NewUser
	}
	return ""
}

func (m *MsgCreateuser) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type MsgCreateuserResponse struct {
}

func (m *MsgCreateuserResponse) Reset()         { *m = MsgCreateuserResponse{} }
func (m *MsgCreateuserResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateuserResponse) ProtoMessage()    {}
func (*MsgCreateuserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{1}
}
func (m *MsgCreateuserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateuserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateuserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateuserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateuserResponse.Merge(m, src)
}
func (m *MsgCreateuserResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateuserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateuserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateuserResponse proto.InternalMessageInfo

type MsgBuyCardScheme struct {
	Creator string                                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Bid     github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,2,opt,name=bid,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"bid"`
	Buyer   string                                  `protobuf:"bytes,3,opt,name=buyer,proto3" json:"buyer,omitempty"`
}

func (m *MsgBuyCardScheme) Reset()         { *m = MsgBuyCardScheme{} }
func (m *MsgBuyCardScheme) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCardScheme) ProtoMessage()    {}
func (*MsgBuyCardScheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{2}
}
func (m *MsgBuyCardScheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCardScheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCardScheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCardScheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCardScheme.Merge(m, src)
}
func (m *MsgBuyCardScheme) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCardScheme) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCardScheme.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCardScheme proto.InternalMessageInfo

func (m *MsgBuyCardScheme) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgBuyCardScheme) GetBuyer() string {
	if m != nil {
		return m.Buyer
	}
	return ""
}

type MsgBuyCardSchemeResponse struct {
}

func (m *MsgBuyCardSchemeResponse) Reset()         { *m = MsgBuyCardSchemeResponse{} }
func (m *MsgBuyCardSchemeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCardSchemeResponse) ProtoMessage()    {}
func (*MsgBuyCardSchemeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{3}
}
func (m *MsgBuyCardSchemeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCardSchemeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCardSchemeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCardSchemeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCardSchemeResponse.Merge(m, src)
}
func (m *MsgBuyCardSchemeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCardSchemeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCardSchemeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCardSchemeResponse proto.InternalMessageInfo

type MsgVoteCard struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId   uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	VoteType string `protobuf:"bytes,3,opt,name=voteType,proto3" json:"voteType,omitempty"`
	Voter    string `protobuf:"bytes,4,opt,name=voter,proto3" json:"voter,omitempty"`
}

func (m *MsgVoteCard) Reset()         { *m = MsgVoteCard{} }
func (m *MsgVoteCard) String() string { return proto.CompactTextString(m) }
func (*MsgVoteCard) ProtoMessage()    {}
func (*MsgVoteCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{4}
}
func (m *MsgVoteCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteCard.Merge(m, src)
}
func (m *MsgVoteCard) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteCard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteCard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteCard proto.InternalMessageInfo

func (m *MsgVoteCard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgVoteCard) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgVoteCard) GetVoteType() string {
	if m != nil {
		return m.VoteType
	}
	return ""
}

func (m *MsgVoteCard) GetVoter() string {
	if m != nil {
		return m.Voter
	}
	return ""
}

type MsgVoteCardResponse struct {
}

func (m *MsgVoteCardResponse) Reset()         { *m = MsgVoteCardResponse{} }
func (m *MsgVoteCardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVoteCardResponse) ProtoMessage()    {}
func (*MsgVoteCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{5}
}
func (m *MsgVoteCardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteCardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteCardResponse.Merge(m, src)
}
func (m *MsgVoteCardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteCardResponse proto.InternalMessageInfo

type MsgSaveCardContent struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	//  bytes image = 4;
	//  string fullArt = 5;
	Notes  string `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	Owner  string `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Artist string `protobuf:"bytes,6,opt,name=artist,proto3" json:"artist,omitempty"`
}

func (m *MsgSaveCardContent) Reset()         { *m = MsgSaveCardContent{} }
func (m *MsgSaveCardContent) String() string { return proto.CompactTextString(m) }
func (*MsgSaveCardContent) ProtoMessage()    {}
func (*MsgSaveCardContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{6}
}
func (m *MsgSaveCardContent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSaveCardContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSaveCardContent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSaveCardContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSaveCardContent.Merge(m, src)
}
func (m *MsgSaveCardContent) XXX_Size() int {
	return m.Size()
}
func (m *MsgSaveCardContent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSaveCardContent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSaveCardContent proto.InternalMessageInfo

func (m *MsgSaveCardContent) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSaveCardContent) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgSaveCardContent) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *MsgSaveCardContent) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *MsgSaveCardContent) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgSaveCardContent) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

type MsgSaveCardContentResponse struct {
}

func (m *MsgSaveCardContentResponse) Reset()         { *m = MsgSaveCardContentResponse{} }
func (m *MsgSaveCardContentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSaveCardContentResponse) ProtoMessage()    {}
func (*MsgSaveCardContentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{7}
}
func (m *MsgSaveCardContentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSaveCardContentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSaveCardContentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSaveCardContentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSaveCardContentResponse.Merge(m, src)
}
func (m *MsgSaveCardContentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSaveCardContentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSaveCardContentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSaveCardContentResponse proto.InternalMessageInfo

type MsgTransferCard struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId   uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Receiver string `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (m *MsgTransferCard) Reset()         { *m = MsgTransferCard{} }
func (m *MsgTransferCard) String() string { return proto.CompactTextString(m) }
func (*MsgTransferCard) ProtoMessage()    {}
func (*MsgTransferCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{8}
}
func (m *MsgTransferCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferCard.Merge(m, src)
}
func (m *MsgTransferCard) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferCard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferCard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferCard proto.InternalMessageInfo

func (m *MsgTransferCard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgTransferCard) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgTransferCard) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

type MsgTransferCardResponse struct {
}

func (m *MsgTransferCardResponse) Reset()         { *m = MsgTransferCardResponse{} }
func (m *MsgTransferCardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTransferCardResponse) ProtoMessage()    {}
func (*MsgTransferCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{9}
}
func (m *MsgTransferCardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferCardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferCardResponse.Merge(m, src)
}
func (m *MsgTransferCardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferCardResponse proto.InternalMessageInfo

type MsgDonateToCard struct {
	Creator string                                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64                                  `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Donator string                                  `protobuf:"bytes,3,opt,name=donator,proto3" json:"donator,omitempty"`
	Amount  github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,4,opt,name=amount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"amount"`
}

func (m *MsgDonateToCard) Reset()         { *m = MsgDonateToCard{} }
func (m *MsgDonateToCard) String() string { return proto.CompactTextString(m) }
func (*MsgDonateToCard) ProtoMessage()    {}
func (*MsgDonateToCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{10}
}
func (m *MsgDonateToCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDonateToCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDonateToCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDonateToCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDonateToCard.Merge(m, src)
}
func (m *MsgDonateToCard) XXX_Size() int {
	return m.Size()
}
func (m *MsgDonateToCard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDonateToCard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDonateToCard proto.InternalMessageInfo

func (m *MsgDonateToCard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDonateToCard) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgDonateToCard) GetDonator() string {
	if m != nil {
		return m.Donator
	}
	return ""
}

type MsgDonateToCardResponse struct {
}

func (m *MsgDonateToCardResponse) Reset()         { *m = MsgDonateToCardResponse{} }
func (m *MsgDonateToCardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDonateToCardResponse) ProtoMessage()    {}
func (*MsgDonateToCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{11}
}
func (m *MsgDonateToCardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDonateToCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDonateToCardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDonateToCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDonateToCardResponse.Merge(m, src)
}
func (m *MsgDonateToCardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDonateToCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDonateToCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDonateToCardResponse proto.InternalMessageInfo

type MsgAddArtwork struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Image   []byte `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	FullArt bool   `protobuf:"varint,4,opt,name=fullArt,proto3" json:"fullArt,omitempty"`
}

func (m *MsgAddArtwork) Reset()         { *m = MsgAddArtwork{} }
func (m *MsgAddArtwork) String() string { return proto.CompactTextString(m) }
func (*MsgAddArtwork) ProtoMessage()    {}
func (*MsgAddArtwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{12}
}
func (m *MsgAddArtwork) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddArtwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddArtwork.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddArtwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddArtwork.Merge(m, src)
}
func (m *MsgAddArtwork) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddArtwork) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddArtwork.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddArtwork proto.InternalMessageInfo

func (m *MsgAddArtwork) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddArtwork) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgAddArtwork) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *MsgAddArtwork) GetFullArt() bool {
	if m != nil {
		return m.FullArt
	}
	return false
}

type MsgAddArtworkResponse struct {
}

func (m *MsgAddArtworkResponse) Reset()         { *m = MsgAddArtworkResponse{} }
func (m *MsgAddArtworkResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddArtworkResponse) ProtoMessage()    {}
func (*MsgAddArtworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{13}
}
func (m *MsgAddArtworkResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddArtworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddArtworkResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddArtworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddArtworkResponse.Merge(m, src)
}
func (m *MsgAddArtworkResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddArtworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddArtworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddArtworkResponse proto.InternalMessageInfo

type MsgSubmitCopyrightProposal struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId      uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Link        string `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
}

func (m *MsgSubmitCopyrightProposal) Reset()         { *m = MsgSubmitCopyrightProposal{} }
func (m *MsgSubmitCopyrightProposal) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitCopyrightProposal) ProtoMessage()    {}
func (*MsgSubmitCopyrightProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{14}
}
func (m *MsgSubmitCopyrightProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitCopyrightProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitCopyrightProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitCopyrightProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitCopyrightProposal.Merge(m, src)
}
func (m *MsgSubmitCopyrightProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitCopyrightProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitCopyrightProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitCopyrightProposal proto.InternalMessageInfo

func (m *MsgSubmitCopyrightProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubmitCopyrightProposal) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgSubmitCopyrightProposal) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgSubmitCopyrightProposal) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type MsgSubmitCopyrightProposalResponse struct {
}

func (m *MsgSubmitCopyrightProposalResponse) Reset()         { *m = MsgSubmitCopyrightProposalResponse{} }
func (m *MsgSubmitCopyrightProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitCopyrightProposalResponse) ProtoMessage()    {}
func (*MsgSubmitCopyrightProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{15}
}
func (m *MsgSubmitCopyrightProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitCopyrightProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitCopyrightProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitCopyrightProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitCopyrightProposalResponse.Merge(m, src)
}
func (m *MsgSubmitCopyrightProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitCopyrightProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitCopyrightProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitCopyrightProposalResponse proto.InternalMessageInfo

type MsgChangeArtist struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardID  uint64 `protobuf:"varint,2,opt,name=cardID,proto3" json:"cardID,omitempty"`
	Artist  string `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
}

func (m *MsgChangeArtist) Reset()         { *m = MsgChangeArtist{} }
func (m *MsgChangeArtist) String() string { return proto.CompactTextString(m) }
func (*MsgChangeArtist) ProtoMessage()    {}
func (*MsgChangeArtist) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{16}
}
func (m *MsgChangeArtist) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgChangeArtist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgChangeArtist.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgChangeArtist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgChangeArtist.Merge(m, src)
}
func (m *MsgChangeArtist) XXX_Size() int {
	return m.Size()
}
func (m *MsgChangeArtist) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgChangeArtist.DiscardUnknown(m)
}

var xxx_messageInfo_MsgChangeArtist proto.InternalMessageInfo

func (m *MsgChangeArtist) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgChangeArtist) GetCardID() uint64 {
	if m != nil {
		return m.CardID
	}
	return 0
}

func (m *MsgChangeArtist) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

type MsgChangeArtistResponse struct {
}

func (m *MsgChangeArtistResponse) Reset()         { *m = MsgChangeArtistResponse{} }
func (m *MsgChangeArtistResponse) String() string { return proto.CompactTextString(m) }
func (*MsgChangeArtistResponse) ProtoMessage()    {}
func (*MsgChangeArtistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{17}
}
func (m *MsgChangeArtistResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgChangeArtistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgChangeArtistResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgChangeArtistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgChangeArtistResponse.Merge(m, src)
}
func (m *MsgChangeArtistResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgChangeArtistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgChangeArtistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgChangeArtistResponse proto.InternalMessageInfo

type MsgRegisterForCouncil struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgRegisterForCouncil) Reset()         { *m = MsgRegisterForCouncil{} }
func (m *MsgRegisterForCouncil) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterForCouncil) ProtoMessage()    {}
func (*MsgRegisterForCouncil) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{18}
}
func (m *MsgRegisterForCouncil) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterForCouncil) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterForCouncil.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterForCouncil) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterForCouncil.Merge(m, src)
}
func (m *MsgRegisterForCouncil) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterForCouncil) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterForCouncil.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterForCouncil proto.InternalMessageInfo

func (m *MsgRegisterForCouncil) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgRegisterForCouncilResponse struct {
}

func (m *MsgRegisterForCouncilResponse) Reset()         { *m = MsgRegisterForCouncilResponse{} }
func (m *MsgRegisterForCouncilResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterForCouncilResponse) ProtoMessage()    {}
func (*MsgRegisterForCouncilResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{19}
}
func (m *MsgRegisterForCouncilResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterForCouncilResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterForCouncilResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterForCouncilResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterForCouncilResponse.Merge(m, src)
}
func (m *MsgRegisterForCouncilResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterForCouncilResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterForCouncilResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterForCouncilResponse proto.InternalMessageInfo

type MsgReportMatch struct {
	Creator string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PlayerA string   `protobuf:"bytes,2,opt,name=playerA,proto3" json:"playerA,omitempty"`
	PlayerB string   `protobuf:"bytes,3,opt,name=playerB,proto3" json:"playerB,omitempty"`
	CardsA  []uint64 `protobuf:"varint,5,rep,packed,name=cardsA,proto3" json:"cardsA,omitempty"`
	CardsB  []uint64 `protobuf:"varint,6,rep,packed,name=cardsB,proto3" json:"cardsB,omitempty"`
	Outcome Outcome  `protobuf:"varint,7,opt,name=outcome,proto3,enum=DecentralCardGame.cardchain.cardchain.Outcome" json:"outcome,omitempty"`
}

func (m *MsgReportMatch) Reset()         { *m = MsgReportMatch{} }
func (m *MsgReportMatch) String() string { return proto.CompactTextString(m) }
func (*MsgReportMatch) ProtoMessage()    {}
func (*MsgReportMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{20}
}
func (m *MsgReportMatch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReportMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReportMatch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReportMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReportMatch.Merge(m, src)
}
func (m *MsgReportMatch) XXX_Size() int {
	return m.Size()
}
func (m *MsgReportMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReportMatch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReportMatch proto.InternalMessageInfo

func (m *MsgReportMatch) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgReportMatch) GetPlayerA() string {
	if m != nil {
		return m.PlayerA
	}
	return ""
}

func (m *MsgReportMatch) GetPlayerB() string {
	if m != nil {
		return m.PlayerB
	}
	return ""
}

func (m *MsgReportMatch) GetCardsA() []uint64 {
	if m != nil {
		return m.CardsA
	}
	return nil
}

func (m *MsgReportMatch) GetCardsB() []uint64 {
	if m != nil {
		return m.CardsB
	}
	return nil
}

func (m *MsgReportMatch) GetOutcome() Outcome {
	if m != nil {
		return m.Outcome
	}
	return Outcome_AWon
}

type MsgReportMatchResponse struct {
	MatchId uint64 `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"`
}

func (m *MsgReportMatchResponse) Reset()         { *m = MsgReportMatchResponse{} }
func (m *MsgReportMatchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgReportMatchResponse) ProtoMessage()    {}
func (*MsgReportMatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{21}
}
func (m *MsgReportMatchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReportMatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReportMatchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReportMatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReportMatchResponse.Merge(m, src)
}
func (m *MsgReportMatchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgReportMatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReportMatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReportMatchResponse proto.InternalMessageInfo

func (m *MsgReportMatchResponse) GetMatchId() uint64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

type MsgSubmitMatchReporterProposal struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Reporter    string `protobuf:"bytes,2,opt,name=reporter,proto3" json:"reporter,omitempty"`
	Deposit     string `protobuf:"bytes,3,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *MsgSubmitMatchReporterProposal) Reset()         { *m = MsgSubmitMatchReporterProposal{} }
func (m *MsgSubmitMatchReporterProposal) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitMatchReporterProposal) ProtoMessage()    {}
func (*MsgSubmitMatchReporterProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{22}
}
func (m *MsgSubmitMatchReporterProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitMatchReporterProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitMatchReporterProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitMatchReporterProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitMatchReporterProposal.Merge(m, src)
}
func (m *MsgSubmitMatchReporterProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitMatchReporterProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitMatchReporterProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitMatchReporterProposal proto.InternalMessageInfo

func (m *MsgSubmitMatchReporterProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubmitMatchReporterProposal) GetReporter() string {
	if m != nil {
		return m.Reporter
	}
	return ""
}

func (m *MsgSubmitMatchReporterProposal) GetDeposit() string {
	if m != nil {
		return m.Deposit
	}
	return ""
}

func (m *MsgSubmitMatchReporterProposal) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type MsgSubmitMatchReporterProposalResponse struct {
}

func (m *MsgSubmitMatchReporterProposalResponse) Reset() {
	*m = MsgSubmitMatchReporterProposalResponse{}
}
func (m *MsgSubmitMatchReporterProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitMatchReporterProposalResponse) ProtoMessage()    {}
func (*MsgSubmitMatchReporterProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{23}
}
func (m *MsgSubmitMatchReporterProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitMatchReporterProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitMatchReporterProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitMatchReporterProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitMatchReporterProposalResponse.Merge(m, src)
}
func (m *MsgSubmitMatchReporterProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitMatchReporterProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitMatchReporterProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitMatchReporterProposalResponse proto.InternalMessageInfo

type MsgApointMatchReporter struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Reporter string `protobuf:"bytes,2,opt,name=reporter,proto3" json:"reporter,omitempty"`
}

func (m *MsgApointMatchReporter) Reset()         { *m = MsgApointMatchReporter{} }
func (m *MsgApointMatchReporter) String() string { return proto.CompactTextString(m) }
func (*MsgApointMatchReporter) ProtoMessage()    {}
func (*MsgApointMatchReporter) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{24}
}
func (m *MsgApointMatchReporter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApointMatchReporter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApointMatchReporter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApointMatchReporter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApointMatchReporter.Merge(m, src)
}
func (m *MsgApointMatchReporter) XXX_Size() int {
	return m.Size()
}
func (m *MsgApointMatchReporter) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApointMatchReporter.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApointMatchReporter proto.InternalMessageInfo

func (m *MsgApointMatchReporter) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgApointMatchReporter) GetReporter() string {
	if m != nil {
		return m.Reporter
	}
	return ""
}

type MsgApointMatchReporterResponse struct {
}

func (m *MsgApointMatchReporterResponse) Reset()         { *m = MsgApointMatchReporterResponse{} }
func (m *MsgApointMatchReporterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgApointMatchReporterResponse) ProtoMessage()    {}
func (*MsgApointMatchReporterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{25}
}
func (m *MsgApointMatchReporterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApointMatchReporterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApointMatchReporterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApointMatchReporterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApointMatchReporterResponse.Merge(m, src)
}
func (m *MsgApointMatchReporterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgApointMatchReporterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApointMatchReporterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApointMatchReporterResponse proto.InternalMessageInfo

type MsgCreateCollection struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Artist       string   `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	StoryWriter  string   `protobuf:"bytes,4,opt,name=storyWriter,proto3" json:"storyWriter,omitempty"`
	Contributors []string `protobuf:"bytes,5,rep,name=contributors,proto3" json:"contributors,omitempty"`
}

func (m *MsgCreateCollection) Reset()         { *m = MsgCreateCollection{} }
func (m *MsgCreateCollection) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCollection) ProtoMessage()    {}
func (*MsgCreateCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{26}
}
func (m *MsgCreateCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCollection.Merge(m, src)
}
func (m *MsgCreateCollection) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCollection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCollection proto.InternalMessageInfo

func (m *MsgCreateCollection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateCollection) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateCollection) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

func (m *MsgCreateCollection) GetStoryWriter() string {
	if m != nil {
		return m.StoryWriter
	}
	return ""
}

func (m *MsgCreateCollection) GetContributors() []string {
	if m != nil {
		return m.Contributors
	}
	return nil
}

type MsgCreateCollectionResponse struct {
}

func (m *MsgCreateCollectionResponse) Reset()         { *m = MsgCreateCollectionResponse{} }
func (m *MsgCreateCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCollectionResponse) ProtoMessage()    {}
func (*MsgCreateCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{27}
}
func (m *MsgCreateCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCollectionResponse.Merge(m, src)
}
func (m *MsgCreateCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCollectionResponse proto.InternalMessageInfo

type MsgAddCardToCollection struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId uint64 `protobuf:"varint,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	CardId       uint64 `protobuf:"varint,3,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgAddCardToCollection) Reset()         { *m = MsgAddCardToCollection{} }
func (m *MsgAddCardToCollection) String() string { return proto.CompactTextString(m) }
func (*MsgAddCardToCollection) ProtoMessage()    {}
func (*MsgAddCardToCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{28}
}
func (m *MsgAddCardToCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddCardToCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddCardToCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddCardToCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddCardToCollection.Merge(m, src)
}
func (m *MsgAddCardToCollection) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddCardToCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddCardToCollection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddCardToCollection proto.InternalMessageInfo

func (m *MsgAddCardToCollection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddCardToCollection) GetCollectionId() uint64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *MsgAddCardToCollection) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgAddCardToCollectionResponse struct {
}

func (m *MsgAddCardToCollectionResponse) Reset()         { *m = MsgAddCardToCollectionResponse{} }
func (m *MsgAddCardToCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddCardToCollectionResponse) ProtoMessage()    {}
func (*MsgAddCardToCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{29}
}
func (m *MsgAddCardToCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddCardToCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddCardToCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddCardToCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddCardToCollectionResponse.Merge(m, src)
}
func (m *MsgAddCardToCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddCardToCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddCardToCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddCardToCollectionResponse proto.InternalMessageInfo

type MsgFinalizeCollection struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId uint64 `protobuf:"varint,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
}

func (m *MsgFinalizeCollection) Reset()         { *m = MsgFinalizeCollection{} }
func (m *MsgFinalizeCollection) String() string { return proto.CompactTextString(m) }
func (*MsgFinalizeCollection) ProtoMessage()    {}
func (*MsgFinalizeCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{30}
}
func (m *MsgFinalizeCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinalizeCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinalizeCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinalizeCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinalizeCollection.Merge(m, src)
}
func (m *MsgFinalizeCollection) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinalizeCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinalizeCollection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinalizeCollection proto.InternalMessageInfo

func (m *MsgFinalizeCollection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgFinalizeCollection) GetCollectionId() uint64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

type MsgFinalizeCollectionResponse struct {
}

func (m *MsgFinalizeCollectionResponse) Reset()         { *m = MsgFinalizeCollectionResponse{} }
func (m *MsgFinalizeCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFinalizeCollectionResponse) ProtoMessage()    {}
func (*MsgFinalizeCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{31}
}
func (m *MsgFinalizeCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinalizeCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinalizeCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinalizeCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinalizeCollectionResponse.Merge(m, src)
}
func (m *MsgFinalizeCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinalizeCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinalizeCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinalizeCollectionResponse proto.InternalMessageInfo

type MsgBuyCollection struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId uint64 `protobuf:"varint,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
}

func (m *MsgBuyCollection) Reset()         { *m = MsgBuyCollection{} }
func (m *MsgBuyCollection) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCollection) ProtoMessage()    {}
func (*MsgBuyCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{32}
}
func (m *MsgBuyCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCollection.Merge(m, src)
}
func (m *MsgBuyCollection) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCollection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCollection proto.InternalMessageInfo

func (m *MsgBuyCollection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgBuyCollection) GetCollectionId() uint64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

type MsgBuyCollectionResponse struct {
}

func (m *MsgBuyCollectionResponse) Reset()         { *m = MsgBuyCollectionResponse{} }
func (m *MsgBuyCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCollectionResponse) ProtoMessage()    {}
func (*MsgBuyCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{33}
}
func (m *MsgBuyCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCollectionResponse.Merge(m, src)
}
func (m *MsgBuyCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCollectionResponse proto.InternalMessageInfo

type MsgRemoveCardFromCollection struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId uint64 `protobuf:"varint,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	CardId       uint64 `protobuf:"varint,3,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgRemoveCardFromCollection) Reset()         { *m = MsgRemoveCardFromCollection{} }
func (m *MsgRemoveCardFromCollection) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveCardFromCollection) ProtoMessage()    {}
func (*MsgRemoveCardFromCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{34}
}
func (m *MsgRemoveCardFromCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveCardFromCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveCardFromCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveCardFromCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveCardFromCollection.Merge(m, src)
}
func (m *MsgRemoveCardFromCollection) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveCardFromCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveCardFromCollection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveCardFromCollection proto.InternalMessageInfo

func (m *MsgRemoveCardFromCollection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveCardFromCollection) GetCollectionId() uint64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *MsgRemoveCardFromCollection) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgRemoveCardFromCollectionResponse struct {
}

func (m *MsgRemoveCardFromCollectionResponse) Reset()         { *m = MsgRemoveCardFromCollectionResponse{} }
func (m *MsgRemoveCardFromCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveCardFromCollectionResponse) ProtoMessage()    {}
func (*MsgRemoveCardFromCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{35}
}
func (m *MsgRemoveCardFromCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveCardFromCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveCardFromCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveCardFromCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveCardFromCollectionResponse.Merge(m, src)
}
func (m *MsgRemoveCardFromCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveCardFromCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveCardFromCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveCardFromCollectionResponse proto.InternalMessageInfo

type MsgRemoveContributorFromCollection struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId uint64 `protobuf:"varint,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	User         string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *MsgRemoveContributorFromCollection) Reset()         { *m = MsgRemoveContributorFromCollection{} }
func (m *MsgRemoveContributorFromCollection) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveContributorFromCollection) ProtoMessage()    {}
func (*MsgRemoveContributorFromCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{36}
}
func (m *MsgRemoveContributorFromCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveContributorFromCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveContributorFromCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveContributorFromCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveContributorFromCollection.Merge(m, src)
}
func (m *MsgRemoveContributorFromCollection) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveContributorFromCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveContributorFromCollection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveContributorFromCollection proto.InternalMessageInfo

func (m *MsgRemoveContributorFromCollection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveContributorFromCollection) GetCollectionId() uint64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *MsgRemoveContributorFromCollection) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type MsgRemoveContributorFromCollectionResponse struct {
}

func (m *MsgRemoveContributorFromCollectionResponse) Reset() {
	*m = MsgRemoveContributorFromCollectionResponse{}
}
func (m *MsgRemoveContributorFromCollectionResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgRemoveContributorFromCollectionResponse) ProtoMessage() {}
func (*MsgRemoveContributorFromCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{37}
}
func (m *MsgRemoveContributorFromCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveContributorFromCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveContributorFromCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveContributorFromCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveContributorFromCollectionResponse.Merge(m, src)
}
func (m *MsgRemoveContributorFromCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveContributorFromCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveContributorFromCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveContributorFromCollectionResponse proto.InternalMessageInfo

type MsgAddContributorToCollection struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId uint64 `protobuf:"varint,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	User         string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *MsgAddContributorToCollection) Reset()         { *m = MsgAddContributorToCollection{} }
func (m *MsgAddContributorToCollection) String() string { return proto.CompactTextString(m) }
func (*MsgAddContributorToCollection) ProtoMessage()    {}
func (*MsgAddContributorToCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{38}
}
func (m *MsgAddContributorToCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddContributorToCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddContributorToCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddContributorToCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddContributorToCollection.Merge(m, src)
}
func (m *MsgAddContributorToCollection) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddContributorToCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddContributorToCollection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddContributorToCollection proto.InternalMessageInfo

func (m *MsgAddContributorToCollection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddContributorToCollection) GetCollectionId() uint64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *MsgAddContributorToCollection) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type MsgAddContributorToCollectionResponse struct {
}

func (m *MsgAddContributorToCollectionResponse) Reset()         { *m = MsgAddContributorToCollectionResponse{} }
func (m *MsgAddContributorToCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddContributorToCollectionResponse) ProtoMessage()    {}
func (*MsgAddContributorToCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{39}
}
func (m *MsgAddContributorToCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddContributorToCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddContributorToCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddContributorToCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddContributorToCollectionResponse.Merge(m, src)
}
func (m *MsgAddContributorToCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddContributorToCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddContributorToCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddContributorToCollectionResponse proto.InternalMessageInfo

type MsgSubmitCollectionProposal struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId uint64 `protobuf:"varint,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
}

func (m *MsgSubmitCollectionProposal) Reset()         { *m = MsgSubmitCollectionProposal{} }
func (m *MsgSubmitCollectionProposal) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitCollectionProposal) ProtoMessage()    {}
func (*MsgSubmitCollectionProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{40}
}
func (m *MsgSubmitCollectionProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitCollectionProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitCollectionProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitCollectionProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitCollectionProposal.Merge(m, src)
}
func (m *MsgSubmitCollectionProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitCollectionProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitCollectionProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitCollectionProposal proto.InternalMessageInfo

func (m *MsgSubmitCollectionProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubmitCollectionProposal) GetCollectionId() uint64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

type MsgSubmitCollectionProposalResponse struct {
}

func (m *MsgSubmitCollectionProposalResponse) Reset()         { *m = MsgSubmitCollectionProposalResponse{} }
func (m *MsgSubmitCollectionProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitCollectionProposalResponse) ProtoMessage()    {}
func (*MsgSubmitCollectionProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{41}
}
func (m *MsgSubmitCollectionProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitCollectionProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitCollectionProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitCollectionProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitCollectionProposalResponse.Merge(m, src)
}
func (m *MsgSubmitCollectionProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitCollectionProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitCollectionProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitCollectionProposalResponse proto.InternalMessageInfo

type MsgCreateSellOffer struct {
	Creator string                                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Card    uint64                                  `protobuf:"varint,2,opt,name=card,proto3" json:"card,omitempty"`
	Price   github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,3,opt,name=price,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"price"`
}

func (m *MsgCreateSellOffer) Reset()         { *m = MsgCreateSellOffer{} }
func (m *MsgCreateSellOffer) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSellOffer) ProtoMessage()    {}
func (*MsgCreateSellOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{42}
}
func (m *MsgCreateSellOffer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSellOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSellOffer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSellOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSellOffer.Merge(m, src)
}
func (m *MsgCreateSellOffer) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSellOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSellOffer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSellOffer proto.InternalMessageInfo

func (m *MsgCreateSellOffer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSellOffer) GetCard() uint64 {
	if m != nil {
		return m.Card
	}
	return 0
}

type MsgCreateSellOfferResponse struct {
}

func (m *MsgCreateSellOfferResponse) Reset()         { *m = MsgCreateSellOfferResponse{} }
func (m *MsgCreateSellOfferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSellOfferResponse) ProtoMessage()    {}
func (*MsgCreateSellOfferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{43}
}
func (m *MsgCreateSellOfferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSellOfferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSellOfferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSellOfferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSellOfferResponse.Merge(m, src)
}
func (m *MsgCreateSellOfferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSellOfferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSellOfferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSellOfferResponse proto.InternalMessageInfo

type MsgBuyCard struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SellOfferId uint64 `protobuf:"varint,2,opt,name=sellOfferId,proto3" json:"sellOfferId,omitempty"`
}

func (m *MsgBuyCard) Reset()         { *m = MsgBuyCard{} }
func (m *MsgBuyCard) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCard) ProtoMessage()    {}
func (*MsgBuyCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{44}
}
func (m *MsgBuyCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCard.Merge(m, src)
}
func (m *MsgBuyCard) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCard proto.InternalMessageInfo

func (m *MsgBuyCard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgBuyCard) GetSellOfferId() uint64 {
	if m != nil {
		return m.SellOfferId
	}
	return 0
}

type MsgBuyCardResponse struct {
}

func (m *MsgBuyCardResponse) Reset()         { *m = MsgBuyCardResponse{} }
func (m *MsgBuyCardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCardResponse) ProtoMessage()    {}
func (*MsgBuyCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{45}
}
func (m *MsgBuyCardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCardResponse.Merge(m, src)
}
func (m *MsgBuyCardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCardResponse proto.InternalMessageInfo

type MsgRemoveSellOffer struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SellOfferId uint64 `protobuf:"varint,2,opt,name=sellOfferId,proto3" json:"sellOfferId,omitempty"`
}

func (m *MsgRemoveSellOffer) Reset()         { *m = MsgRemoveSellOffer{} }
func (m *MsgRemoveSellOffer) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSellOffer) ProtoMessage()    {}
func (*MsgRemoveSellOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{46}
}
func (m *MsgRemoveSellOffer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSellOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSellOffer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSellOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSellOffer.Merge(m, src)
}
func (m *MsgRemoveSellOffer) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSellOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSellOffer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSellOffer proto.InternalMessageInfo

func (m *MsgRemoveSellOffer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveSellOffer) GetSellOfferId() uint64 {
	if m != nil {
		return m.SellOfferId
	}
	return 0
}

type MsgRemoveSellOfferResponse struct {
}

func (m *MsgRemoveSellOfferResponse) Reset()         { *m = MsgRemoveSellOfferResponse{} }
func (m *MsgRemoveSellOfferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSellOfferResponse) ProtoMessage()    {}
func (*MsgRemoveSellOfferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{47}
}
func (m *MsgRemoveSellOfferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSellOfferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSellOfferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSellOfferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSellOfferResponse.Merge(m, src)
}
func (m *MsgRemoveSellOfferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSellOfferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSellOfferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSellOfferResponse proto.InternalMessageInfo

type MsgAddArtworkToCollection struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId uint64 `protobuf:"varint,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	Image        []byte `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
}

func (m *MsgAddArtworkToCollection) Reset()         { *m = MsgAddArtworkToCollection{} }
func (m *MsgAddArtworkToCollection) String() string { return proto.CompactTextString(m) }
func (*MsgAddArtworkToCollection) ProtoMessage()    {}
func (*MsgAddArtworkToCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{48}
}
func (m *MsgAddArtworkToCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddArtworkToCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddArtworkToCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddArtworkToCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddArtworkToCollection.Merge(m, src)
}
func (m *MsgAddArtworkToCollection) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddArtworkToCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddArtworkToCollection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddArtworkToCollection proto.InternalMessageInfo

func (m *MsgAddArtworkToCollection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddArtworkToCollection) GetCollectionId() uint64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *MsgAddArtworkToCollection) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

type MsgAddArtworkToCollectionResponse struct {
}

func (m *MsgAddArtworkToCollectionResponse) Reset()         { *m = MsgAddArtworkToCollectionResponse{} }
func (m *MsgAddArtworkToCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddArtworkToCollectionResponse) ProtoMessage()    {}
func (*MsgAddArtworkToCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{49}
}
func (m *MsgAddArtworkToCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddArtworkToCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddArtworkToCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddArtworkToCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddArtworkToCollectionResponse.Merge(m, src)
}
func (m *MsgAddArtworkToCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddArtworkToCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddArtworkToCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddArtworkToCollectionResponse proto.InternalMessageInfo

type MsgAddStoryToCollection struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CollectionId uint64 `protobuf:"varint,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	Story        string `protobuf:"bytes,3,opt,name=story,proto3" json:"story,omitempty"`
}

func (m *MsgAddStoryToCollection) Reset()         { *m = MsgAddStoryToCollection{} }
func (m *MsgAddStoryToCollection) String() string { return proto.CompactTextString(m) }
func (*MsgAddStoryToCollection) ProtoMessage()    {}
func (*MsgAddStoryToCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{50}
}
func (m *MsgAddStoryToCollection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddStoryToCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddStoryToCollection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddStoryToCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddStoryToCollection.Merge(m, src)
}
func (m *MsgAddStoryToCollection) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddStoryToCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddStoryToCollection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddStoryToCollection proto.InternalMessageInfo

func (m *MsgAddStoryToCollection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddStoryToCollection) GetCollectionId() uint64 {
	if m != nil {
		return m.CollectionId
	}
	return 0
}

func (m *MsgAddStoryToCollection) GetStory() string {
	if m != nil {
		return m.Story
	}
	return ""
}

type MsgAddStoryToCollectionResponse struct {
}

func (m *MsgAddStoryToCollectionResponse) Reset()         { *m = MsgAddStoryToCollectionResponse{} }
func (m *MsgAddStoryToCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddStoryToCollectionResponse) ProtoMessage()    {}
func (*MsgAddStoryToCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{51}
}
func (m *MsgAddStoryToCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddStoryToCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddStoryToCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddStoryToCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddStoryToCollectionResponse.Merge(m, src)
}
func (m *MsgAddStoryToCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddStoryToCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddStoryToCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddStoryToCollectionResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("DecentralCardGame.cardchain.cardchain.Outcome", Outcome_name, Outcome_value)
	proto.RegisterType((*MsgCreateuser)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateuser")
	proto.RegisterType((*MsgCreateuserResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateuserResponse")
	proto.RegisterType((*MsgBuyCardScheme)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCardScheme")
	proto.RegisterType((*MsgBuyCardSchemeResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCardSchemeResponse")
	proto.RegisterType((*MsgVoteCard)(nil), "DecentralCardGame.cardchain.cardchain.MsgVoteCard")
	proto.RegisterType((*MsgVoteCardResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgVoteCardResponse")
	proto.RegisterType((*MsgSaveCardContent)(nil), "DecentralCardGame.cardchain.cardchain.MsgSaveCardContent")
	proto.RegisterType((*MsgSaveCardContentResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSaveCardContentResponse")
	proto.RegisterType((*MsgTransferCard)(nil), "DecentralCardGame.cardchain.cardchain.MsgTransferCard")
	proto.RegisterType((*MsgTransferCardResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgTransferCardResponse")
	proto.RegisterType((*MsgDonateToCard)(nil), "DecentralCardGame.cardchain.cardchain.MsgDonateToCard")
	proto.RegisterType((*MsgDonateToCardResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgDonateToCardResponse")
	proto.RegisterType((*MsgAddArtwork)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddArtwork")
	proto.RegisterType((*MsgAddArtworkResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddArtworkResponse")
	proto.RegisterType((*MsgSubmitCopyrightProposal)(nil), "DecentralCardGame.cardchain.cardchain.MsgSubmitCopyrightProposal")
	proto.RegisterType((*MsgSubmitCopyrightProposalResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSubmitCopyrightProposalResponse")
	proto.RegisterType((*MsgChangeArtist)(nil), "DecentralCardGame.cardchain.cardchain.MsgChangeArtist")
	proto.RegisterType((*MsgChangeArtistResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgChangeArtistResponse")
	proto.RegisterType((*MsgRegisterForCouncil)(nil), "DecentralCardGame.cardchain.cardchain.MsgRegisterForCouncil")
	proto.RegisterType((*MsgRegisterForCouncilResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRegisterForCouncilResponse")
	proto.RegisterType((*MsgReportMatch)(nil), "DecentralCardGame.cardchain.cardchain.MsgReportMatch")
	proto.RegisterType((*MsgReportMatchResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgReportMatchResponse")
	proto.RegisterType((*MsgSubmitMatchReporterProposal)(nil), "DecentralCardGame.cardchain.cardchain.MsgSubmitMatchReporterProposal")
	proto.RegisterType((*MsgSubmitMatchReporterProposalResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSubmitMatchReporterProposalResponse")
	proto.RegisterType((*MsgApointMatchReporter)(nil), "DecentralCardGame.cardchain.cardchain.MsgApointMatchReporter")
	proto.RegisterType((*MsgApointMatchReporterResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgApointMatchReporterResponse")
	proto.RegisterType((*MsgCreateCollection)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateCollection")
	proto.RegisterType((*MsgCreateCollectionResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateCollectionResponse")
	proto.RegisterType((*MsgAddCardToCollection)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddCardToCollection")
	proto.RegisterType((*MsgAddCardToCollectionResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddCardToCollectionResponse")
	proto.RegisterType((*MsgFinalizeCollection)(nil), "DecentralCardGame.cardchain.cardchain.MsgFinalizeCollection")
	proto.RegisterType((*MsgFinalizeCollectionResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgFinalizeCollectionResponse")
	proto.RegisterType((*MsgBuyCollection)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCollection")
	proto.RegisterType((*MsgBuyCollectionResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCollectionResponse")
	proto.RegisterType((*MsgRemoveCardFromCollection)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveCardFromCollection")
	proto.RegisterType((*MsgRemoveCardFromCollectionResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveCardFromCollectionResponse")
	proto.RegisterType((*MsgRemoveContributorFromCollection)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveContributorFromCollection")
	proto.RegisterType((*MsgRemoveContributorFromCollectionResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveContributorFromCollectionResponse")
	proto.RegisterType((*MsgAddContributorToCollection)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddContributorToCollection")
	proto.RegisterType((*MsgAddContributorToCollectionResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddContributorToCollectionResponse")
	proto.RegisterType((*MsgSubmitCollectionProposal)(nil), "DecentralCardGame.cardchain.cardchain.MsgSubmitCollectionProposal")
	proto.RegisterType((*MsgSubmitCollectionProposalResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSubmitCollectionProposalResponse")
	proto.RegisterType((*MsgCreateSellOffer)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateSellOffer")
	proto.RegisterType((*MsgCreateSellOfferResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateSellOfferResponse")
	proto.RegisterType((*MsgBuyCard)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCard")
	proto.RegisterType((*MsgBuyCardResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCardResponse")
	proto.RegisterType((*MsgRemoveSellOffer)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveSellOffer")
	proto.RegisterType((*MsgRemoveSellOfferResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveSellOfferResponse")
	proto.RegisterType((*MsgAddArtworkToCollection)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddArtworkToCollection")
	proto.RegisterType((*MsgAddArtworkToCollectionResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddArtworkToCollectionResponse")
	proto.RegisterType((*MsgAddStoryToCollection)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddStoryToCollection")
	proto.RegisterType((*MsgAddStoryToCollectionResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddStoryToCollectionResponse")
}

func init() { proto.RegisterFile("cardchain/tx.proto", fileDescriptor_5cfa59c76aced81c) }

var fileDescriptor_5cfa59c76aced81c = []byte{
	// 1654 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0xcd, 0x6f, 0x13, 0x47,
	0x14, 0xcf, 0x10, 0xe7, 0x83, 0x17, 0x3e, 0xa2, 0x25, 0x80, 0x59, 0x8a, 0x13, 0x96, 0x52, 0x10,
	0x6a, 0x13, 0x91, 0xd2, 0x8f, 0xa0, 0x02, 0xb5, 0x1d, 0x02, 0xa9, 0xea, 0x42, 0x9d, 0x50, 0xd4,
	0xf6, 0x50, 0x6d, 0x76, 0x27, 0xce, 0x0a, 0x7b, 0xc7, 0x9d, 0x59, 0x27, 0x98, 0x53, 0xa5, 0x7e,
	0x48, 0x9c, 0x5a, 0x71, 0xaa, 0x54, 0xa9, 0x52, 0x25, 0xd4, 0x4a, 0x3d, 0x55, 0xea, 0x1f, 0xd0,
	0x2b, 0x47, 0x8e, 0xa8, 0x07, 0x54, 0xc1, 0xb9, 0xff, 0x43, 0x35, 0xb3, 0xbb, 0xe3, 0x5d, 0x7b,
	0xd7, 0xf1, 0x6c, 0xdc, 0x13, 0xf3, 0xc6, 0xfb, 0x7b, 0xef, 0x37, 0x6f, 0xde, 0xcc, 0xbc, 0x1f,
	0x01, 0xcd, 0x32, 0xa9, 0x6d, 0x6d, 0x99, 0x8e, 0xbb, 0xe0, 0xdd, 0x9f, 0x6f, 0x52, 0xe2, 0x11,
	0xed, 0xec, 0x32, 0xb6, 0xb0, 0xeb, 0x51, 0xb3, 0x5e, 0x36, 0xa9, 0x7d, 0xc3, 0x6c, 0xe0, 0x79,
	0xf9, 0x55, 0x67, 0xa4, 0xcf, 0xd4, 0x48, 0x8d, 0x08, 0xc4, 0x02, 0x1f, 0xf9, 0x60, 0xe3, 0x53,
	0x38, 0x58, 0x61, 0xb5, 0x32, 0xc5, 0xa6, 0x87, 0x5b, 0x0c, 0x53, 0x2d, 0x0f, 0x13, 0x16, 0xb7,
	0x08, 0xcd, 0xa3, 0x39, 0x74, 0x7e, 0x7f, 0x35, 0x34, 0xf9, 0x2f, 0x2e, 0xde, 0xb9, 0xc3, 0x30,
	0xcd, 0xef, 0xf3, 0x7f, 0x09, 0x4c, 0x6d, 0x06, 0xc6, 0xcc, 0xba, 0x63, 0xb2, 0xfc, 0xa8, 0x98,
	0xf7, 0x0d, 0xe3, 0x38, 0x1c, 0x8d, 0xb9, 0xae, 0x62, 0xd6, 0x24, 0x2e, 0xc3, 0xc6, 0xb7, 0x08,
	0xa6, 0x2b, 0xac, 0x56, 0x6a, 0xb5, 0x39, 0xe1, 0x35, 0x6b, 0x0b, 0x37, 0x70, 0x9f, 0xb8, 0x45,
	0x18, 0xdd, 0x70, 0x6c, 0x3f, 0x66, 0x69, 0xe1, 0xc9, 0xf3, 0xd9, 0x91, 0xbf, 0x9f, 0xcf, 0x9e,
	0xab, 0x39, 0xde, 0x56, 0x6b, 0x63, 0xde, 0x22, 0x8d, 0x05, 0x8b, 0xb0, 0x06, 0x61, 0xc1, 0x3f,
	0x6f, 0x30, 0xfb, 0xde, 0x82, 0xd7, 0x6e, 0x62, 0x36, 0x5f, 0x26, 0x8e, 0x5b, 0xe5, 0x58, 0x4e,
	0x70, 0xa3, 0xd5, 0xc6, 0x34, 0x24, 0x28, 0x0c, 0x43, 0x87, 0x7c, 0x37, 0x0d, 0xc9, 0xf1, 0x4b,
	0x98, 0xaa, 0xb0, 0xda, 0x27, 0xc4, 0xc3, 0xfc, 0xc7, 0x3e, 0xec, 0x8e, 0xc1, 0x38, 0xcf, 0xf1,
	0xaa, 0x4f, 0x30, 0x57, 0x0d, 0x2c, 0x4d, 0x87, 0xc9, 0x6d, 0xe2, 0xe1, 0xf5, 0x76, 0x13, 0x07,
	0x51, 0xa5, 0xcd, 0xe9, 0xf0, 0x31, 0xcd, 0xe7, 0x7c, 0x3a, 0xc2, 0x30, 0x8e, 0xc2, 0x91, 0x48,
	0x48, 0xc9, 0xe4, 0x31, 0x02, 0xad, 0xc2, 0x6a, 0x6b, 0xe6, 0xb6, 0x98, 0x2f, 0x13, 0xd7, 0xc3,
	0xae, 0x97, 0x81, 0x11, 0x47, 0xf8, 0x60, 0x41, 0xe8, 0x40, 0x35, 0x34, 0x39, 0x1f, 0x97, 0x78,
	0x98, 0x85, 0x7c, 0x84, 0xc1, 0x67, 0xc9, 0x8e, 0x8b, 0x69, 0x7e, 0xcc, 0x9f, 0x15, 0x06, 0xf7,
	0x6e, 0x52, 0xcf, 0x61, 0x5e, 0x7e, 0x5c, 0x4c, 0x07, 0x96, 0xf1, 0x0a, 0xe8, 0xbd, 0x2c, 0xe5,
	0x22, 0xbe, 0x80, 0xc3, 0x15, 0x56, 0x5b, 0xa7, 0xa6, 0xcb, 0x36, 0x31, 0xcd, 0x9e, 0x52, 0x8a,
	0x2d, 0xec, 0x6c, 0xcb, 0xcc, 0x49, 0xdb, 0x38, 0x01, 0xc7, 0xbb, 0x02, 0xc8, 0xd8, 0xbf, 0x22,
	0x11, 0x7c, 0x99, 0xb8, 0xa6, 0x87, 0xd7, 0x49, 0xc6, 0xe0, 0x79, 0x98, 0xb0, 0xb9, 0x07, 0x12,
	0x16, 0x51, 0x68, 0x6a, 0x37, 0x60, 0xdc, 0x6c, 0x90, 0x96, 0xeb, 0xf9, 0xa4, 0xd4, 0x4b, 0x34,
	0x80, 0x07, 0x6b, 0x88, 0xf2, 0x8c, 0x94, 0x23, 0x3f, 0xa6, 0x45, 0xdb, 0x2e, 0x52, 0x6f, 0x87,
	0xd0, 0x7b, 0x19, 0x16, 0x30, 0x03, 0x63, 0x4e, 0xc3, 0xac, 0xe1, 0x60, 0xf3, 0x7d, 0x83, 0xfb,
	0xd9, 0x6c, 0xd5, 0xeb, 0x45, 0xea, 0xb3, 0x9f, 0xac, 0x86, 0x66, 0x70, 0x7c, 0x3b, 0x21, 0x25,
	0x97, 0x6f, 0x90, 0xbf, 0xd5, 0xad, 0x8d, 0x86, 0xe3, 0x95, 0x49, 0xb3, 0x4d, 0x9d, 0xda, 0x96,
	0x77, 0x9b, 0x92, 0x26, 0x61, 0x66, 0x3d, 0x03, 0xb3, 0x39, 0x98, 0xb2, 0x31, 0xb3, 0xa8, 0xd3,
	0xf4, 0x1c, 0xe2, 0x06, 0xe9, 0x8d, 0x4e, 0x69, 0x1a, 0xe4, 0xea, 0x8e, 0x7b, 0x2f, 0xd8, 0x75,
	0x31, 0x36, 0x5e, 0x05, 0x23, 0x9d, 0x85, 0x24, 0xfb, 0xb9, 0xd8, 0xfb, 0xf2, 0x96, 0xe9, 0xd6,
	0x70, 0x51, 0x54, 0xea, 0x00, 0x04, 0x97, 0x63, 0x04, 0x97, 0x23, 0x35, 0x3f, 0x1a, 0xab, 0x79,
	0x7f, 0xc3, 0xa2, 0xce, 0x65, 0xdc, 0x8b, 0x22, 0x7b, 0x55, 0x5c, 0x73, 0x98, 0x87, 0xe9, 0x0a,
	0xa1, 0x65, 0xd2, 0x72, 0x2d, 0xa7, 0x4f, 0x7a, 0x8c, 0x59, 0x38, 0x95, 0x08, 0x91, 0x3e, 0x9f,
	0x21, 0x38, 0x24, 0xbe, 0x68, 0x12, 0xea, 0x55, 0x4c, 0xcf, 0xda, 0xea, 0x7f, 0x5b, 0x37, 0xeb,
	0x66, 0x1b, 0xd3, 0x62, 0x78, 0x5b, 0x07, 0x66, 0xe7, 0x97, 0x52, 0x58, 0xc9, 0x81, 0x19, 0xae,
	0x9f, 0x15, 0xf3, 0x63, 0x73, 0xa3, 0xe1, 0xfa, 0x59, 0x51, 0xce, 0x97, 0xf2, 0xe3, 0x91, 0xf9,
	0x92, 0x76, 0x13, 0x26, 0x48, 0xcb, 0xb3, 0x48, 0x03, 0xe7, 0x27, 0xe6, 0xd0, 0xf9, 0x43, 0x8b,
	0xf3, 0xf3, 0x03, 0xbd, 0x45, 0xf3, 0xb7, 0x7c, 0x54, 0x35, 0x84, 0x1b, 0x8b, 0x70, 0x2c, 0xbe,
	0xb2, 0x70, 0xd1, 0x9c, 0x6d, 0x83, 0x4f, 0xac, 0xda, 0x62, 0x85, 0xb9, 0x6a, 0x68, 0x1a, 0x8f,
	0x10, 0x14, 0x64, 0x05, 0x04, 0x20, 0x8e, 0xc7, 0x74, 0x80, 0x5a, 0x14, 0x77, 0x89, 0xff, 0x75,
	0x90, 0x1f, 0x69, 0x8b, 0xa3, 0x8e, 0x9b, 0x84, 0x39, 0x9e, 0x3c, 0xea, 0xbe, 0xd9, 0x5d, 0xa9,
	0xb9, 0x9e, 0x4a, 0x35, 0xce, 0xc3, 0x6b, 0xfd, 0x39, 0xc9, 0xdd, 0xfc, 0x48, 0x2c, 0xb9, 0xd8,
	0x24, 0x8e, 0x1b, 0xff, 0x32, 0x1b, 0x6b, 0x63, 0x4e, 0x64, 0x23, 0xc1, 0x9f, 0x8c, 0xf8, 0x0b,
	0x12, 0x2f, 0x8c, 0xff, 0x22, 0x97, 0x49, 0xbd, 0x8e, 0x2d, 0x71, 0xba, 0xd2, 0xe3, 0x69, 0x90,
	0x73, 0xcd, 0x06, 0x0e, 0x62, 0x89, 0x71, 0xda, 0x61, 0xe0, 0xb9, 0x61, 0x1e, 0xa1, 0xed, 0xbb,
	0xd4, 0xe9, 0x3c, 0x6d, 0xd1, 0x29, 0xcd, 0x80, 0x03, 0xfc, 0xc5, 0xa1, 0xce, 0x46, 0xcb, 0x23,
	0x94, 0x89, 0x22, 0xdb, 0x5f, 0x8d, 0xcd, 0x19, 0xa7, 0xe0, 0x64, 0x02, 0x45, 0xb9, 0x04, 0xd7,
	0x4f, 0x9a, 0x6d, 0xf3, 0xf2, 0x5a, 0x27, 0x03, 0x2d, 0x42, 0x84, 0x0d, 0xbf, 0x93, 0x97, 0x4f,
	0x6c, 0x2e, 0x72, 0x35, 0x8d, 0x46, 0xaf, 0xa6, 0x30, 0xa9, 0xbd, 0xf1, 0x24, 0xa3, 0x3b, 0xe2,
	0xa0, 0xaf, 0x38, 0xae, 0x59, 0x77, 0x1e, 0xe0, 0x61, 0x11, 0x0a, 0x2e, 0x83, 0x5e, 0xb7, 0x32,
	0xee, 0x6d, 0xd9, 0x43, 0x0d, 0x2b, 0x64, 0xa7, 0x1d, 0xea, 0x8d, 0xc6, 0xc4, 0xb6, 0x54, 0x71,
	0x83, 0xf8, 0xef, 0xfb, 0x0a, 0x25, 0x8d, 0xff, 0x3d, 0xf9, 0x67, 0xe1, 0x4c, 0x9f, 0xa0, 0x92,
	0xdb, 0xb6, 0x78, 0x08, 0x82, 0xcf, 0x3a, 0xb5, 0x34, 0x54, 0x8a, 0x1a, 0xe4, 0x78, 0x0b, 0x1b,
	0x94, 0xbc, 0x18, 0x1b, 0xaf, 0xc3, 0x85, 0xdd, 0xe3, 0x46, 0x5e, 0xf0, 0x53, 0x41, 0x25, 0x75,
	0x3e, 0x1d, 0x62, 0x01, 0x27, 0x11, 0x3c, 0x07, 0x67, 0xfb, 0x86, 0x8c, 0x3c, 0x92, 0x27, 0x23,
	0x4f, 0x69, 0xf8, 0xf3, 0x00, 0xb7, 0xe8, 0x20, 0x65, 0xe5, 0xef, 0x62, 0x9a, 0x73, 0xc9, 0xe1,
	0xa1, 0xdf, 0xe6, 0xfa, 0x27, 0x7f, 0x0d, 0xd7, 0xeb, 0xb7, 0x36, 0x37, 0xfb, 0xde, 0x85, 0x1a,
	0xe4, 0x78, 0x9d, 0x04, 0x31, 0xc5, 0x58, 0xbb, 0x0e, 0x63, 0x4d, 0xea, 0x58, 0x41, 0xc7, 0xad,
	0xde, 0x89, 0xf9, 0xe8, 0xa0, 0x97, 0xed, 0xa2, 0x22, 0x99, 0xde, 0x04, 0xe8, 0xc8, 0x86, 0x3e,
	0x04, 0xf9, 0x85, 0x18, 0x82, 0x65, 0x6e, 0xa2, 0x53, 0xc6, 0x8c, 0x58, 0x72, 0xe0, 0x29, 0x72,
	0xb2, 0x35, 0x59, 0x57, 0x83, 0x24, 0x62, 0xf7, 0x38, 0xfe, 0x7a, 0xba, 0x3c, 0xca, 0x78, 0x04,
	0x4e, 0xc4, 0x1a, 0xbd, 0x21, 0x56, 0x65, 0x62, 0xcf, 0x69, 0x9c, 0x81, 0xd3, 0xa9, 0x01, 0x25,
	0xab, 0x86, 0xe8, 0xad, 0x8a, 0xb6, 0xbd, 0xc6, 0x5f, 0x90, 0xe1, 0x72, 0x12, 0x8f, 0x52, 0xa8,
	0x05, 0x85, 0x61, 0x9c, 0x86, 0xd9, 0x94, 0x70, 0x21, 0xa3, 0x0b, 0x97, 0x60, 0x22, 0xe8, 0x5b,
	0xb4, 0x49, 0xc8, 0x15, 0xef, 0x12, 0x77, 0x7a, 0x84, 0x8f, 0x4a, 0x7c, 0x84, 0xf8, 0x68, 0x99,
	0x9a, 0x3b, 0xd3, 0xfb, 0xb4, 0x29, 0x98, 0x28, 0x6e, 0xf0, 0xa7, 0xd7, 0x9e, 0x1e, 0x5d, 0xfc,
	0xb7, 0x00, 0xa3, 0x15, 0x56, 0xd3, 0xbe, 0x42, 0x00, 0x11, 0x99, 0x7d, 0x69, 0xc0, 0x4e, 0x29,
	0xa6, 0xa0, 0xf5, 0xf7, 0xb2, 0xa0, 0x64, 0x2b, 0xf5, 0x10, 0xc1, 0xc1, 0xb8, 0xe8, 0x7e, 0x67,
	0x70, 0x7f, 0x31, 0xa0, 0x7e, 0x2d, 0x23, 0x50, 0x72, 0x79, 0x00, 0x93, 0x52, 0x5c, 0x2f, 0x0e,
	0xee, 0x2c, 0xc4, 0xe8, 0x97, 0xd5, 0x31, 0x32, 0xf6, 0xf7, 0x08, 0x0e, 0x77, 0xcb, 0xe9, 0xa5,
	0xc1, 0xfd, 0x75, 0x41, 0xf5, 0x62, 0x66, 0xa8, 0x64, 0xf4, 0x1d, 0x82, 0x03, 0x31, 0x71, 0xfc,
	0xf6, 0xe0, 0x3e, 0xa3, 0x38, 0xfd, 0x6a, 0x36, 0x5c, 0x8c, 0x48, 0x4c, 0x28, 0x2b, 0x10, 0x89,
	0xe2, 0x54, 0x88, 0x24, 0x09, 0x5e, 0x71, 0x5c, 0x22, 0x72, 0x57, 0xe1, 0xb8, 0x74, 0x50, 0x2a,
	0xc7, 0xa5, 0x57, 0xe7, 0x6a, 0xbf, 0x21, 0x38, 0x9e, 0x26, 0x72, 0x55, 0xf6, 0x3c, 0xd9, 0x85,
	0xbe, 0xba, 0x67, 0x17, 0xb1, 0x5d, 0x8b, 0x49, 0x5c, 0x85, 0x5d, 0x8b, 0xe2, 0x54, 0x76, 0x2d,
	0x49, 0xf5, 0x6a, 0x3f, 0x22, 0xd0, 0x12, 0x34, 0xaf, 0xc2, 0x3e, 0xf4, 0xa2, 0xf5, 0xe5, 0xbd,
	0xa0, 0x25, 0xb5, 0xaf, 0x11, 0x4c, 0x45, 0x95, 0xf3, 0x5b, 0x2a, 0x5e, 0x25, 0x4c, 0xbf, 0x92,
	0x09, 0x26, 0x59, 0xfc, 0x89, 0xe0, 0x64, 0x3f, 0xc1, 0x7a, 0x5d, 0xb5, 0x28, 0x12, 0xdd, 0xe8,
	0x95, 0xa1, 0xb8, 0x91, 0xac, 0x7f, 0x42, 0x70, 0x24, 0x49, 0xa8, 0x2a, 0x24, 0x23, 0x01, 0xae,
	0x5f, 0xdf, 0x13, 0x5c, 0xb2, 0x7b, 0x84, 0x60, 0xba, 0x47, 0xd3, 0x5e, 0x56, 0x7d, 0x29, 0x3b,
	0x58, 0xbd, 0x94, 0x1d, 0x1b, 0x4f, 0x59, 0x82, 0x4c, 0xbd, 0xa2, 0x74, 0x25, 0x75, 0xc3, 0x95,
	0x52, 0x96, 0x2e, 0x5a, 0xc5, 0x39, 0x4d, 0x90, 0xac, 0x0a, 0xe7, 0xb4, 0x17, 0xad, 0x72, 0x4e,
	0xd3, 0x75, 0xad, 0x6c, 0x52, 0x3a, 0xac, 0x14, 0x9b, 0x94, 0x0e, 0xa1, 0x6b, 0x19, 0x81, 0x92,
	0xcb, 0xef, 0x08, 0xf2, 0xa9, 0x9a, 0xb7, 0xa4, 0x72, 0x13, 0x24, 0xfb, 0xd0, 0x3f, 0xd8, 0xbb,
	0x0f, 0x49, 0xf6, 0x2f, 0x04, 0xb3, 0xbb, 0x89, 0xe0, 0x55, 0xe5, 0x78, 0x69, 0xae, 0xf4, 0x8f,
	0x87, 0xe6, 0x4a, 0xae, 0xe0, 0x0f, 0x04, 0x7a, 0x1f, 0x81, 0xbc, 0xac, 0x56, 0xfb, 0xc9, 0x5e,
	0xf4, 0x0f, 0x87, 0xe1, 0x25, 0x56, 0x21, 0xa9, 0xba, 0xb9, 0xa4, 0xfe, 0xc2, 0x77, 0xfb, 0x50,
	0xa9, 0x90, 0xdd, 0x24, 0xb6, 0xe8, 0x7b, 0xbb, 0xf5, 0xf5, 0x92, 0xea, 0x5d, 0x27, 0xa1, 0x2a,
	0x7d, 0x6f, 0x8a, 0x94, 0xd6, 0x76, 0x60, 0x22, 0xd4, 0xd1, 0x17, 0x95, 0x15, 0x85, 0xbe, 0xa4,
	0x0c, 0x89, 0xa5, 0xa2, 0x5b, 0x61, 0x2f, 0xa9, 0x56, 0x74, 0xa6, 0x54, 0xa4, 0xa8, 0x70, 0xed,
	0x31, 0x82, 0x63, 0x29, 0x1a, 0xfc, 0xfd, 0x2c, 0x6d, 0x6c, 0xac, 0xe8, 0x6f, 0xee, 0xd5, 0x83,
	0xa4, 0xf9, 0x33, 0x82, 0x99, 0x44, 0x51, 0x7e, 0x55, 0x29, 0x44, 0x0f, 0x5e, 0x5f, 0xd9, 0x1b,
	0x3e, 0x24, 0x58, 0xaa, 0x3e, 0x79, 0x51, 0x40, 0x4f, 0x5f, 0x14, 0xd0, 0x3f, 0x2f, 0x0a, 0xe8,
	0x87, 0x97, 0x85, 0x91, 0xa7, 0x2f, 0x0b, 0x23, 0xcf, 0x5e, 0x16, 0x46, 0x3e, 0x7b, 0x37, 0xf2,
	0xbf, 0x40, 0x3d, 0xb1, 0x16, 0xca, 0xf2, 0x0f, 0xeb, 0xf7, 0x17, 0x22, 0x7f, 0x64, 0x6f, 0x37,
	0x31, 0xdb, 0x18, 0x17, 0x7f, 0x2b, 0x7f, 0xf3, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x90,
	0x09, 0x6f, 0x7e, 0x1f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	Createuser(ctx context.Context, in *MsgCreateuser, opts ...grpc.CallOption) (*MsgCreateuserResponse, error)
	BuyCardScheme(ctx context.Context, in *MsgBuyCardScheme, opts ...grpc.CallOption) (*MsgBuyCardSchemeResponse, error)
	VoteCard(ctx context.Context, in *MsgVoteCard, opts ...grpc.CallOption) (*MsgVoteCardResponse, error)
	SaveCardContent(ctx context.Context, in *MsgSaveCardContent, opts ...grpc.CallOption) (*MsgSaveCardContentResponse, error)
	TransferCard(ctx context.Context, in *MsgTransferCard, opts ...grpc.CallOption) (*MsgTransferCardResponse, error)
	DonateToCard(ctx context.Context, in *MsgDonateToCard, opts ...grpc.CallOption) (*MsgDonateToCardResponse, error)
	AddArtwork(ctx context.Context, in *MsgAddArtwork, opts ...grpc.CallOption) (*MsgAddArtworkResponse, error)
	SubmitCopyrightProposal(ctx context.Context, in *MsgSubmitCopyrightProposal, opts ...grpc.CallOption) (*MsgSubmitCopyrightProposalResponse, error)
	ChangeArtist(ctx context.Context, in *MsgChangeArtist, opts ...grpc.CallOption) (*MsgChangeArtistResponse, error)
	RegisterForCouncil(ctx context.Context, in *MsgRegisterForCouncil, opts ...grpc.CallOption) (*MsgRegisterForCouncilResponse, error)
	ReportMatch(ctx context.Context, in *MsgReportMatch, opts ...grpc.CallOption) (*MsgReportMatchResponse, error)
	SubmitMatchReporterProposal(ctx context.Context, in *MsgSubmitMatchReporterProposal, opts ...grpc.CallOption) (*MsgSubmitMatchReporterProposalResponse, error)
	ApointMatchReporter(ctx context.Context, in *MsgApointMatchReporter, opts ...grpc.CallOption) (*MsgApointMatchReporterResponse, error)
	CreateCollection(ctx context.Context, in *MsgCreateCollection, opts ...grpc.CallOption) (*MsgCreateCollectionResponse, error)
	AddCardToCollection(ctx context.Context, in *MsgAddCardToCollection, opts ...grpc.CallOption) (*MsgAddCardToCollectionResponse, error)
	FinalizeCollection(ctx context.Context, in *MsgFinalizeCollection, opts ...grpc.CallOption) (*MsgFinalizeCollectionResponse, error)
	BuyCollection(ctx context.Context, in *MsgBuyCollection, opts ...grpc.CallOption) (*MsgBuyCollectionResponse, error)
	RemoveCardFromCollection(ctx context.Context, in *MsgRemoveCardFromCollection, opts ...grpc.CallOption) (*MsgRemoveCardFromCollectionResponse, error)
	RemoveContributorFromCollection(ctx context.Context, in *MsgRemoveContributorFromCollection, opts ...grpc.CallOption) (*MsgRemoveContributorFromCollectionResponse, error)
	AddContributorToCollection(ctx context.Context, in *MsgAddContributorToCollection, opts ...grpc.CallOption) (*MsgAddContributorToCollectionResponse, error)
	SubmitCollectionProposal(ctx context.Context, in *MsgSubmitCollectionProposal, opts ...grpc.CallOption) (*MsgSubmitCollectionProposalResponse, error)
	CreateSellOffer(ctx context.Context, in *MsgCreateSellOffer, opts ...grpc.CallOption) (*MsgCreateSellOfferResponse, error)
	BuyCard(ctx context.Context, in *MsgBuyCard, opts ...grpc.CallOption) (*MsgBuyCardResponse, error)
	RemoveSellOffer(ctx context.Context, in *MsgRemoveSellOffer, opts ...grpc.CallOption) (*MsgRemoveSellOfferResponse, error)
	AddArtworkToCollection(ctx context.Context, in *MsgAddArtworkToCollection, opts ...grpc.CallOption) (*MsgAddArtworkToCollectionResponse, error)
	AddStoryToCollection(ctx context.Context, in *MsgAddStoryToCollection, opts ...grpc.CallOption) (*MsgAddStoryToCollectionResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Createuser(ctx context.Context, in *MsgCreateuser, opts ...grpc.CallOption) (*MsgCreateuserResponse, error) {
	out := new(MsgCreateuserResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/Createuser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BuyCardScheme(ctx context.Context, in *MsgBuyCardScheme, opts ...grpc.CallOption) (*MsgBuyCardSchemeResponse, error) {
	out := new(MsgBuyCardSchemeResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/BuyCardScheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VoteCard(ctx context.Context, in *MsgVoteCard, opts ...grpc.CallOption) (*MsgVoteCardResponse, error) {
	out := new(MsgVoteCardResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/VoteCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SaveCardContent(ctx context.Context, in *MsgSaveCardContent, opts ...grpc.CallOption) (*MsgSaveCardContentResponse, error) {
	out := new(MsgSaveCardContentResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SaveCardContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) TransferCard(ctx context.Context, in *MsgTransferCard, opts ...grpc.CallOption) (*MsgTransferCardResponse, error) {
	out := new(MsgTransferCardResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/TransferCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DonateToCard(ctx context.Context, in *MsgDonateToCard, opts ...grpc.CallOption) (*MsgDonateToCardResponse, error) {
	out := new(MsgDonateToCardResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/DonateToCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddArtwork(ctx context.Context, in *MsgAddArtwork, opts ...grpc.CallOption) (*MsgAddArtworkResponse, error) {
	out := new(MsgAddArtworkResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/AddArtwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubmitCopyrightProposal(ctx context.Context, in *MsgSubmitCopyrightProposal, opts ...grpc.CallOption) (*MsgSubmitCopyrightProposalResponse, error) {
	out := new(MsgSubmitCopyrightProposalResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SubmitCopyrightProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ChangeArtist(ctx context.Context, in *MsgChangeArtist, opts ...grpc.CallOption) (*MsgChangeArtistResponse, error) {
	out := new(MsgChangeArtistResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/ChangeArtist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RegisterForCouncil(ctx context.Context, in *MsgRegisterForCouncil, opts ...grpc.CallOption) (*MsgRegisterForCouncilResponse, error) {
	out := new(MsgRegisterForCouncilResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/RegisterForCouncil", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ReportMatch(ctx context.Context, in *MsgReportMatch, opts ...grpc.CallOption) (*MsgReportMatchResponse, error) {
	out := new(MsgReportMatchResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/ReportMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubmitMatchReporterProposal(ctx context.Context, in *MsgSubmitMatchReporterProposal, opts ...grpc.CallOption) (*MsgSubmitMatchReporterProposalResponse, error) {
	out := new(MsgSubmitMatchReporterProposalResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SubmitMatchReporterProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ApointMatchReporter(ctx context.Context, in *MsgApointMatchReporter, opts ...grpc.CallOption) (*MsgApointMatchReporterResponse, error) {
	out := new(MsgApointMatchReporterResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/ApointMatchReporter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateCollection(ctx context.Context, in *MsgCreateCollection, opts ...grpc.CallOption) (*MsgCreateCollectionResponse, error) {
	out := new(MsgCreateCollectionResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/CreateCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddCardToCollection(ctx context.Context, in *MsgAddCardToCollection, opts ...grpc.CallOption) (*MsgAddCardToCollectionResponse, error) {
	out := new(MsgAddCardToCollectionResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/AddCardToCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) FinalizeCollection(ctx context.Context, in *MsgFinalizeCollection, opts ...grpc.CallOption) (*MsgFinalizeCollectionResponse, error) {
	out := new(MsgFinalizeCollectionResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/FinalizeCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BuyCollection(ctx context.Context, in *MsgBuyCollection, opts ...grpc.CallOption) (*MsgBuyCollectionResponse, error) {
	out := new(MsgBuyCollectionResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/BuyCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveCardFromCollection(ctx context.Context, in *MsgRemoveCardFromCollection, opts ...grpc.CallOption) (*MsgRemoveCardFromCollectionResponse, error) {
	out := new(MsgRemoveCardFromCollectionResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/RemoveCardFromCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveContributorFromCollection(ctx context.Context, in *MsgRemoveContributorFromCollection, opts ...grpc.CallOption) (*MsgRemoveContributorFromCollectionResponse, error) {
	out := new(MsgRemoveContributorFromCollectionResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/RemoveContributorFromCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddContributorToCollection(ctx context.Context, in *MsgAddContributorToCollection, opts ...grpc.CallOption) (*MsgAddContributorToCollectionResponse, error) {
	out := new(MsgAddContributorToCollectionResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/AddContributorToCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubmitCollectionProposal(ctx context.Context, in *MsgSubmitCollectionProposal, opts ...grpc.CallOption) (*MsgSubmitCollectionProposalResponse, error) {
	out := new(MsgSubmitCollectionProposalResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SubmitCollectionProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSellOffer(ctx context.Context, in *MsgCreateSellOffer, opts ...grpc.CallOption) (*MsgCreateSellOfferResponse, error) {
	out := new(MsgCreateSellOfferResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/CreateSellOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BuyCard(ctx context.Context, in *MsgBuyCard, opts ...grpc.CallOption) (*MsgBuyCardResponse, error) {
	out := new(MsgBuyCardResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/BuyCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveSellOffer(ctx context.Context, in *MsgRemoveSellOffer, opts ...grpc.CallOption) (*MsgRemoveSellOfferResponse, error) {
	out := new(MsgRemoveSellOfferResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/RemoveSellOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddArtworkToCollection(ctx context.Context, in *MsgAddArtworkToCollection, opts ...grpc.CallOption) (*MsgAddArtworkToCollectionResponse, error) {
	out := new(MsgAddArtworkToCollectionResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/AddArtworkToCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddStoryToCollection(ctx context.Context, in *MsgAddStoryToCollection, opts ...grpc.CallOption) (*MsgAddStoryToCollectionResponse, error) {
	out := new(MsgAddStoryToCollectionResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/AddStoryToCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	Createuser(context.Context, *MsgCreateuser) (*MsgCreateuserResponse, error)
	BuyCardScheme(context.Context, *MsgBuyCardScheme) (*MsgBuyCardSchemeResponse, error)
	VoteCard(context.Context, *MsgVoteCard) (*MsgVoteCardResponse, error)
	SaveCardContent(context.Context, *MsgSaveCardContent) (*MsgSaveCardContentResponse, error)
	TransferCard(context.Context, *MsgTransferCard) (*MsgTransferCardResponse, error)
	DonateToCard(context.Context, *MsgDonateToCard) (*MsgDonateToCardResponse, error)
	AddArtwork(context.Context, *MsgAddArtwork) (*MsgAddArtworkResponse, error)
	SubmitCopyrightProposal(context.Context, *MsgSubmitCopyrightProposal) (*MsgSubmitCopyrightProposalResponse, error)
	ChangeArtist(context.Context, *MsgChangeArtist) (*MsgChangeArtistResponse, error)
	RegisterForCouncil(context.Context, *MsgRegisterForCouncil) (*MsgRegisterForCouncilResponse, error)
	ReportMatch(context.Context, *MsgReportMatch) (*MsgReportMatchResponse, error)
	SubmitMatchReporterProposal(context.Context, *MsgSubmitMatchReporterProposal) (*MsgSubmitMatchReporterProposalResponse, error)
	ApointMatchReporter(context.Context, *MsgApointMatchReporter) (*MsgApointMatchReporterResponse, error)
	CreateCollection(context.Context, *MsgCreateCollection) (*MsgCreateCollectionResponse, error)
	AddCardToCollection(context.Context, *MsgAddCardToCollection) (*MsgAddCardToCollectionResponse, error)
	FinalizeCollection(context.Context, *MsgFinalizeCollection) (*MsgFinalizeCollectionResponse, error)
	BuyCollection(context.Context, *MsgBuyCollection) (*MsgBuyCollectionResponse, error)
	RemoveCardFromCollection(context.Context, *MsgRemoveCardFromCollection) (*MsgRemoveCardFromCollectionResponse, error)
	RemoveContributorFromCollection(context.Context, *MsgRemoveContributorFromCollection) (*MsgRemoveContributorFromCollectionResponse, error)
	AddContributorToCollection(context.Context, *MsgAddContributorToCollection) (*MsgAddContributorToCollectionResponse, error)
	SubmitCollectionProposal(context.Context, *MsgSubmitCollectionProposal) (*MsgSubmitCollectionProposalResponse, error)
	CreateSellOffer(context.Context, *MsgCreateSellOffer) (*MsgCreateSellOfferResponse, error)
	BuyCard(context.Context, *MsgBuyCard) (*MsgBuyCardResponse, error)
	RemoveSellOffer(context.Context, *MsgRemoveSellOffer) (*MsgRemoveSellOfferResponse, error)
	AddArtworkToCollection(context.Context, *MsgAddArtworkToCollection) (*MsgAddArtworkToCollectionResponse, error)
	AddStoryToCollection(context.Context, *MsgAddStoryToCollection) (*MsgAddStoryToCollectionResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Createuser(ctx context.Context, req *MsgCreateuser) (*MsgCreateuserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Createuser not implemented")
}
func (*UnimplementedMsgServer) BuyCardScheme(ctx context.Context, req *MsgBuyCardScheme) (*MsgBuyCardSchemeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyCardScheme not implemented")
}
func (*UnimplementedMsgServer) VoteCard(ctx context.Context, req *MsgVoteCard) (*MsgVoteCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteCard not implemented")
}
func (*UnimplementedMsgServer) SaveCardContent(ctx context.Context, req *MsgSaveCardContent) (*MsgSaveCardContentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveCardContent not implemented")
}
func (*UnimplementedMsgServer) TransferCard(ctx context.Context, req *MsgTransferCard) (*MsgTransferCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferCard not implemented")
}
func (*UnimplementedMsgServer) DonateToCard(ctx context.Context, req *MsgDonateToCard) (*MsgDonateToCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DonateToCard not implemented")
}
func (*UnimplementedMsgServer) AddArtwork(ctx context.Context, req *MsgAddArtwork) (*MsgAddArtworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddArtwork not implemented")
}
func (*UnimplementedMsgServer) SubmitCopyrightProposal(ctx context.Context, req *MsgSubmitCopyrightProposal) (*MsgSubmitCopyrightProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitCopyrightProposal not implemented")
}
func (*UnimplementedMsgServer) ChangeArtist(ctx context.Context, req *MsgChangeArtist) (*MsgChangeArtistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeArtist not implemented")
}
func (*UnimplementedMsgServer) RegisterForCouncil(ctx context.Context, req *MsgRegisterForCouncil) (*MsgRegisterForCouncilResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterForCouncil not implemented")
}
func (*UnimplementedMsgServer) ReportMatch(ctx context.Context, req *MsgReportMatch) (*MsgReportMatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportMatch not implemented")
}
func (*UnimplementedMsgServer) SubmitMatchReporterProposal(ctx context.Context, req *MsgSubmitMatchReporterProposal) (*MsgSubmitMatchReporterProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitMatchReporterProposal not implemented")
}
func (*UnimplementedMsgServer) ApointMatchReporter(ctx context.Context, req *MsgApointMatchReporter) (*MsgApointMatchReporterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApointMatchReporter not implemented")
}
func (*UnimplementedMsgServer) CreateCollection(ctx context.Context, req *MsgCreateCollection) (*MsgCreateCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCollection not implemented")
}
func (*UnimplementedMsgServer) AddCardToCollection(ctx context.Context, req *MsgAddCardToCollection) (*MsgAddCardToCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCardToCollection not implemented")
}
func (*UnimplementedMsgServer) FinalizeCollection(ctx context.Context, req *MsgFinalizeCollection) (*MsgFinalizeCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinalizeCollection not implemented")
}
func (*UnimplementedMsgServer) BuyCollection(ctx context.Context, req *MsgBuyCollection) (*MsgBuyCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyCollection not implemented")
}
func (*UnimplementedMsgServer) RemoveCardFromCollection(ctx context.Context, req *MsgRemoveCardFromCollection) (*MsgRemoveCardFromCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveCardFromCollection not implemented")
}
func (*UnimplementedMsgServer) RemoveContributorFromCollection(ctx context.Context, req *MsgRemoveContributorFromCollection) (*MsgRemoveContributorFromCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveContributorFromCollection not implemented")
}
func (*UnimplementedMsgServer) AddContributorToCollection(ctx context.Context, req *MsgAddContributorToCollection) (*MsgAddContributorToCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddContributorToCollection not implemented")
}
func (*UnimplementedMsgServer) SubmitCollectionProposal(ctx context.Context, req *MsgSubmitCollectionProposal) (*MsgSubmitCollectionProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitCollectionProposal not implemented")
}
func (*UnimplementedMsgServer) CreateSellOffer(ctx context.Context, req *MsgCreateSellOffer) (*MsgCreateSellOfferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSellOffer not implemented")
}
func (*UnimplementedMsgServer) BuyCard(ctx context.Context, req *MsgBuyCard) (*MsgBuyCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyCard not implemented")
}
func (*UnimplementedMsgServer) RemoveSellOffer(ctx context.Context, req *MsgRemoveSellOffer) (*MsgRemoveSellOfferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSellOffer not implemented")
}
func (*UnimplementedMsgServer) AddArtworkToCollection(ctx context.Context, req *MsgAddArtworkToCollection) (*MsgAddArtworkToCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddArtworkToCollection not implemented")
}
func (*UnimplementedMsgServer) AddStoryToCollection(ctx context.Context, req *MsgAddStoryToCollection) (*MsgAddStoryToCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddStoryToCollection not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Createuser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateuser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Createuser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/Createuser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Createuser(ctx, req.(*MsgCreateuser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BuyCardScheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBuyCardScheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BuyCardScheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/BuyCardScheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BuyCardScheme(ctx, req.(*MsgBuyCardScheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VoteCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVoteCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VoteCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/VoteCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VoteCard(ctx, req.(*MsgVoteCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SaveCardContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSaveCardContent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SaveCardContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SaveCardContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SaveCardContent(ctx, req.(*MsgSaveCardContent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_TransferCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTransferCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).TransferCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/TransferCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).TransferCard(ctx, req.(*MsgTransferCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DonateToCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDonateToCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DonateToCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/DonateToCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DonateToCard(ctx, req.(*MsgDonateToCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddArtwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddArtwork)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddArtwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/AddArtwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddArtwork(ctx, req.(*MsgAddArtwork))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubmitCopyrightProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitCopyrightProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitCopyrightProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SubmitCopyrightProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitCopyrightProposal(ctx, req.(*MsgSubmitCopyrightProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ChangeArtist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgChangeArtist)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ChangeArtist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/ChangeArtist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ChangeArtist(ctx, req.(*MsgChangeArtist))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RegisterForCouncil_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterForCouncil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterForCouncil(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/RegisterForCouncil",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterForCouncil(ctx, req.(*MsgRegisterForCouncil))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ReportMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReportMatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ReportMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/ReportMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ReportMatch(ctx, req.(*MsgReportMatch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubmitMatchReporterProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitMatchReporterProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitMatchReporterProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SubmitMatchReporterProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitMatchReporterProposal(ctx, req.(*MsgSubmitMatchReporterProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ApointMatchReporter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgApointMatchReporter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ApointMatchReporter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/ApointMatchReporter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ApointMatchReporter(ctx, req.(*MsgApointMatchReporter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/CreateCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCollection(ctx, req.(*MsgCreateCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddCardToCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddCardToCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddCardToCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/AddCardToCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddCardToCollection(ctx, req.(*MsgAddCardToCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_FinalizeCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFinalizeCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FinalizeCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/FinalizeCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FinalizeCollection(ctx, req.(*MsgFinalizeCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BuyCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBuyCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BuyCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/BuyCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BuyCollection(ctx, req.(*MsgBuyCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveCardFromCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveCardFromCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveCardFromCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/RemoveCardFromCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveCardFromCollection(ctx, req.(*MsgRemoveCardFromCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveContributorFromCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveContributorFromCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveContributorFromCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/RemoveContributorFromCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveContributorFromCollection(ctx, req.(*MsgRemoveContributorFromCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddContributorToCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddContributorToCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddContributorToCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/AddContributorToCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddContributorToCollection(ctx, req.(*MsgAddContributorToCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubmitCollectionProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitCollectionProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitCollectionProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SubmitCollectionProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitCollectionProposal(ctx, req.(*MsgSubmitCollectionProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSellOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSellOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSellOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/CreateSellOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSellOffer(ctx, req.(*MsgCreateSellOffer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BuyCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBuyCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BuyCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/BuyCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BuyCard(ctx, req.(*MsgBuyCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveSellOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveSellOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveSellOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/RemoveSellOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveSellOffer(ctx, req.(*MsgRemoveSellOffer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddArtworkToCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddArtworkToCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddArtworkToCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/AddArtworkToCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddArtworkToCollection(ctx, req.(*MsgAddArtworkToCollection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddStoryToCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddStoryToCollection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddStoryToCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/AddStoryToCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddStoryToCollection(ctx, req.(*MsgAddStoryToCollection))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DecentralCardGame.cardchain.cardchain.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Createuser",
			Handler:    _Msg_Createuser_Handler,
		},
		{
			MethodName: "BuyCardScheme",
			Handler:    _Msg_BuyCardScheme_Handler,
		},
		{
			MethodName: "VoteCard",
			Handler:    _Msg_VoteCard_Handler,
		},
		{
			MethodName: "SaveCardContent",
			Handler:    _Msg_SaveCardContent_Handler,
		},
		{
			MethodName: "TransferCard",
			Handler:    _Msg_TransferCard_Handler,
		},
		{
			MethodName: "DonateToCard",
			Handler:    _Msg_DonateToCard_Handler,
		},
		{
			MethodName: "AddArtwork",
			Handler:    _Msg_AddArtwork_Handler,
		},
		{
			MethodName: "SubmitCopyrightProposal",
			Handler:    _Msg_SubmitCopyrightProposal_Handler,
		},
		{
			MethodName: "ChangeArtist",
			Handler:    _Msg_ChangeArtist_Handler,
		},
		{
			MethodName: "RegisterForCouncil",
			Handler:    _Msg_RegisterForCouncil_Handler,
		},
		{
			MethodName: "ReportMatch",
			Handler:    _Msg_ReportMatch_Handler,
		},
		{
			MethodName: "SubmitMatchReporterProposal",
			Handler:    _Msg_SubmitMatchReporterProposal_Handler,
		},
		{
			MethodName: "ApointMatchReporter",
			Handler:    _Msg_ApointMatchReporter_Handler,
		},
		{
			MethodName: "CreateCollection",
			Handler:    _Msg_CreateCollection_Handler,
		},
		{
			MethodName: "AddCardToCollection",
			Handler:    _Msg_AddCardToCollection_Handler,
		},
		{
			MethodName: "FinalizeCollection",
			Handler:    _Msg_FinalizeCollection_Handler,
		},
		{
			MethodName: "BuyCollection",
			Handler:    _Msg_BuyCollection_Handler,
		},
		{
			MethodName: "RemoveCardFromCollection",
			Handler:    _Msg_RemoveCardFromCollection_Handler,
		},
		{
			MethodName: "RemoveContributorFromCollection",
			Handler:    _Msg_RemoveContributorFromCollection_Handler,
		},
		{
			MethodName: "AddContributorToCollection",
			Handler:    _Msg_AddContributorToCollection_Handler,
		},
		{
			MethodName: "SubmitCollectionProposal",
			Handler:    _Msg_SubmitCollectionProposal_Handler,
		},
		{
			MethodName: "CreateSellOffer",
			Handler:    _Msg_CreateSellOffer_Handler,
		},
		{
			MethodName: "BuyCard",
			Handler:    _Msg_BuyCard_Handler,
		},
		{
			MethodName: "RemoveSellOffer",
			Handler:    _Msg_RemoveSellOffer_Handler,
		},
		{
			MethodName: "AddArtworkToCollection",
			Handler:    _Msg_AddArtworkToCollection_Handler,
		},
		{
			MethodName: "AddStoryToCollection",
			Handler:    _Msg_AddStoryToCollection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cardchain/tx.proto",
}

func (m *MsgCreateuser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateuser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateuser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Alias) > 0 {
		i -= len(m.Alias)
		copy(dAtA[i:], m.Alias)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Alias)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NewUser) > 0 {
		i -= len(m.NewUser)
		copy(dAtA[i:], m.NewUser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewUser)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateuserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateuserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateuserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBuyCardScheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCardScheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCardScheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Buyer) > 0 {
		i -= len(m.Buyer)
		copy(dAtA[i:], m.Buyer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Buyer)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size := m.Bid.Size()
		i -= size
		if _, err := m.Bid.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBuyCardSchemeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCardSchemeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCardSchemeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgVoteCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Voter) > 0 {
		i -= len(m.Voter)
		copy(dAtA[i:], m.Voter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Voter)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.VoteType) > 0 {
		i -= len(m.VoteType)
		copy(dAtA[i:], m.VoteType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VoteType)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVoteCardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteCardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteCardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSaveCardContent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSaveCardContent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSaveCardContent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Artist) > 0 {
		i -= len(m.Artist)
		copy(dAtA[i:], m.Artist)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Artist)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Notes) > 0 {
		i -= len(m.Notes)
		copy(dAtA[i:], m.Notes)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Notes)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSaveCardContentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSaveCardContentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSaveCardContentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTransferCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x22
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransferCardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferCardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferCardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDonateToCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDonateToCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDonateToCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Donator) > 0 {
		i -= len(m.Donator)
		copy(dAtA[i:], m.Donator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Donator)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDonateToCardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDonateToCardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDonateToCardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddArtwork) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddArtwork) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddArtwork) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FullArt {
		i--
		if m.FullArt {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddArtworkResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddArtworkResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddArtworkResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubmitCopyrightProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitCopyrightProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitCopyrightProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Link) > 0 {
		i -= len(m.Link)
		copy(dAtA[i:], m.Link)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Link)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitCopyrightProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitCopyrightProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitCopyrightProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgChangeArtist) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgChangeArtist) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgChangeArtist) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Artist) > 0 {
		i -= len(m.Artist)
		copy(dAtA[i:], m.Artist)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Artist)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgChangeArtistResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgChangeArtistResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgChangeArtistResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRegisterForCouncil) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterForCouncil) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterForCouncil) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterForCouncilResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterForCouncilResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterForCouncilResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgReportMatch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReportMatch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReportMatch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Outcome != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Outcome))
		i--
		dAtA[i] = 0x38
	}
	if len(m.CardsB) > 0 {
		dAtA2 := make([]byte, len(m.CardsB)*10)
		var j1 int
		for _, num := range m.CardsB {
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintTx(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CardsA) > 0 {
		dAtA4 := make([]byte, len(m.CardsA)*10)
		var j3 int
		for _, num := range m.CardsA {
			for num >= 1<<7 {
				dAtA4[j3] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j3++
			}
			dAtA4[j3] = uint8(num)
			j3++
		}
		i -= j3
		copy(dAtA[i:], dAtA4[:j3])
		i = encodeVarintTx(dAtA, i, uint64(j3))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PlayerB) > 0 {
		i -= len(m.PlayerB)
		copy(dAtA[i:], m.PlayerB)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerB)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PlayerA) > 0 {
		i -= len(m.PlayerA)
		copy(dAtA[i:], m.PlayerA)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerA)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgReportMatchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReportMatchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReportMatchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MatchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MatchId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitMatchReporterProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitMatchReporterProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitMatchReporterProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Deposit) > 0 {
		i -= len(m.Deposit)
		copy(dAtA[i:], m.Deposit)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Deposit)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Reporter) > 0 {
		i -= len(m.Reporter)
		copy(dAtA[i:], m.Reporter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Reporter)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitMatchReporterProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitMatchReporterProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitMatchReporterProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgApointMatchReporter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApointMatchReporter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApointMatchReporter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Reporter) > 0 {
		i -= len(m.Reporter)
		copy(dAtA[i:], m.Reporter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Reporter)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgApointMatchReporterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApointMatchReporterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApointMatchReporterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Contributors) > 0 {
		for iNdEx := len(m.Contributors) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Contributors[iNdEx])
			copy(dAtA[i:], m.Contributors[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Contributors[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.StoryWriter) > 0 {
		i -= len(m.StoryWriter)
		copy(dAtA[i:], m.StoryWriter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StoryWriter)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Artist) > 0 {
		i -= len(m.Artist)
		copy(dAtA[i:], m.Artist)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Artist)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddCardToCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddCardToCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddCardToCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x18
	}
	if m.CollectionId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CollectionId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddCardToCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddCardToCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddCardToCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFinalizeCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinalizeCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinalizeCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CollectionId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CollectionId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFinalizeCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinalizeCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinalizeCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBuyCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CollectionId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CollectionId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBuyCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveCardFromCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveCardFromCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveCardFromCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x18
	}
	if m.CollectionId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CollectionId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveCardFromCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveCardFromCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveCardFromCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveContributorFromCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveContributorFromCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveContributorFromCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CollectionId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CollectionId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveContributorFromCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveContributorFromCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveContributorFromCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddContributorToCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddContributorToCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddContributorToCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CollectionId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CollectionId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddContributorToCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddContributorToCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddContributorToCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubmitCollectionProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitCollectionProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitCollectionProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CollectionId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CollectionId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitCollectionProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitCollectionProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitCollectionProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSellOffer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSellOffer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSellOffer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Price.Size()
		i -= size
		if _, err := m.Price.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.Card != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Card))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSellOfferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSellOfferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSellOfferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBuyCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SellOfferId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SellOfferId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBuyCardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSellOffer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSellOffer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSellOffer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SellOfferId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SellOfferId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSellOfferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSellOfferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSellOfferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddArtworkToCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddArtworkToCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddArtworkToCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CollectionId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CollectionId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddArtworkToCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddArtworkToCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddArtworkToCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddStoryToCollection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddStoryToCollection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddStoryToCollection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Story) > 0 {
		i -= len(m.Story)
		copy(dAtA[i:], m.Story)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Story)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CollectionId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CollectionId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddStoryToCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddStoryToCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddStoryToCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateuser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewUser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Alias)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateuserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBuyCardScheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Bid.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Buyer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgBuyCardSchemeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgVoteCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.VoteType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Voter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgVoteCardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSaveCardContent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Notes)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Artist)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSaveCardContentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTransferCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgTransferCardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDonateToCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Donator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgDonateToCardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddArtwork) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.FullArt {
		n += 2
	}
	return n
}

func (m *MsgAddArtworkResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubmitCopyrightProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Link)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubmitCopyrightProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgChangeArtist) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardID != 0 {
		n += 1 + sovTx(uint64(m.CardID))
	}
	l = len(m.Artist)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgChangeArtistResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRegisterForCouncil) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterForCouncilResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgReportMatch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerA)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerB)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.CardsA) > 0 {
		l = 0
		for _, e := range m.CardsA {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if len(m.CardsB) > 0 {
		l = 0
		for _, e := range m.CardsB {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if m.Outcome != 0 {
		n += 1 + sovTx(uint64(m.Outcome))
	}
	return n
}

func (m *MsgReportMatchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MatchId != 0 {
		n += 1 + sovTx(uint64(m.MatchId))
	}
	return n
}

func (m *MsgSubmitMatchReporterProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Reporter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Deposit)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubmitMatchReporterProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgApointMatchReporter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Reporter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgApointMatchReporterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Artist)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StoryWriter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Contributors) > 0 {
		for _, s := range m.Contributors {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgCreateCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddCardToCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CollectionId != 0 {
		n += 1 + sovTx(uint64(m.CollectionId))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgAddCardToCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFinalizeCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CollectionId != 0 {
		n += 1 + sovTx(uint64(m.CollectionId))
	}
	return n
}

func (m *MsgFinalizeCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBuyCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CollectionId != 0 {
		n += 1 + sovTx(uint64(m.CollectionId))
	}
	return n
}

func (m *MsgBuyCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveCardFromCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CollectionId != 0 {
		n += 1 + sovTx(uint64(m.CollectionId))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgRemoveCardFromCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveContributorFromCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CollectionId != 0 {
		n += 1 + sovTx(uint64(m.CollectionId))
	}
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveContributorFromCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddContributorToCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CollectionId != 0 {
		n += 1 + sovTx(uint64(m.CollectionId))
	}
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddContributorToCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubmitCollectionProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CollectionId != 0 {
		n += 1 + sovTx(uint64(m.CollectionId))
	}
	return n
}

func (m *MsgSubmitCollectionProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSellOffer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Card != 0 {
		n += 1 + sovTx(uint64(m.Card))
	}
	l = m.Price.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCreateSellOfferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBuyCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SellOfferId != 0 {
		n += 1 + sovTx(uint64(m.SellOfferId))
	}
	return n
}

func (m *MsgBuyCardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveSellOffer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SellOfferId != 0 {
		n += 1 + sovTx(uint64(m.SellOfferId))
	}
	return n
}

func (m *MsgRemoveSellOfferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddArtworkToCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CollectionId != 0 {
		n += 1 + sovTx(uint64(m.CollectionId))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddArtworkToCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddStoryToCollection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CollectionId != 0 {
		n += 1 + sovTx(uint64(m.CollectionId))
	}
	l = len(m.Story)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddStoryToCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateuser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateuser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateuser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewUser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewUser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateuserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateuserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateuserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCardScheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCardScheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCardScheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Bid.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buyer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Buyer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCardSchemeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCardSchemeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCardSchemeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoteType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VoteType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Voter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Voter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteCardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteCardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteCardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSaveCardContent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSaveCardContent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSaveCardContent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = append(m.Content[:0], dAtA[iNdEx:postIndex]...)
			if m.Content == nil {
				m.Content = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Notes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSaveCardContentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSaveCardContentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSaveCardContentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferCardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferCardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferCardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDonateToCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDonateToCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDonateToCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Donator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Donator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDonateToCardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDonateToCardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDonateToCardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddArtwork) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddArtwork: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddArtwork: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = append(m.Image[:0], dAtA[iNdEx:postIndex]...)
			if m.Image == nil {
				m.Image = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FullArt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FullArt = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddArtworkResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddArtworkResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddArtworkResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitCopyrightProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitCopyrightProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitCopyrightProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Link", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Link = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitCopyrightProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitCopyrightProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitCopyrightProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgChangeArtist) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgChangeArtist: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgChangeArtist: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardID", wireType)
			}
			m.CardID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgChangeArtistResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgChangeArtistResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgChangeArtistResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterForCouncil) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterForCouncil: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterForCouncil: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterForCouncilResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterForCouncilResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterForCouncilResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReportMatch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReportMatch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReportMatch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerA", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerA = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerB", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerB = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CardsA = append(m.CardsA, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CardsA) == 0 {
					m.CardsA = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CardsA = append(m.CardsA, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CardsA", wireType)
			}
		case 6:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CardsB = append(m.CardsB, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CardsB) == 0 {
					m.CardsB = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CardsB = append(m.CardsB, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CardsB", wireType)
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outcome", wireType)
			}
			m.Outcome = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Outcome |= Outcome(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReportMatchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReportMatchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReportMatchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MatchId", wireType)
			}
			m.MatchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MatchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitMatchReporterProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitMatchReporterProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitMatchReporterProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reporter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reporter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Deposit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitMatchReporterProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitMatchReporterProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitMatchReporterProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApointMatchReporter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApointMatchReporter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApointMatchReporter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reporter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reporter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApointMatchReporterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApointMatchReporterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApointMatchReporterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoryWriter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StoryWriter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contributors", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contributors = append(m.Contributors, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddCardToCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddCardToCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddCardToCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			m.CollectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddCardToCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddCardToCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddCardToCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinalizeCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinalizeCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinalizeCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			m.CollectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinalizeCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinalizeCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinalizeCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			m.CollectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveCardFromCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveCardFromCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveCardFromCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			m.CollectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveCardFromCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveCardFromCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveCardFromCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveContributorFromCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveContributorFromCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveContributorFromCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			m.CollectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveContributorFromCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveContributorFromCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveContributorFromCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddContributorToCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddContributorToCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddContributorToCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			m.CollectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddContributorToCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddContributorToCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddContributorToCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitCollectionProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitCollectionProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitCollectionProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			m.CollectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitCollectionProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitCollectionProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitCollectionProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSellOffer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSellOffer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSellOffer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Card", wireType)
			}
			m.Card = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Card |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Price.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSellOfferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSellOfferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSellOfferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellOfferId", wireType)
			}
			m.SellOfferId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SellOfferId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSellOffer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSellOffer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSellOffer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellOfferId", wireType)
			}
			m.SellOfferId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SellOfferId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSellOfferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSellOfferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSellOfferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddArtworkToCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddArtworkToCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddArtworkToCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			m.CollectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = append(m.Image[:0], dAtA[iNdEx:postIndex]...)
			if m.Image == nil {
				m.Image = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddArtworkToCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddArtworkToCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddArtworkToCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddStoryToCollection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddStoryToCollection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddStoryToCollection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectionId", wireType)
			}
			m.CollectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Story", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Story = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddStoryToCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddStoryToCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddStoryToCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
