// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cardchain/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateuser struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NewUser string `protobuf:"bytes,2,opt,name=newUser,proto3" json:"newUser,omitempty"`
	Alias   string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (m *MsgCreateuser) Reset()         { *m = MsgCreateuser{} }
func (m *MsgCreateuser) String() string { return proto.CompactTextString(m) }
func (*MsgCreateuser) ProtoMessage()    {}
func (*MsgCreateuser) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{0}
}
func (m *MsgCreateuser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateuser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateuser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateuser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateuser.Merge(m, src)
}
func (m *MsgCreateuser) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateuser) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateuser.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateuser proto.InternalMessageInfo

func (m *MsgCreateuser) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateuser) GetNewUser() string {
	if m != nil {
		return m.NewUser
	}
	return ""
}

func (m *MsgCreateuser) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type MsgCreateuserResponse struct {
}

func (m *MsgCreateuserResponse) Reset()         { *m = MsgCreateuserResponse{} }
func (m *MsgCreateuserResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateuserResponse) ProtoMessage()    {}
func (*MsgCreateuserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{1}
}
func (m *MsgCreateuserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateuserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateuserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateuserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateuserResponse.Merge(m, src)
}
func (m *MsgCreateuserResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateuserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateuserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateuserResponse proto.InternalMessageInfo

type MsgBuyCardScheme struct {
	Creator string                                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Bid     github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,2,opt,name=bid,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"bid"`
	Buyer   string                                  `protobuf:"bytes,3,opt,name=buyer,proto3" json:"buyer,omitempty"`
}

func (m *MsgBuyCardScheme) Reset()         { *m = MsgBuyCardScheme{} }
func (m *MsgBuyCardScheme) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCardScheme) ProtoMessage()    {}
func (*MsgBuyCardScheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{2}
}
func (m *MsgBuyCardScheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCardScheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCardScheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCardScheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCardScheme.Merge(m, src)
}
func (m *MsgBuyCardScheme) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCardScheme) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCardScheme.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCardScheme proto.InternalMessageInfo

func (m *MsgBuyCardScheme) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgBuyCardScheme) GetBuyer() string {
	if m != nil {
		return m.Buyer
	}
	return ""
}

type MsgBuyCardSchemeResponse struct {
}

func (m *MsgBuyCardSchemeResponse) Reset()         { *m = MsgBuyCardSchemeResponse{} }
func (m *MsgBuyCardSchemeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCardSchemeResponse) ProtoMessage()    {}
func (*MsgBuyCardSchemeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{3}
}
func (m *MsgBuyCardSchemeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCardSchemeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCardSchemeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCardSchemeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCardSchemeResponse.Merge(m, src)
}
func (m *MsgBuyCardSchemeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCardSchemeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCardSchemeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCardSchemeResponse proto.InternalMessageInfo

type MsgVoteCard struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId   uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	VoteType string `protobuf:"bytes,3,opt,name=voteType,proto3" json:"voteType,omitempty"`
	Voter    string `protobuf:"bytes,4,opt,name=voter,proto3" json:"voter,omitempty"`
}

func (m *MsgVoteCard) Reset()         { *m = MsgVoteCard{} }
func (m *MsgVoteCard) String() string { return proto.CompactTextString(m) }
func (*MsgVoteCard) ProtoMessage()    {}
func (*MsgVoteCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{4}
}
func (m *MsgVoteCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteCard.Merge(m, src)
}
func (m *MsgVoteCard) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteCard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteCard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteCard proto.InternalMessageInfo

func (m *MsgVoteCard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgVoteCard) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgVoteCard) GetVoteType() string {
	if m != nil {
		return m.VoteType
	}
	return ""
}

func (m *MsgVoteCard) GetVoter() string {
	if m != nil {
		return m.Voter
	}
	return ""
}

type MsgVoteCardResponse struct {
}

func (m *MsgVoteCardResponse) Reset()         { *m = MsgVoteCardResponse{} }
func (m *MsgVoteCardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVoteCardResponse) ProtoMessage()    {}
func (*MsgVoteCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{5}
}
func (m *MsgVoteCardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteCardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteCardResponse.Merge(m, src)
}
func (m *MsgVoteCardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteCardResponse proto.InternalMessageInfo

type MsgSaveCardContent struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Image   []byte `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	FullArt string `protobuf:"bytes,5,opt,name=fullArt,proto3" json:"fullArt,omitempty"`
	Notes   string `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
	Owner   string `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (m *MsgSaveCardContent) Reset()         { *m = MsgSaveCardContent{} }
func (m *MsgSaveCardContent) String() string { return proto.CompactTextString(m) }
func (*MsgSaveCardContent) ProtoMessage()    {}
func (*MsgSaveCardContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{6}
}
func (m *MsgSaveCardContent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSaveCardContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSaveCardContent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSaveCardContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSaveCardContent.Merge(m, src)
}
func (m *MsgSaveCardContent) XXX_Size() int {
	return m.Size()
}
func (m *MsgSaveCardContent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSaveCardContent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSaveCardContent proto.InternalMessageInfo

func (m *MsgSaveCardContent) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSaveCardContent) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgSaveCardContent) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *MsgSaveCardContent) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *MsgSaveCardContent) GetFullArt() string {
	if m != nil {
		return m.FullArt
	}
	return ""
}

func (m *MsgSaveCardContent) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *MsgSaveCardContent) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type MsgSaveCardContentResponse struct {
}

func (m *MsgSaveCardContentResponse) Reset()         { *m = MsgSaveCardContentResponse{} }
func (m *MsgSaveCardContentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSaveCardContentResponse) ProtoMessage()    {}
func (*MsgSaveCardContentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cfa59c76aced81c, []int{7}
}
func (m *MsgSaveCardContentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSaveCardContentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSaveCardContentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSaveCardContentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSaveCardContentResponse.Merge(m, src)
}
func (m *MsgSaveCardContentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSaveCardContentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSaveCardContentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSaveCardContentResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateuser)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateuser")
	proto.RegisterType((*MsgCreateuserResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateuserResponse")
	proto.RegisterType((*MsgBuyCardScheme)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCardScheme")
	proto.RegisterType((*MsgBuyCardSchemeResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCardSchemeResponse")
	proto.RegisterType((*MsgVoteCard)(nil), "DecentralCardGame.cardchain.cardchain.MsgVoteCard")
	proto.RegisterType((*MsgVoteCardResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgVoteCardResponse")
	proto.RegisterType((*MsgSaveCardContent)(nil), "DecentralCardGame.cardchain.cardchain.MsgSaveCardContent")
	proto.RegisterType((*MsgSaveCardContentResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSaveCardContentResponse")
}

func init() { proto.RegisterFile("cardchain/tx.proto", fileDescriptor_5cfa59c76aced81c) }

var fileDescriptor_5cfa59c76aced81c = []byte{
	// 529 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xb3, 0x24, 0x4d, 0xcb, 0xd0, 0x0a, 0x64, 0x5a, 0xb0, 0x2c, 0xe4, 0x22, 0x4b, 0x08,
	0x2e, 0xd8, 0x52, 0x41, 0xe2, 0x8f, 0x90, 0x50, 0x12, 0x24, 0xc4, 0x21, 0x17, 0x17, 0x90, 0xe0,
	0xb6, 0x71, 0x06, 0xc7, 0x22, 0xf6, 0x86, 0xdd, 0x75, 0xdb, 0x70, 0xe2, 0xc2, 0x81, 0x13, 0x3c,
	0x03, 0xcf, 0xc1, 0x03, 0xf4, 0xd8, 0x23, 0xe2, 0x50, 0xa1, 0xe4, 0x45, 0xd0, 0xee, 0xda, 0x26,
	0x49, 0xa5, 0x2a, 0xcd, 0x29, 0xfb, 0xcd, 0xee, 0x37, 0xdf, 0x2f, 0xd6, 0x68, 0xc0, 0x8a, 0x28,
	0xef, 0x47, 0x03, 0x9a, 0x64, 0x81, 0x3c, 0xf2, 0x47, 0x9c, 0x49, 0x66, 0xdd, 0x79, 0x81, 0x11,
	0x66, 0x92, 0xd3, 0x61, 0x87, 0xf2, 0xfe, 0x4b, 0x9a, 0xa2, 0x5f, 0xbd, 0xfa, 0x7f, 0x72, 0xb6,
	0x63, 0x16, 0x33, 0xed, 0x08, 0xd4, 0xc9, 0x98, 0xbd, 0x77, 0xb0, 0xd5, 0x15, 0x71, 0x87, 0x23,
	0x95, 0x98, 0x0b, 0xe4, 0x96, 0x0d, 0xeb, 0x91, 0x52, 0x8c, 0xdb, 0xe4, 0x36, 0xb9, 0x77, 0x39,
	0x2c, 0xa5, 0xba, 0xc9, 0xf0, 0xf0, 0x8d, 0x40, 0x6e, 0x5f, 0x32, 0x37, 0x85, 0xb4, 0xb6, 0x61,
	0x8d, 0x0e, 0x13, 0x2a, 0xec, 0xba, 0xae, 0x1b, 0xe1, 0xdd, 0x84, 0x9d, 0xb9, 0xd6, 0x21, 0x8a,
	0x11, 0xcb, 0x04, 0x7a, 0x5f, 0x09, 0x5c, 0xeb, 0x8a, 0xb8, 0x9d, 0x8f, 0x15, 0xf0, 0x7e, 0x34,
	0xc0, 0x14, 0xcf, 0xc9, 0x6d, 0x41, 0xbd, 0x97, 0xf4, 0x4d, 0x66, 0x3b, 0x38, 0x3e, 0xdd, 0xad,
	0xfd, 0x39, 0xdd, 0xbd, 0x1b, 0x27, 0x72, 0x90, 0xf7, 0xfc, 0x88, 0xa5, 0x41, 0xc4, 0x44, 0xca,
	0x44, 0xf1, 0x73, 0x5f, 0xf4, 0x3f, 0x06, 0x72, 0x3c, 0x42, 0xe1, 0x77, 0x58, 0x92, 0x85, 0xca,
	0xab, 0x00, 0x7b, 0xf9, 0x18, 0x79, 0x09, 0xa8, 0x85, 0xe7, 0x80, 0xbd, 0x88, 0x51, 0x31, 0x7e,
	0x82, 0x2b, 0x5d, 0x11, 0xbf, 0x65, 0x12, 0xd5, 0xe5, 0x39, 0x74, 0x37, 0xa0, 0xa9, 0xbe, 0xf1,
	0x2b, 0x03, 0xd8, 0x08, 0x0b, 0x65, 0x39, 0xb0, 0x71, 0xc0, 0x24, 0xbe, 0x1e, 0x8f, 0xb0, 0x48,
	0xad, 0xb4, 0xc2, 0x51, 0x67, 0x6e, 0x37, 0x0c, 0x8e, 0x16, 0xde, 0x0e, 0x5c, 0x9f, 0x89, 0xac,
	0x48, 0x7e, 0x11, 0xb0, 0xba, 0x22, 0xde, 0xa7, 0x07, 0xba, 0xde, 0x61, 0x99, 0xc4, 0x4c, 0xae,
	0x40, 0xa4, 0x1c, 0xc6, 0xac, 0x81, 0x36, 0xc3, 0x52, 0x2a, 0x9e, 0x24, 0xa5, 0x31, 0x6a, 0x9e,
	0xcd, 0xd0, 0x08, 0xf5, 0xfe, 0x43, 0x3e, 0x1c, 0xb6, 0xb8, 0xb4, 0xd7, 0x4c, 0x42, 0x21, 0xd5,
	0xfb, 0x8c, 0x49, 0x14, 0x76, 0xd3, 0xf0, 0x6b, 0xa1, 0xaa, 0xec, 0x30, 0x43, 0x6e, 0xaf, 0x9b,
	0xaa, 0x16, 0xde, 0x2d, 0x70, 0xce, 0xd2, 0x97, 0x7f, 0x6e, 0xef, 0x67, 0x03, 0xea, 0x5d, 0x11,
	0x5b, 0x5f, 0x08, 0xc0, 0xcc, 0x10, 0x3e, 0xf4, 0x97, 0x9a, 0x69, 0x7f, 0x6e, 0xbe, 0x9c, 0x67,
	0xab, 0xb8, 0x4a, 0x14, 0xeb, 0x1b, 0x81, 0xad, 0xf9, 0x91, 0x7c, 0xb4, 0x7c, 0xbf, 0x39, 0xa3,
	0xf3, 0x7c, 0x45, 0x63, 0xc5, 0xf2, 0x19, 0x36, 0xaa, 0xd1, 0xdb, 0x5b, 0xbe, 0x59, 0xe9, 0x71,
	0x9e, 0x5e, 0xdc, 0x53, 0x65, 0x7f, 0x27, 0x70, 0x75, 0x71, 0xd8, 0x9e, 0x2c, 0xdf, 0x6f, 0xc1,
	0xea, 0xb4, 0x56, 0xb6, 0x96, 0x44, 0xed, 0xf0, 0x78, 0xe2, 0x92, 0x93, 0x89, 0x4b, 0xfe, 0x4e,
	0x5c, 0xf2, 0x63, 0xea, 0xd6, 0x4e, 0xa6, 0x6e, 0xed, 0xf7, 0xd4, 0xad, 0xbd, 0x7f, 0x3c, 0xb3,
	0x05, 0xce, 0xc4, 0x04, 0x9d, 0x6a, 0x57, 0x1e, 0x05, 0x33, 0x7b, 0x53, 0xed, 0x86, 0x5e, 0x53,
	0xaf, 0xbf, 0x07, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x06, 0xdd, 0x39, 0x51, 0x05, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	Createuser(ctx context.Context, in *MsgCreateuser, opts ...grpc.CallOption) (*MsgCreateuserResponse, error)
	BuyCardScheme(ctx context.Context, in *MsgBuyCardScheme, opts ...grpc.CallOption) (*MsgBuyCardSchemeResponse, error)
	VoteCard(ctx context.Context, in *MsgVoteCard, opts ...grpc.CallOption) (*MsgVoteCardResponse, error)
	SaveCardContent(ctx context.Context, in *MsgSaveCardContent, opts ...grpc.CallOption) (*MsgSaveCardContentResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Createuser(ctx context.Context, in *MsgCreateuser, opts ...grpc.CallOption) (*MsgCreateuserResponse, error) {
	out := new(MsgCreateuserResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/Createuser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BuyCardScheme(ctx context.Context, in *MsgBuyCardScheme, opts ...grpc.CallOption) (*MsgBuyCardSchemeResponse, error) {
	out := new(MsgBuyCardSchemeResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/BuyCardScheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VoteCard(ctx context.Context, in *MsgVoteCard, opts ...grpc.CallOption) (*MsgVoteCardResponse, error) {
	out := new(MsgVoteCardResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/VoteCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SaveCardContent(ctx context.Context, in *MsgSaveCardContent, opts ...grpc.CallOption) (*MsgSaveCardContentResponse, error) {
	out := new(MsgSaveCardContentResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SaveCardContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	Createuser(context.Context, *MsgCreateuser) (*MsgCreateuserResponse, error)
	BuyCardScheme(context.Context, *MsgBuyCardScheme) (*MsgBuyCardSchemeResponse, error)
	VoteCard(context.Context, *MsgVoteCard) (*MsgVoteCardResponse, error)
	SaveCardContent(context.Context, *MsgSaveCardContent) (*MsgSaveCardContentResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Createuser(ctx context.Context, req *MsgCreateuser) (*MsgCreateuserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Createuser not implemented")
}
func (*UnimplementedMsgServer) BuyCardScheme(ctx context.Context, req *MsgBuyCardScheme) (*MsgBuyCardSchemeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyCardScheme not implemented")
}
func (*UnimplementedMsgServer) VoteCard(ctx context.Context, req *MsgVoteCard) (*MsgVoteCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteCard not implemented")
}
func (*UnimplementedMsgServer) SaveCardContent(ctx context.Context, req *MsgSaveCardContent) (*MsgSaveCardContentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveCardContent not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Createuser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateuser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Createuser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/Createuser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Createuser(ctx, req.(*MsgCreateuser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BuyCardScheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBuyCardScheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BuyCardScheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/BuyCardScheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BuyCardScheme(ctx, req.(*MsgBuyCardScheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VoteCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVoteCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VoteCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/VoteCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VoteCard(ctx, req.(*MsgVoteCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SaveCardContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSaveCardContent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SaveCardContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SaveCardContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SaveCardContent(ctx, req.(*MsgSaveCardContent))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DecentralCardGame.cardchain.cardchain.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Createuser",
			Handler:    _Msg_Createuser_Handler,
		},
		{
			MethodName: "BuyCardScheme",
			Handler:    _Msg_BuyCardScheme_Handler,
		},
		{
			MethodName: "VoteCard",
			Handler:    _Msg_VoteCard_Handler,
		},
		{
			MethodName: "SaveCardContent",
			Handler:    _Msg_SaveCardContent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cardchain/tx.proto",
}

func (m *MsgCreateuser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateuser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateuser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Alias) > 0 {
		i -= len(m.Alias)
		copy(dAtA[i:], m.Alias)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Alias)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NewUser) > 0 {
		i -= len(m.NewUser)
		copy(dAtA[i:], m.NewUser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewUser)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateuserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateuserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateuserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBuyCardScheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCardScheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCardScheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Buyer) > 0 {
		i -= len(m.Buyer)
		copy(dAtA[i:], m.Buyer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Buyer)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size := m.Bid.Size()
		i -= size
		if _, err := m.Bid.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBuyCardSchemeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCardSchemeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCardSchemeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgVoteCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Voter) > 0 {
		i -= len(m.Voter)
		copy(dAtA[i:], m.Voter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Voter)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.VoteType) > 0 {
		i -= len(m.VoteType)
		copy(dAtA[i:], m.VoteType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VoteType)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVoteCardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteCardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteCardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSaveCardContent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSaveCardContent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSaveCardContent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Notes) > 0 {
		i -= len(m.Notes)
		copy(dAtA[i:], m.Notes)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Notes)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.FullArt) > 0 {
		i -= len(m.FullArt)
		copy(dAtA[i:], m.FullArt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FullArt)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSaveCardContentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSaveCardContentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSaveCardContentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateuser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewUser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Alias)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateuserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBuyCardScheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Bid.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Buyer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgBuyCardSchemeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgVoteCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.VoteType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Voter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgVoteCardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSaveCardContent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.FullArt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Notes)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSaveCardContentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateuser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateuser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateuser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewUser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewUser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateuserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateuserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateuserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCardScheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCardScheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCardScheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Bid.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buyer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Buyer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCardSchemeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCardSchemeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCardSchemeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoteType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VoteType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Voter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Voter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteCardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteCardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteCardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSaveCardContent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSaveCardContent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSaveCardContent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = append(m.Content[:0], dAtA[iNdEx:postIndex]...)
			if m.Content == nil {
				m.Content = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = append(m.Image[:0], dAtA[iNdEx:postIndex]...)
			if m.Image == nil {
				m.Image = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FullArt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FullArt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Notes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSaveCardContentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSaveCardContentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSaveCardContentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
