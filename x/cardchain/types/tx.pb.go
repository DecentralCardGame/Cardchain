// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cardchain/cardchain/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateuser struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NewUser string `protobuf:"bytes,2,opt,name=newUser,proto3" json:"newUser,omitempty"`
	Alias   string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (m *MsgCreateuser) Reset()         { *m = MsgCreateuser{} }
func (m *MsgCreateuser) String() string { return proto.CompactTextString(m) }
func (*MsgCreateuser) ProtoMessage()    {}
func (*MsgCreateuser) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{0}
}
func (m *MsgCreateuser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateuser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateuser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateuser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateuser.Merge(m, src)
}
func (m *MsgCreateuser) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateuser) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateuser.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateuser proto.InternalMessageInfo

func (m *MsgCreateuser) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateuser) GetNewUser() string {
	if m != nil {
		return m.NewUser
	}
	return ""
}

func (m *MsgCreateuser) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type MsgCreateuserResponse struct {
}

func (m *MsgCreateuserResponse) Reset()         { *m = MsgCreateuserResponse{} }
func (m *MsgCreateuserResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateuserResponse) ProtoMessage()    {}
func (*MsgCreateuserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{1}
}
func (m *MsgCreateuserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateuserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateuserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateuserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateuserResponse.Merge(m, src)
}
func (m *MsgCreateuserResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateuserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateuserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateuserResponse proto.InternalMessageInfo

type MsgBuyCardScheme struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Bid     types.Coin `protobuf:"bytes,2,opt,name=bid,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coin" json:"bid"`
}

func (m *MsgBuyCardScheme) Reset()         { *m = MsgBuyCardScheme{} }
func (m *MsgBuyCardScheme) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCardScheme) ProtoMessage()    {}
func (*MsgBuyCardScheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{2}
}
func (m *MsgBuyCardScheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCardScheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCardScheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCardScheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCardScheme.Merge(m, src)
}
func (m *MsgBuyCardScheme) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCardScheme) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCardScheme.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCardScheme proto.InternalMessageInfo

type MsgBuyCardSchemeResponse struct {
	CardId uint64 `protobuf:"varint,1,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgBuyCardSchemeResponse) Reset()         { *m = MsgBuyCardSchemeResponse{} }
func (m *MsgBuyCardSchemeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCardSchemeResponse) ProtoMessage()    {}
func (*MsgBuyCardSchemeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{3}
}
func (m *MsgBuyCardSchemeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCardSchemeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCardSchemeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCardSchemeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCardSchemeResponse.Merge(m, src)
}
func (m *MsgBuyCardSchemeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCardSchemeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCardSchemeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCardSchemeResponse proto.InternalMessageInfo

func (m *MsgBuyCardSchemeResponse) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgVoteCard struct {
	Creator  string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId   uint64   `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	VoteType VoteType `protobuf:"varint,3,opt,name=voteType,proto3,enum=DecentralCardGame.cardchain.cardchain.VoteType" json:"voteType,omitempty"`
}

func (m *MsgVoteCard) Reset()         { *m = MsgVoteCard{} }
func (m *MsgVoteCard) String() string { return proto.CompactTextString(m) }
func (*MsgVoteCard) ProtoMessage()    {}
func (*MsgVoteCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{4}
}
func (m *MsgVoteCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteCard.Merge(m, src)
}
func (m *MsgVoteCard) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteCard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteCard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteCard proto.InternalMessageInfo

func (m *MsgVoteCard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgVoteCard) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgVoteCard) GetVoteType() VoteType {
	if m != nil {
		return m.VoteType
	}
	return VoteType_fairEnough
}

type MsgVoteCardResponse struct {
	AirdropClaimed bool `protobuf:"varint,1,opt,name=airdropClaimed,proto3" json:"airdropClaimed,omitempty"`
}

func (m *MsgVoteCardResponse) Reset()         { *m = MsgVoteCardResponse{} }
func (m *MsgVoteCardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVoteCardResponse) ProtoMessage()    {}
func (*MsgVoteCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{5}
}
func (m *MsgVoteCardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteCardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteCardResponse.Merge(m, src)
}
func (m *MsgVoteCardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteCardResponse proto.InternalMessageInfo

func (m *MsgVoteCardResponse) GetAirdropClaimed() bool {
	if m != nil {
		return m.AirdropClaimed
	}
	return false
}

type MsgSaveCardContent struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	//  bytes image = 4;
	//  string fullArt = 5;
	Notes         string `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	Artist        string `protobuf:"bytes,5,opt,name=artist,proto3" json:"artist,omitempty"`
	BalanceAnchor bool   `protobuf:"varint,6,opt,name=balanceAnchor,proto3" json:"balanceAnchor,omitempty"`
}

func (m *MsgSaveCardContent) Reset()         { *m = MsgSaveCardContent{} }
func (m *MsgSaveCardContent) String() string { return proto.CompactTextString(m) }
func (*MsgSaveCardContent) ProtoMessage()    {}
func (*MsgSaveCardContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{6}
}
func (m *MsgSaveCardContent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSaveCardContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSaveCardContent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSaveCardContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSaveCardContent.Merge(m, src)
}
func (m *MsgSaveCardContent) XXX_Size() int {
	return m.Size()
}
func (m *MsgSaveCardContent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSaveCardContent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSaveCardContent proto.InternalMessageInfo

func (m *MsgSaveCardContent) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSaveCardContent) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgSaveCardContent) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *MsgSaveCardContent) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *MsgSaveCardContent) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

func (m *MsgSaveCardContent) GetBalanceAnchor() bool {
	if m != nil {
		return m.BalanceAnchor
	}
	return false
}

type MsgSaveCardContentResponse struct {
	AirdropClaimed bool `protobuf:"varint,1,opt,name=airdropClaimed,proto3" json:"airdropClaimed,omitempty"`
}

func (m *MsgSaveCardContentResponse) Reset()         { *m = MsgSaveCardContentResponse{} }
func (m *MsgSaveCardContentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSaveCardContentResponse) ProtoMessage()    {}
func (*MsgSaveCardContentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{7}
}
func (m *MsgSaveCardContentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSaveCardContentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSaveCardContentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSaveCardContentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSaveCardContentResponse.Merge(m, src)
}
func (m *MsgSaveCardContentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSaveCardContentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSaveCardContentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSaveCardContentResponse proto.InternalMessageInfo

func (m *MsgSaveCardContentResponse) GetAirdropClaimed() bool {
	if m != nil {
		return m.AirdropClaimed
	}
	return false
}

type MsgTransferCard struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId   uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Receiver string `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (m *MsgTransferCard) Reset()         { *m = MsgTransferCard{} }
func (m *MsgTransferCard) String() string { return proto.CompactTextString(m) }
func (*MsgTransferCard) ProtoMessage()    {}
func (*MsgTransferCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{8}
}
func (m *MsgTransferCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferCard.Merge(m, src)
}
func (m *MsgTransferCard) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferCard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferCard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferCard proto.InternalMessageInfo

func (m *MsgTransferCard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgTransferCard) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgTransferCard) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

type MsgTransferCardResponse struct {
}

func (m *MsgTransferCardResponse) Reset()         { *m = MsgTransferCardResponse{} }
func (m *MsgTransferCardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTransferCardResponse) ProtoMessage()    {}
func (*MsgTransferCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{9}
}
func (m *MsgTransferCardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferCardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferCardResponse.Merge(m, src)
}
func (m *MsgTransferCardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferCardResponse proto.InternalMessageInfo

type MsgDonateToCard struct {
	Creator string                                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64                                  `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Amount  github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,3,opt,name=amount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"amount"`
}

func (m *MsgDonateToCard) Reset()         { *m = MsgDonateToCard{} }
func (m *MsgDonateToCard) String() string { return proto.CompactTextString(m) }
func (*MsgDonateToCard) ProtoMessage()    {}
func (*MsgDonateToCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{10}
}
func (m *MsgDonateToCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDonateToCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDonateToCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDonateToCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDonateToCard.Merge(m, src)
}
func (m *MsgDonateToCard) XXX_Size() int {
	return m.Size()
}
func (m *MsgDonateToCard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDonateToCard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDonateToCard proto.InternalMessageInfo

func (m *MsgDonateToCard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDonateToCard) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgDonateToCardResponse struct {
}

func (m *MsgDonateToCardResponse) Reset()         { *m = MsgDonateToCardResponse{} }
func (m *MsgDonateToCardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDonateToCardResponse) ProtoMessage()    {}
func (*MsgDonateToCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{11}
}
func (m *MsgDonateToCardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDonateToCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDonateToCardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDonateToCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDonateToCardResponse.Merge(m, src)
}
func (m *MsgDonateToCardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDonateToCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDonateToCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDonateToCardResponse proto.InternalMessageInfo

type MsgAddArtwork struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Image   []byte `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	FullArt bool   `protobuf:"varint,4,opt,name=fullArt,proto3" json:"fullArt,omitempty"`
}

func (m *MsgAddArtwork) Reset()         { *m = MsgAddArtwork{} }
func (m *MsgAddArtwork) String() string { return proto.CompactTextString(m) }
func (*MsgAddArtwork) ProtoMessage()    {}
func (*MsgAddArtwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{12}
}
func (m *MsgAddArtwork) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddArtwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddArtwork.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddArtwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddArtwork.Merge(m, src)
}
func (m *MsgAddArtwork) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddArtwork) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddArtwork.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddArtwork proto.InternalMessageInfo

func (m *MsgAddArtwork) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddArtwork) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgAddArtwork) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *MsgAddArtwork) GetFullArt() bool {
	if m != nil {
		return m.FullArt
	}
	return false
}

type MsgAddArtworkResponse struct {
}

func (m *MsgAddArtworkResponse) Reset()         { *m = MsgAddArtworkResponse{} }
func (m *MsgAddArtworkResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddArtworkResponse) ProtoMessage()    {}
func (*MsgAddArtworkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{13}
}
func (m *MsgAddArtworkResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddArtworkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddArtworkResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddArtworkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddArtworkResponse.Merge(m, src)
}
func (m *MsgAddArtworkResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddArtworkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddArtworkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddArtworkResponse proto.InternalMessageInfo

type MsgChangeArtist struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardID  uint64 `protobuf:"varint,2,opt,name=cardID,proto3" json:"cardID,omitempty"`
	Artist  string `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
}

func (m *MsgChangeArtist) Reset()         { *m = MsgChangeArtist{} }
func (m *MsgChangeArtist) String() string { return proto.CompactTextString(m) }
func (*MsgChangeArtist) ProtoMessage()    {}
func (*MsgChangeArtist) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{14}
}
func (m *MsgChangeArtist) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgChangeArtist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgChangeArtist.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgChangeArtist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgChangeArtist.Merge(m, src)
}
func (m *MsgChangeArtist) XXX_Size() int {
	return m.Size()
}
func (m *MsgChangeArtist) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgChangeArtist.DiscardUnknown(m)
}

var xxx_messageInfo_MsgChangeArtist proto.InternalMessageInfo

func (m *MsgChangeArtist) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgChangeArtist) GetCardID() uint64 {
	if m != nil {
		return m.CardID
	}
	return 0
}

func (m *MsgChangeArtist) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

type MsgChangeArtistResponse struct {
}

func (m *MsgChangeArtistResponse) Reset()         { *m = MsgChangeArtistResponse{} }
func (m *MsgChangeArtistResponse) String() string { return proto.CompactTextString(m) }
func (*MsgChangeArtistResponse) ProtoMessage()    {}
func (*MsgChangeArtistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{15}
}
func (m *MsgChangeArtistResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgChangeArtistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgChangeArtistResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgChangeArtistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgChangeArtistResponse.Merge(m, src)
}
func (m *MsgChangeArtistResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgChangeArtistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgChangeArtistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgChangeArtistResponse proto.InternalMessageInfo

type MsgRegisterForCouncil struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgRegisterForCouncil) Reset()         { *m = MsgRegisterForCouncil{} }
func (m *MsgRegisterForCouncil) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterForCouncil) ProtoMessage()    {}
func (*MsgRegisterForCouncil) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{16}
}
func (m *MsgRegisterForCouncil) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterForCouncil) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterForCouncil.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterForCouncil) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterForCouncil.Merge(m, src)
}
func (m *MsgRegisterForCouncil) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterForCouncil) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterForCouncil.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterForCouncil proto.InternalMessageInfo

func (m *MsgRegisterForCouncil) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgRegisterForCouncilResponse struct {
}

func (m *MsgRegisterForCouncilResponse) Reset()         { *m = MsgRegisterForCouncilResponse{} }
func (m *MsgRegisterForCouncilResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterForCouncilResponse) ProtoMessage()    {}
func (*MsgRegisterForCouncilResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{17}
}
func (m *MsgRegisterForCouncilResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterForCouncilResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterForCouncilResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterForCouncilResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterForCouncilResponse.Merge(m, src)
}
func (m *MsgRegisterForCouncilResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterForCouncilResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterForCouncilResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterForCouncilResponse proto.InternalMessageInfo

type MsgReportMatch struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MatchId      uint64   `protobuf:"varint,2,opt,name=matchId,proto3" json:"matchId,omitempty"`
	PlayedCardsA []uint64 `protobuf:"varint,3,rep,packed,name=playedCardsA,proto3" json:"playedCardsA,omitempty"`
	PlayedCardsB []uint64 `protobuf:"varint,4,rep,packed,name=playedCardsB,proto3" json:"playedCardsB,omitempty"`
	Outcome      Outcome  `protobuf:"varint,5,opt,name=outcome,proto3,enum=DecentralCardGame.cardchain.cardchain.Outcome" json:"outcome,omitempty"`
}

func (m *MsgReportMatch) Reset()         { *m = MsgReportMatch{} }
func (m *MsgReportMatch) String() string { return proto.CompactTextString(m) }
func (*MsgReportMatch) ProtoMessage()    {}
func (*MsgReportMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{18}
}
func (m *MsgReportMatch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReportMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReportMatch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReportMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReportMatch.Merge(m, src)
}
func (m *MsgReportMatch) XXX_Size() int {
	return m.Size()
}
func (m *MsgReportMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReportMatch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReportMatch proto.InternalMessageInfo

func (m *MsgReportMatch) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgReportMatch) GetMatchId() uint64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

func (m *MsgReportMatch) GetPlayedCardsA() []uint64 {
	if m != nil {
		return m.PlayedCardsA
	}
	return nil
}

func (m *MsgReportMatch) GetPlayedCardsB() []uint64 {
	if m != nil {
		return m.PlayedCardsB
	}
	return nil
}

func (m *MsgReportMatch) GetOutcome() Outcome {
	if m != nil {
		return m.Outcome
	}
	return Outcome_AWon
}

type MsgReportMatchResponse struct {
	MatchId uint64 `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"`
}

func (m *MsgReportMatchResponse) Reset()         { *m = MsgReportMatchResponse{} }
func (m *MsgReportMatchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgReportMatchResponse) ProtoMessage()    {}
func (*MsgReportMatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{19}
}
func (m *MsgReportMatchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReportMatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReportMatchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReportMatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReportMatchResponse.Merge(m, src)
}
func (m *MsgReportMatchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgReportMatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReportMatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReportMatchResponse proto.InternalMessageInfo

func (m *MsgReportMatchResponse) GetMatchId() uint64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

type MsgApointMatchReporter struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Reporter string `protobuf:"bytes,2,opt,name=reporter,proto3" json:"reporter,omitempty"`
}

func (m *MsgApointMatchReporter) Reset()         { *m = MsgApointMatchReporter{} }
func (m *MsgApointMatchReporter) String() string { return proto.CompactTextString(m) }
func (*MsgApointMatchReporter) ProtoMessage()    {}
func (*MsgApointMatchReporter) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{20}
}
func (m *MsgApointMatchReporter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApointMatchReporter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApointMatchReporter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApointMatchReporter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApointMatchReporter.Merge(m, src)
}
func (m *MsgApointMatchReporter) XXX_Size() int {
	return m.Size()
}
func (m *MsgApointMatchReporter) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApointMatchReporter.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApointMatchReporter proto.InternalMessageInfo

func (m *MsgApointMatchReporter) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgApointMatchReporter) GetReporter() string {
	if m != nil {
		return m.Reporter
	}
	return ""
}

type MsgApointMatchReporterResponse struct {
}

func (m *MsgApointMatchReporterResponse) Reset()         { *m = MsgApointMatchReporterResponse{} }
func (m *MsgApointMatchReporterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgApointMatchReporterResponse) ProtoMessage()    {}
func (*MsgApointMatchReporterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{21}
}
func (m *MsgApointMatchReporterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApointMatchReporterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApointMatchReporterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApointMatchReporterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApointMatchReporterResponse.Merge(m, src)
}
func (m *MsgApointMatchReporterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgApointMatchReporterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApointMatchReporterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApointMatchReporterResponse proto.InternalMessageInfo

type MsgCreateSet struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Artist       string   `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	StoryWriter  string   `protobuf:"bytes,4,opt,name=storyWriter,proto3" json:"storyWriter,omitempty"`
	Contributors []string `protobuf:"bytes,5,rep,name=contributors,proto3" json:"contributors,omitempty"`
}

func (m *MsgCreateSet) Reset()         { *m = MsgCreateSet{} }
func (m *MsgCreateSet) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSet) ProtoMessage()    {}
func (*MsgCreateSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{22}
}
func (m *MsgCreateSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSet.Merge(m, src)
}
func (m *MsgCreateSet) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSet proto.InternalMessageInfo

func (m *MsgCreateSet) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateSet) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

func (m *MsgCreateSet) GetStoryWriter() string {
	if m != nil {
		return m.StoryWriter
	}
	return ""
}

func (m *MsgCreateSet) GetContributors() []string {
	if m != nil {
		return m.Contributors
	}
	return nil
}

type MsgCreateSetResponse struct {
}

func (m *MsgCreateSetResponse) Reset()         { *m = MsgCreateSetResponse{} }
func (m *MsgCreateSetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSetResponse) ProtoMessage()    {}
func (*MsgCreateSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{23}
}
func (m *MsgCreateSetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSetResponse.Merge(m, src)
}
func (m *MsgCreateSetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSetResponse proto.InternalMessageInfo

type MsgAddCardToSet struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	CardId  uint64 `protobuf:"varint,3,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgAddCardToSet) Reset()         { *m = MsgAddCardToSet{} }
func (m *MsgAddCardToSet) String() string { return proto.CompactTextString(m) }
func (*MsgAddCardToSet) ProtoMessage()    {}
func (*MsgAddCardToSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{24}
}
func (m *MsgAddCardToSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddCardToSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddCardToSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddCardToSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddCardToSet.Merge(m, src)
}
func (m *MsgAddCardToSet) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddCardToSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddCardToSet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddCardToSet proto.InternalMessageInfo

func (m *MsgAddCardToSet) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddCardToSet) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgAddCardToSet) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgAddCardToSetResponse struct {
}

func (m *MsgAddCardToSetResponse) Reset()         { *m = MsgAddCardToSetResponse{} }
func (m *MsgAddCardToSetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddCardToSetResponse) ProtoMessage()    {}
func (*MsgAddCardToSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{25}
}
func (m *MsgAddCardToSetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddCardToSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddCardToSetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddCardToSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddCardToSetResponse.Merge(m, src)
}
func (m *MsgAddCardToSetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddCardToSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddCardToSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddCardToSetResponse proto.InternalMessageInfo

type MsgFinalizeSet struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
}

func (m *MsgFinalizeSet) Reset()         { *m = MsgFinalizeSet{} }
func (m *MsgFinalizeSet) String() string { return proto.CompactTextString(m) }
func (*MsgFinalizeSet) ProtoMessage()    {}
func (*MsgFinalizeSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{26}
}
func (m *MsgFinalizeSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinalizeSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinalizeSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinalizeSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinalizeSet.Merge(m, src)
}
func (m *MsgFinalizeSet) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinalizeSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinalizeSet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinalizeSet proto.InternalMessageInfo

func (m *MsgFinalizeSet) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgFinalizeSet) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

type MsgFinalizeSetResponse struct {
}

func (m *MsgFinalizeSetResponse) Reset()         { *m = MsgFinalizeSetResponse{} }
func (m *MsgFinalizeSetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFinalizeSetResponse) ProtoMessage()    {}
func (*MsgFinalizeSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{27}
}
func (m *MsgFinalizeSetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinalizeSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinalizeSetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinalizeSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinalizeSetResponse.Merge(m, src)
}
func (m *MsgFinalizeSetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinalizeSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinalizeSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinalizeSetResponse proto.InternalMessageInfo

type MsgBuyBoosterPack struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
}

func (m *MsgBuyBoosterPack) Reset()         { *m = MsgBuyBoosterPack{} }
func (m *MsgBuyBoosterPack) String() string { return proto.CompactTextString(m) }
func (*MsgBuyBoosterPack) ProtoMessage()    {}
func (*MsgBuyBoosterPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{28}
}
func (m *MsgBuyBoosterPack) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyBoosterPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyBoosterPack.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyBoosterPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyBoosterPack.Merge(m, src)
}
func (m *MsgBuyBoosterPack) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyBoosterPack) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyBoosterPack.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyBoosterPack proto.InternalMessageInfo

func (m *MsgBuyBoosterPack) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgBuyBoosterPack) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

type MsgBuyBoosterPackResponse struct {
	AirdropClaimed bool `protobuf:"varint,1,opt,name=airdropClaimed,proto3" json:"airdropClaimed,omitempty"`
}

func (m *MsgBuyBoosterPackResponse) Reset()         { *m = MsgBuyBoosterPackResponse{} }
func (m *MsgBuyBoosterPackResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBuyBoosterPackResponse) ProtoMessage()    {}
func (*MsgBuyBoosterPackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{29}
}
func (m *MsgBuyBoosterPackResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyBoosterPackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyBoosterPackResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyBoosterPackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyBoosterPackResponse.Merge(m, src)
}
func (m *MsgBuyBoosterPackResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyBoosterPackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyBoosterPackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyBoosterPackResponse proto.InternalMessageInfo

func (m *MsgBuyBoosterPackResponse) GetAirdropClaimed() bool {
	if m != nil {
		return m.AirdropClaimed
	}
	return false
}

type MsgRemoveCardFromSet struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	CardId  uint64 `protobuf:"varint,3,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgRemoveCardFromSet) Reset()         { *m = MsgRemoveCardFromSet{} }
func (m *MsgRemoveCardFromSet) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveCardFromSet) ProtoMessage()    {}
func (*MsgRemoveCardFromSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{30}
}
func (m *MsgRemoveCardFromSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveCardFromSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveCardFromSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveCardFromSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveCardFromSet.Merge(m, src)
}
func (m *MsgRemoveCardFromSet) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveCardFromSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveCardFromSet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveCardFromSet proto.InternalMessageInfo

func (m *MsgRemoveCardFromSet) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveCardFromSet) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgRemoveCardFromSet) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgRemoveCardFromSetResponse struct {
}

func (m *MsgRemoveCardFromSetResponse) Reset()         { *m = MsgRemoveCardFromSetResponse{} }
func (m *MsgRemoveCardFromSetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveCardFromSetResponse) ProtoMessage()    {}
func (*MsgRemoveCardFromSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{31}
}
func (m *MsgRemoveCardFromSetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveCardFromSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveCardFromSetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveCardFromSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveCardFromSetResponse.Merge(m, src)
}
func (m *MsgRemoveCardFromSetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveCardFromSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveCardFromSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveCardFromSetResponse proto.InternalMessageInfo

type MsgRemoveContributorFromSet struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	User    string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *MsgRemoveContributorFromSet) Reset()         { *m = MsgRemoveContributorFromSet{} }
func (m *MsgRemoveContributorFromSet) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveContributorFromSet) ProtoMessage()    {}
func (*MsgRemoveContributorFromSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{32}
}
func (m *MsgRemoveContributorFromSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveContributorFromSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveContributorFromSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveContributorFromSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveContributorFromSet.Merge(m, src)
}
func (m *MsgRemoveContributorFromSet) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveContributorFromSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveContributorFromSet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveContributorFromSet proto.InternalMessageInfo

func (m *MsgRemoveContributorFromSet) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveContributorFromSet) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgRemoveContributorFromSet) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type MsgRemoveContributorFromSetResponse struct {
}

func (m *MsgRemoveContributorFromSetResponse) Reset()         { *m = MsgRemoveContributorFromSetResponse{} }
func (m *MsgRemoveContributorFromSetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveContributorFromSetResponse) ProtoMessage()    {}
func (*MsgRemoveContributorFromSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{33}
}
func (m *MsgRemoveContributorFromSetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveContributorFromSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveContributorFromSetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveContributorFromSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveContributorFromSetResponse.Merge(m, src)
}
func (m *MsgRemoveContributorFromSetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveContributorFromSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveContributorFromSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveContributorFromSetResponse proto.InternalMessageInfo

type MsgAddContributorToSet struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	User    string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *MsgAddContributorToSet) Reset()         { *m = MsgAddContributorToSet{} }
func (m *MsgAddContributorToSet) String() string { return proto.CompactTextString(m) }
func (*MsgAddContributorToSet) ProtoMessage()    {}
func (*MsgAddContributorToSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{34}
}
func (m *MsgAddContributorToSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddContributorToSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddContributorToSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddContributorToSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddContributorToSet.Merge(m, src)
}
func (m *MsgAddContributorToSet) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddContributorToSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddContributorToSet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddContributorToSet proto.InternalMessageInfo

func (m *MsgAddContributorToSet) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddContributorToSet) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgAddContributorToSet) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type MsgAddContributorToSetResponse struct {
}

func (m *MsgAddContributorToSetResponse) Reset()         { *m = MsgAddContributorToSetResponse{} }
func (m *MsgAddContributorToSetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddContributorToSetResponse) ProtoMessage()    {}
func (*MsgAddContributorToSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{35}
}
func (m *MsgAddContributorToSetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddContributorToSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddContributorToSetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddContributorToSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddContributorToSetResponse.Merge(m, src)
}
func (m *MsgAddContributorToSetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddContributorToSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddContributorToSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddContributorToSetResponse proto.InternalMessageInfo

type MsgCreateSellOffer struct {
	Creator string                                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Card    uint64                                  `protobuf:"varint,2,opt,name=card,proto3" json:"card,omitempty"`
	Price   github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,3,opt,name=price,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"price"`
}

func (m *MsgCreateSellOffer) Reset()         { *m = MsgCreateSellOffer{} }
func (m *MsgCreateSellOffer) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSellOffer) ProtoMessage()    {}
func (*MsgCreateSellOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{36}
}
func (m *MsgCreateSellOffer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSellOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSellOffer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSellOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSellOffer.Merge(m, src)
}
func (m *MsgCreateSellOffer) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSellOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSellOffer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSellOffer proto.InternalMessageInfo

func (m *MsgCreateSellOffer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSellOffer) GetCard() uint64 {
	if m != nil {
		return m.Card
	}
	return 0
}

type MsgCreateSellOfferResponse struct {
}

func (m *MsgCreateSellOfferResponse) Reset()         { *m = MsgCreateSellOfferResponse{} }
func (m *MsgCreateSellOfferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSellOfferResponse) ProtoMessage()    {}
func (*MsgCreateSellOfferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{37}
}
func (m *MsgCreateSellOfferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSellOfferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSellOfferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSellOfferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSellOfferResponse.Merge(m, src)
}
func (m *MsgCreateSellOfferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSellOfferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSellOfferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSellOfferResponse proto.InternalMessageInfo

type MsgBuyCard struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SellOfferId uint64 `protobuf:"varint,2,opt,name=sellOfferId,proto3" json:"sellOfferId,omitempty"`
}

func (m *MsgBuyCard) Reset()         { *m = MsgBuyCard{} }
func (m *MsgBuyCard) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCard) ProtoMessage()    {}
func (*MsgBuyCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{38}
}
func (m *MsgBuyCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCard.Merge(m, src)
}
func (m *MsgBuyCard) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCard proto.InternalMessageInfo

func (m *MsgBuyCard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgBuyCard) GetSellOfferId() uint64 {
	if m != nil {
		return m.SellOfferId
	}
	return 0
}

type MsgBuyCardResponse struct {
}

func (m *MsgBuyCardResponse) Reset()         { *m = MsgBuyCardResponse{} }
func (m *MsgBuyCardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBuyCardResponse) ProtoMessage()    {}
func (*MsgBuyCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{39}
}
func (m *MsgBuyCardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBuyCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBuyCardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBuyCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBuyCardResponse.Merge(m, src)
}
func (m *MsgBuyCardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBuyCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBuyCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBuyCardResponse proto.InternalMessageInfo

type MsgRemoveSellOffer struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SellOfferId uint64 `protobuf:"varint,2,opt,name=sellOfferId,proto3" json:"sellOfferId,omitempty"`
}

func (m *MsgRemoveSellOffer) Reset()         { *m = MsgRemoveSellOffer{} }
func (m *MsgRemoveSellOffer) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSellOffer) ProtoMessage()    {}
func (*MsgRemoveSellOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{40}
}
func (m *MsgRemoveSellOffer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSellOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSellOffer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSellOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSellOffer.Merge(m, src)
}
func (m *MsgRemoveSellOffer) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSellOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSellOffer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSellOffer proto.InternalMessageInfo

func (m *MsgRemoveSellOffer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveSellOffer) GetSellOfferId() uint64 {
	if m != nil {
		return m.SellOfferId
	}
	return 0
}

type MsgRemoveSellOfferResponse struct {
}

func (m *MsgRemoveSellOfferResponse) Reset()         { *m = MsgRemoveSellOfferResponse{} }
func (m *MsgRemoveSellOfferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSellOfferResponse) ProtoMessage()    {}
func (*MsgRemoveSellOfferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{41}
}
func (m *MsgRemoveSellOfferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSellOfferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSellOfferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSellOfferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSellOfferResponse.Merge(m, src)
}
func (m *MsgRemoveSellOfferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSellOfferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSellOfferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSellOfferResponse proto.InternalMessageInfo

type MsgAddArtworkToSet struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	Image   []byte `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
}

func (m *MsgAddArtworkToSet) Reset()         { *m = MsgAddArtworkToSet{} }
func (m *MsgAddArtworkToSet) String() string { return proto.CompactTextString(m) }
func (*MsgAddArtworkToSet) ProtoMessage()    {}
func (*MsgAddArtworkToSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{42}
}
func (m *MsgAddArtworkToSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddArtworkToSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddArtworkToSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddArtworkToSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddArtworkToSet.Merge(m, src)
}
func (m *MsgAddArtworkToSet) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddArtworkToSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddArtworkToSet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddArtworkToSet proto.InternalMessageInfo

func (m *MsgAddArtworkToSet) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddArtworkToSet) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgAddArtworkToSet) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

type MsgAddArtworkToSetResponse struct {
}

func (m *MsgAddArtworkToSetResponse) Reset()         { *m = MsgAddArtworkToSetResponse{} }
func (m *MsgAddArtworkToSetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddArtworkToSetResponse) ProtoMessage()    {}
func (*MsgAddArtworkToSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{43}
}
func (m *MsgAddArtworkToSetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddArtworkToSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddArtworkToSetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddArtworkToSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddArtworkToSetResponse.Merge(m, src)
}
func (m *MsgAddArtworkToSetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddArtworkToSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddArtworkToSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddArtworkToSetResponse proto.InternalMessageInfo

type MsgAddStoryToSet struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	Story   string `protobuf:"bytes,3,opt,name=story,proto3" json:"story,omitempty"`
}

func (m *MsgAddStoryToSet) Reset()         { *m = MsgAddStoryToSet{} }
func (m *MsgAddStoryToSet) String() string { return proto.CompactTextString(m) }
func (*MsgAddStoryToSet) ProtoMessage()    {}
func (*MsgAddStoryToSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{44}
}
func (m *MsgAddStoryToSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddStoryToSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddStoryToSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddStoryToSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddStoryToSet.Merge(m, src)
}
func (m *MsgAddStoryToSet) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddStoryToSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddStoryToSet.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddStoryToSet proto.InternalMessageInfo

func (m *MsgAddStoryToSet) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddStoryToSet) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgAddStoryToSet) GetStory() string {
	if m != nil {
		return m.Story
	}
	return ""
}

type MsgAddStoryToSetResponse struct {
}

func (m *MsgAddStoryToSetResponse) Reset()         { *m = MsgAddStoryToSetResponse{} }
func (m *MsgAddStoryToSetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddStoryToSetResponse) ProtoMessage()    {}
func (*MsgAddStoryToSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{45}
}
func (m *MsgAddStoryToSetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddStoryToSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddStoryToSetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddStoryToSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddStoryToSetResponse.Merge(m, src)
}
func (m *MsgAddStoryToSetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddStoryToSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddStoryToSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddStoryToSetResponse proto.InternalMessageInfo

type MsgSetCardRarity struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64     `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	SetId   uint64     `protobuf:"varint,3,opt,name=setId,proto3" json:"setId,omitempty"`
	Rarity  CardRarity `protobuf:"varint,4,opt,name=rarity,proto3,enum=DecentralCardGame.cardchain.cardchain.CardRarity" json:"rarity,omitempty"`
}

func (m *MsgSetCardRarity) Reset()         { *m = MsgSetCardRarity{} }
func (m *MsgSetCardRarity) String() string { return proto.CompactTextString(m) }
func (*MsgSetCardRarity) ProtoMessage()    {}
func (*MsgSetCardRarity) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{46}
}
func (m *MsgSetCardRarity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCardRarity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCardRarity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCardRarity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCardRarity.Merge(m, src)
}
func (m *MsgSetCardRarity) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCardRarity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCardRarity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCardRarity proto.InternalMessageInfo

func (m *MsgSetCardRarity) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetCardRarity) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgSetCardRarity) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgSetCardRarity) GetRarity() CardRarity {
	if m != nil {
		return m.Rarity
	}
	return CardRarity_common
}

type MsgSetCardRarityResponse struct {
}

func (m *MsgSetCardRarityResponse) Reset()         { *m = MsgSetCardRarityResponse{} }
func (m *MsgSetCardRarityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetCardRarityResponse) ProtoMessage()    {}
func (*MsgSetCardRarityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{47}
}
func (m *MsgSetCardRarityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCardRarityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCardRarityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCardRarityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCardRarityResponse.Merge(m, src)
}
func (m *MsgSetCardRarityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCardRarityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCardRarityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCardRarityResponse proto.InternalMessageInfo

type MsgCreateCouncil struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgCreateCouncil) Reset()         { *m = MsgCreateCouncil{} }
func (m *MsgCreateCouncil) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCouncil) ProtoMessage()    {}
func (*MsgCreateCouncil) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{48}
}
func (m *MsgCreateCouncil) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCouncil) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCouncil.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCouncil) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCouncil.Merge(m, src)
}
func (m *MsgCreateCouncil) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCouncil) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCouncil.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCouncil proto.InternalMessageInfo

func (m *MsgCreateCouncil) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateCouncil) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgCreateCouncilResponse struct {
}

func (m *MsgCreateCouncilResponse) Reset()         { *m = MsgCreateCouncilResponse{} }
func (m *MsgCreateCouncilResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCouncilResponse) ProtoMessage()    {}
func (*MsgCreateCouncilResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{49}
}
func (m *MsgCreateCouncilResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCouncilResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCouncilResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCouncilResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCouncilResponse.Merge(m, src)
}
func (m *MsgCreateCouncilResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCouncilResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCouncilResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCouncilResponse proto.InternalMessageInfo

// Add revision
type MsgCommitCouncilResponse struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Response   string `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	CouncilId  uint64 `protobuf:"varint,3,opt,name=councilId,proto3" json:"councilId,omitempty"`
	Suggestion string `protobuf:"bytes,4,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
}

func (m *MsgCommitCouncilResponse) Reset()         { *m = MsgCommitCouncilResponse{} }
func (m *MsgCommitCouncilResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCommitCouncilResponse) ProtoMessage()    {}
func (*MsgCommitCouncilResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{50}
}
func (m *MsgCommitCouncilResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCommitCouncilResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCommitCouncilResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCommitCouncilResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCommitCouncilResponse.Merge(m, src)
}
func (m *MsgCommitCouncilResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCommitCouncilResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCommitCouncilResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCommitCouncilResponse proto.InternalMessageInfo

func (m *MsgCommitCouncilResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCommitCouncilResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func (m *MsgCommitCouncilResponse) GetCouncilId() uint64 {
	if m != nil {
		return m.CouncilId
	}
	return 0
}

func (m *MsgCommitCouncilResponse) GetSuggestion() string {
	if m != nil {
		return m.Suggestion
	}
	return ""
}

type MsgCommitCouncilResponseResponse struct {
}

func (m *MsgCommitCouncilResponseResponse) Reset()         { *m = MsgCommitCouncilResponseResponse{} }
func (m *MsgCommitCouncilResponseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCommitCouncilResponseResponse) ProtoMessage()    {}
func (*MsgCommitCouncilResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{51}
}
func (m *MsgCommitCouncilResponseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCommitCouncilResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCommitCouncilResponseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCommitCouncilResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCommitCouncilResponseResponse.Merge(m, src)
}
func (m *MsgCommitCouncilResponseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCommitCouncilResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCommitCouncilResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCommitCouncilResponseResponse proto.InternalMessageInfo

type MsgRevealCouncilResponse struct {
	Creator   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Response  Response `protobuf:"varint,2,opt,name=response,proto3,enum=DecentralCardGame.cardchain.cardchain.Response" json:"response,omitempty"`
	Secret    string   `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
	CouncilId uint64   `protobuf:"varint,4,opt,name=councilId,proto3" json:"councilId,omitempty"`
}

func (m *MsgRevealCouncilResponse) Reset()         { *m = MsgRevealCouncilResponse{} }
func (m *MsgRevealCouncilResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRevealCouncilResponse) ProtoMessage()    {}
func (*MsgRevealCouncilResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{52}
}
func (m *MsgRevealCouncilResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevealCouncilResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevealCouncilResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevealCouncilResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevealCouncilResponse.Merge(m, src)
}
func (m *MsgRevealCouncilResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevealCouncilResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevealCouncilResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevealCouncilResponse proto.InternalMessageInfo

func (m *MsgRevealCouncilResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRevealCouncilResponse) GetResponse() Response {
	if m != nil {
		return m.Response
	}
	return Response_Yes
}

func (m *MsgRevealCouncilResponse) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *MsgRevealCouncilResponse) GetCouncilId() uint64 {
	if m != nil {
		return m.CouncilId
	}
	return 0
}

type MsgRevealCouncilResponseResponse struct {
}

func (m *MsgRevealCouncilResponseResponse) Reset()         { *m = MsgRevealCouncilResponseResponse{} }
func (m *MsgRevealCouncilResponseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRevealCouncilResponseResponse) ProtoMessage()    {}
func (*MsgRevealCouncilResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{53}
}
func (m *MsgRevealCouncilResponseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevealCouncilResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevealCouncilResponseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevealCouncilResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevealCouncilResponseResponse.Merge(m, src)
}
func (m *MsgRevealCouncilResponseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevealCouncilResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevealCouncilResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevealCouncilResponseResponse proto.InternalMessageInfo

type MsgRestartCouncil struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CouncilId uint64 `protobuf:"varint,2,opt,name=councilId,proto3" json:"councilId,omitempty"`
}

func (m *MsgRestartCouncil) Reset()         { *m = MsgRestartCouncil{} }
func (m *MsgRestartCouncil) String() string { return proto.CompactTextString(m) }
func (*MsgRestartCouncil) ProtoMessage()    {}
func (*MsgRestartCouncil) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{54}
}
func (m *MsgRestartCouncil) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRestartCouncil) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRestartCouncil.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRestartCouncil) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRestartCouncil.Merge(m, src)
}
func (m *MsgRestartCouncil) XXX_Size() int {
	return m.Size()
}
func (m *MsgRestartCouncil) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRestartCouncil.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRestartCouncil proto.InternalMessageInfo

func (m *MsgRestartCouncil) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRestartCouncil) GetCouncilId() uint64 {
	if m != nil {
		return m.CouncilId
	}
	return 0
}

type MsgRestartCouncilResponse struct {
}

func (m *MsgRestartCouncilResponse) Reset()         { *m = MsgRestartCouncilResponse{} }
func (m *MsgRestartCouncilResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRestartCouncilResponse) ProtoMessage()    {}
func (*MsgRestartCouncilResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{55}
}
func (m *MsgRestartCouncilResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRestartCouncilResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRestartCouncilResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRestartCouncilResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRestartCouncilResponse.Merge(m, src)
}
func (m *MsgRestartCouncilResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRestartCouncilResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRestartCouncilResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRestartCouncilResponse proto.InternalMessageInfo

type MsgRewokeCouncilRegistration struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgRewokeCouncilRegistration) Reset()         { *m = MsgRewokeCouncilRegistration{} }
func (m *MsgRewokeCouncilRegistration) String() string { return proto.CompactTextString(m) }
func (*MsgRewokeCouncilRegistration) ProtoMessage()    {}
func (*MsgRewokeCouncilRegistration) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{56}
}
func (m *MsgRewokeCouncilRegistration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRewokeCouncilRegistration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRewokeCouncilRegistration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRewokeCouncilRegistration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRewokeCouncilRegistration.Merge(m, src)
}
func (m *MsgRewokeCouncilRegistration) XXX_Size() int {
	return m.Size()
}
func (m *MsgRewokeCouncilRegistration) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRewokeCouncilRegistration.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRewokeCouncilRegistration proto.InternalMessageInfo

func (m *MsgRewokeCouncilRegistration) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgRewokeCouncilRegistrationResponse struct {
}

func (m *MsgRewokeCouncilRegistrationResponse) Reset()         { *m = MsgRewokeCouncilRegistrationResponse{} }
func (m *MsgRewokeCouncilRegistrationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRewokeCouncilRegistrationResponse) ProtoMessage()    {}
func (*MsgRewokeCouncilRegistrationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{57}
}
func (m *MsgRewokeCouncilRegistrationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRewokeCouncilRegistrationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRewokeCouncilRegistrationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRewokeCouncilRegistrationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRewokeCouncilRegistrationResponse.Merge(m, src)
}
func (m *MsgRewokeCouncilRegistrationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRewokeCouncilRegistrationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRewokeCouncilRegistrationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRewokeCouncilRegistrationResponse proto.InternalMessageInfo

type MsgConfirmMatch struct {
	Creator    string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MatchId    uint64        `protobuf:"varint,2,opt,name=matchId,proto3" json:"matchId,omitempty"`
	Outcome    Outcome       `protobuf:"varint,3,opt,name=outcome,proto3,enum=DecentralCardGame.cardchain.cardchain.Outcome" json:"outcome,omitempty"`
	VotedCards []*SingleVote `protobuf:"bytes,4,rep,name=votedCards,proto3" json:"votedCards,omitempty"`
}

func (m *MsgConfirmMatch) Reset()         { *m = MsgConfirmMatch{} }
func (m *MsgConfirmMatch) String() string { return proto.CompactTextString(m) }
func (*MsgConfirmMatch) ProtoMessage()    {}
func (*MsgConfirmMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{58}
}
func (m *MsgConfirmMatch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgConfirmMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgConfirmMatch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgConfirmMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgConfirmMatch.Merge(m, src)
}
func (m *MsgConfirmMatch) XXX_Size() int {
	return m.Size()
}
func (m *MsgConfirmMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgConfirmMatch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgConfirmMatch proto.InternalMessageInfo

func (m *MsgConfirmMatch) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgConfirmMatch) GetMatchId() uint64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

func (m *MsgConfirmMatch) GetOutcome() Outcome {
	if m != nil {
		return m.Outcome
	}
	return Outcome_AWon
}

func (m *MsgConfirmMatch) GetVotedCards() []*SingleVote {
	if m != nil {
		return m.VotedCards
	}
	return nil
}

type MsgConfirmMatchResponse struct {
}

func (m *MsgConfirmMatchResponse) Reset()         { *m = MsgConfirmMatchResponse{} }
func (m *MsgConfirmMatchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgConfirmMatchResponse) ProtoMessage()    {}
func (*MsgConfirmMatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{59}
}
func (m *MsgConfirmMatchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgConfirmMatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgConfirmMatchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgConfirmMatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgConfirmMatchResponse.Merge(m, src)
}
func (m *MsgConfirmMatchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgConfirmMatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgConfirmMatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgConfirmMatchResponse proto.InternalMessageInfo

type MsgSetProfileCard struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgSetProfileCard) Reset()         { *m = MsgSetProfileCard{} }
func (m *MsgSetProfileCard) String() string { return proto.CompactTextString(m) }
func (*MsgSetProfileCard) ProtoMessage()    {}
func (*MsgSetProfileCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{60}
}
func (m *MsgSetProfileCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetProfileCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetProfileCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetProfileCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetProfileCard.Merge(m, src)
}
func (m *MsgSetProfileCard) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetProfileCard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetProfileCard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetProfileCard proto.InternalMessageInfo

func (m *MsgSetProfileCard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetProfileCard) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgSetProfileCardResponse struct {
}

func (m *MsgSetProfileCardResponse) Reset()         { *m = MsgSetProfileCardResponse{} }
func (m *MsgSetProfileCardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetProfileCardResponse) ProtoMessage()    {}
func (*MsgSetProfileCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{61}
}
func (m *MsgSetProfileCardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetProfileCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetProfileCardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetProfileCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetProfileCardResponse.Merge(m, src)
}
func (m *MsgSetProfileCardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetProfileCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetProfileCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetProfileCardResponse proto.InternalMessageInfo

type MsgOpenBoosterPack struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	BoosterPackId uint64 `protobuf:"varint,2,opt,name=boosterPackId,proto3" json:"boosterPackId,omitempty"`
}

func (m *MsgOpenBoosterPack) Reset()         { *m = MsgOpenBoosterPack{} }
func (m *MsgOpenBoosterPack) String() string { return proto.CompactTextString(m) }
func (*MsgOpenBoosterPack) ProtoMessage()    {}
func (*MsgOpenBoosterPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{62}
}
func (m *MsgOpenBoosterPack) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOpenBoosterPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOpenBoosterPack.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOpenBoosterPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOpenBoosterPack.Merge(m, src)
}
func (m *MsgOpenBoosterPack) XXX_Size() int {
	return m.Size()
}
func (m *MsgOpenBoosterPack) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOpenBoosterPack.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOpenBoosterPack proto.InternalMessageInfo

func (m *MsgOpenBoosterPack) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgOpenBoosterPack) GetBoosterPackId() uint64 {
	if m != nil {
		return m.BoosterPackId
	}
	return 0
}

type MsgOpenBoosterPackResponse struct {
	CardIds []uint64 `protobuf:"varint,1,rep,packed,name=cardIds,proto3" json:"cardIds,omitempty"`
}

func (m *MsgOpenBoosterPackResponse) Reset()         { *m = MsgOpenBoosterPackResponse{} }
func (m *MsgOpenBoosterPackResponse) String() string { return proto.CompactTextString(m) }
func (*MsgOpenBoosterPackResponse) ProtoMessage()    {}
func (*MsgOpenBoosterPackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{63}
}
func (m *MsgOpenBoosterPackResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOpenBoosterPackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOpenBoosterPackResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOpenBoosterPackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOpenBoosterPackResponse.Merge(m, src)
}
func (m *MsgOpenBoosterPackResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgOpenBoosterPackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOpenBoosterPackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOpenBoosterPackResponse proto.InternalMessageInfo

func (m *MsgOpenBoosterPackResponse) GetCardIds() []uint64 {
	if m != nil {
		return m.CardIds
	}
	return nil
}

type MsgTransferBoosterPack struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	BoosterPackId uint64 `protobuf:"varint,2,opt,name=boosterPackId,proto3" json:"boosterPackId,omitempty"`
	Receiver      string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (m *MsgTransferBoosterPack) Reset()         { *m = MsgTransferBoosterPack{} }
func (m *MsgTransferBoosterPack) String() string { return proto.CompactTextString(m) }
func (*MsgTransferBoosterPack) ProtoMessage()    {}
func (*MsgTransferBoosterPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{64}
}
func (m *MsgTransferBoosterPack) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferBoosterPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferBoosterPack.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferBoosterPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferBoosterPack.Merge(m, src)
}
func (m *MsgTransferBoosterPack) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferBoosterPack) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferBoosterPack.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferBoosterPack proto.InternalMessageInfo

func (m *MsgTransferBoosterPack) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgTransferBoosterPack) GetBoosterPackId() uint64 {
	if m != nil {
		return m.BoosterPackId
	}
	return 0
}

func (m *MsgTransferBoosterPack) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

type MsgTransferBoosterPackResponse struct {
}

func (m *MsgTransferBoosterPackResponse) Reset()         { *m = MsgTransferBoosterPackResponse{} }
func (m *MsgTransferBoosterPackResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTransferBoosterPackResponse) ProtoMessage()    {}
func (*MsgTransferBoosterPackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{65}
}
func (m *MsgTransferBoosterPackResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferBoosterPackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferBoosterPackResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferBoosterPackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferBoosterPackResponse.Merge(m, src)
}
func (m *MsgTransferBoosterPackResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferBoosterPackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferBoosterPackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferBoosterPackResponse proto.InternalMessageInfo

type MsgSetSetStoryWriter struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId       uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	StoryWriter string `protobuf:"bytes,3,opt,name=storyWriter,proto3" json:"storyWriter,omitempty"`
}

func (m *MsgSetSetStoryWriter) Reset()         { *m = MsgSetSetStoryWriter{} }
func (m *MsgSetSetStoryWriter) String() string { return proto.CompactTextString(m) }
func (*MsgSetSetStoryWriter) ProtoMessage()    {}
func (*MsgSetSetStoryWriter) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{66}
}
func (m *MsgSetSetStoryWriter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetSetStoryWriter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetSetStoryWriter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetSetStoryWriter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetSetStoryWriter.Merge(m, src)
}
func (m *MsgSetSetStoryWriter) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetSetStoryWriter) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetSetStoryWriter.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetSetStoryWriter proto.InternalMessageInfo

func (m *MsgSetSetStoryWriter) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetSetStoryWriter) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgSetSetStoryWriter) GetStoryWriter() string {
	if m != nil {
		return m.StoryWriter
	}
	return ""
}

type MsgSetSetStoryWriterResponse struct {
}

func (m *MsgSetSetStoryWriterResponse) Reset()         { *m = MsgSetSetStoryWriterResponse{} }
func (m *MsgSetSetStoryWriterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetSetStoryWriterResponse) ProtoMessage()    {}
func (*MsgSetSetStoryWriterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{67}
}
func (m *MsgSetSetStoryWriterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetSetStoryWriterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetSetStoryWriterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetSetStoryWriterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetSetStoryWriterResponse.Merge(m, src)
}
func (m *MsgSetSetStoryWriterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetSetStoryWriterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetSetStoryWriterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetSetStoryWriterResponse proto.InternalMessageInfo

type MsgSetSetArtist struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	Artist  string `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
}

func (m *MsgSetSetArtist) Reset()         { *m = MsgSetSetArtist{} }
func (m *MsgSetSetArtist) String() string { return proto.CompactTextString(m) }
func (*MsgSetSetArtist) ProtoMessage()    {}
func (*MsgSetSetArtist) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{68}
}
func (m *MsgSetSetArtist) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetSetArtist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetSetArtist.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetSetArtist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetSetArtist.Merge(m, src)
}
func (m *MsgSetSetArtist) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetSetArtist) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetSetArtist.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetSetArtist proto.InternalMessageInfo

func (m *MsgSetSetArtist) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetSetArtist) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgSetSetArtist) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

type MsgSetSetArtistResponse struct {
}

func (m *MsgSetSetArtistResponse) Reset()         { *m = MsgSetSetArtistResponse{} }
func (m *MsgSetSetArtistResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetSetArtistResponse) ProtoMessage()    {}
func (*MsgSetSetArtistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{69}
}
func (m *MsgSetSetArtistResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetSetArtistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetSetArtistResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetSetArtistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetSetArtistResponse.Merge(m, src)
}
func (m *MsgSetSetArtistResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetSetArtistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetSetArtistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetSetArtistResponse proto.InternalMessageInfo

type MsgSetUserWebsite struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Website string `protobuf:"bytes,2,opt,name=website,proto3" json:"website,omitempty"`
}

func (m *MsgSetUserWebsite) Reset()         { *m = MsgSetUserWebsite{} }
func (m *MsgSetUserWebsite) String() string { return proto.CompactTextString(m) }
func (*MsgSetUserWebsite) ProtoMessage()    {}
func (*MsgSetUserWebsite) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{70}
}
func (m *MsgSetUserWebsite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetUserWebsite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetUserWebsite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetUserWebsite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetUserWebsite.Merge(m, src)
}
func (m *MsgSetUserWebsite) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetUserWebsite) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetUserWebsite.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetUserWebsite proto.InternalMessageInfo

func (m *MsgSetUserWebsite) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetUserWebsite) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

type MsgSetUserWebsiteResponse struct {
}

func (m *MsgSetUserWebsiteResponse) Reset()         { *m = MsgSetUserWebsiteResponse{} }
func (m *MsgSetUserWebsiteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetUserWebsiteResponse) ProtoMessage()    {}
func (*MsgSetUserWebsiteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{71}
}
func (m *MsgSetUserWebsiteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetUserWebsiteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetUserWebsiteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetUserWebsiteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetUserWebsiteResponse.Merge(m, src)
}
func (m *MsgSetUserWebsiteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetUserWebsiteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetUserWebsiteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetUserWebsiteResponse proto.InternalMessageInfo

type MsgSetUserBiography struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Biography string `protobuf:"bytes,2,opt,name=biography,proto3" json:"biography,omitempty"`
}

func (m *MsgSetUserBiography) Reset()         { *m = MsgSetUserBiography{} }
func (m *MsgSetUserBiography) String() string { return proto.CompactTextString(m) }
func (*MsgSetUserBiography) ProtoMessage()    {}
func (*MsgSetUserBiography) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{72}
}
func (m *MsgSetUserBiography) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetUserBiography) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetUserBiography.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetUserBiography) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetUserBiography.Merge(m, src)
}
func (m *MsgSetUserBiography) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetUserBiography) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetUserBiography.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetUserBiography proto.InternalMessageInfo

func (m *MsgSetUserBiography) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetUserBiography) GetBiography() string {
	if m != nil {
		return m.Biography
	}
	return ""
}

type MsgSetUserBiographyResponse struct {
}

func (m *MsgSetUserBiographyResponse) Reset()         { *m = MsgSetUserBiographyResponse{} }
func (m *MsgSetUserBiographyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetUserBiographyResponse) ProtoMessage()    {}
func (*MsgSetUserBiographyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{73}
}
func (m *MsgSetUserBiographyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetUserBiographyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetUserBiographyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetUserBiographyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetUserBiographyResponse.Merge(m, src)
}
func (m *MsgSetUserBiographyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetUserBiographyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetUserBiographyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetUserBiographyResponse proto.InternalMessageInfo

// this line is used by starport scaffolding # proto/tx/message
type MsgMultiVoteCard struct {
	Creator string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Votes   []*SingleVote `protobuf:"bytes,2,rep,name=votes,proto3" json:"votes,omitempty"`
}

func (m *MsgMultiVoteCard) Reset()         { *m = MsgMultiVoteCard{} }
func (m *MsgMultiVoteCard) String() string { return proto.CompactTextString(m) }
func (*MsgMultiVoteCard) ProtoMessage()    {}
func (*MsgMultiVoteCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{74}
}
func (m *MsgMultiVoteCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiVoteCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiVoteCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiVoteCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiVoteCard.Merge(m, src)
}
func (m *MsgMultiVoteCard) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiVoteCard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiVoteCard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiVoteCard proto.InternalMessageInfo

func (m *MsgMultiVoteCard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMultiVoteCard) GetVotes() []*SingleVote {
	if m != nil {
		return m.Votes
	}
	return nil
}

type MsgMultiVoteCardResponse struct {
}

func (m *MsgMultiVoteCardResponse) Reset()         { *m = MsgMultiVoteCardResponse{} }
func (m *MsgMultiVoteCardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMultiVoteCardResponse) ProtoMessage()    {}
func (*MsgMultiVoteCardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{75}
}
func (m *MsgMultiVoteCardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiVoteCardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiVoteCardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiVoteCardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiVoteCardResponse.Merge(m, src)
}
func (m *MsgMultiVoteCardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiVoteCardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiVoteCardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiVoteCardResponse proto.InternalMessageInfo

type MsgOpenMatch struct {
	Creator     string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PlayerA     string   `protobuf:"bytes,2,opt,name=playerA,proto3" json:"playerA,omitempty"`
	PlayerB     string   `protobuf:"bytes,3,opt,name=playerB,proto3" json:"playerB,omitempty"`
	PlayerADeck []uint64 `protobuf:"varint,4,rep,packed,name=playerADeck,proto3" json:"playerADeck,omitempty"`
	PlayerBDeck []uint64 `protobuf:"varint,5,rep,packed,name=playerBDeck,proto3" json:"playerBDeck,omitempty"`
}

func (m *MsgOpenMatch) Reset()         { *m = MsgOpenMatch{} }
func (m *MsgOpenMatch) String() string { return proto.CompactTextString(m) }
func (*MsgOpenMatch) ProtoMessage()    {}
func (*MsgOpenMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{76}
}
func (m *MsgOpenMatch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOpenMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOpenMatch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOpenMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOpenMatch.Merge(m, src)
}
func (m *MsgOpenMatch) XXX_Size() int {
	return m.Size()
}
func (m *MsgOpenMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOpenMatch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOpenMatch proto.InternalMessageInfo

func (m *MsgOpenMatch) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgOpenMatch) GetPlayerA() string {
	if m != nil {
		return m.PlayerA
	}
	return ""
}

func (m *MsgOpenMatch) GetPlayerB() string {
	if m != nil {
		return m.PlayerB
	}
	return ""
}

func (m *MsgOpenMatch) GetPlayerADeck() []uint64 {
	if m != nil {
		return m.PlayerADeck
	}
	return nil
}

func (m *MsgOpenMatch) GetPlayerBDeck() []uint64 {
	if m != nil {
		return m.PlayerBDeck
	}
	return nil
}

type MsgOpenMatchResponse struct {
	MatchId uint64 `protobuf:"varint,1,opt,name=matchId,proto3" json:"matchId,omitempty"`
}

func (m *MsgOpenMatchResponse) Reset()         { *m = MsgOpenMatchResponse{} }
func (m *MsgOpenMatchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgOpenMatchResponse) ProtoMessage()    {}
func (*MsgOpenMatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{77}
}
func (m *MsgOpenMatchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOpenMatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOpenMatchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOpenMatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOpenMatchResponse.Merge(m, src)
}
func (m *MsgOpenMatchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgOpenMatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOpenMatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOpenMatchResponse proto.InternalMessageInfo

func (m *MsgOpenMatchResponse) GetMatchId() uint64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

type MsgSetSetName struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgSetSetName) Reset()         { *m = MsgSetSetName{} }
func (m *MsgSetSetName) String() string { return proto.CompactTextString(m) }
func (*MsgSetSetName) ProtoMessage()    {}
func (*MsgSetSetName) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{78}
}
func (m *MsgSetSetName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetSetName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetSetName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetSetName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetSetName.Merge(m, src)
}
func (m *MsgSetSetName) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetSetName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetSetName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetSetName proto.InternalMessageInfo

func (m *MsgSetSetName) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetSetName) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgSetSetName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgSetSetNameResponse struct {
}

func (m *MsgSetSetNameResponse) Reset()         { *m = MsgSetSetNameResponse{} }
func (m *MsgSetSetNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetSetNameResponse) ProtoMessage()    {}
func (*MsgSetSetNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{79}
}
func (m *MsgSetSetNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetSetNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetSetNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetSetNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetSetNameResponse.Merge(m, src)
}
func (m *MsgSetSetNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetSetNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetSetNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetSetNameResponse proto.InternalMessageInfo

type MsgChangeAlias struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Alias   string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (m *MsgChangeAlias) Reset()         { *m = MsgChangeAlias{} }
func (m *MsgChangeAlias) String() string { return proto.CompactTextString(m) }
func (*MsgChangeAlias) ProtoMessage()    {}
func (*MsgChangeAlias) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{80}
}
func (m *MsgChangeAlias) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgChangeAlias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgChangeAlias.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgChangeAlias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgChangeAlias.Merge(m, src)
}
func (m *MsgChangeAlias) XXX_Size() int {
	return m.Size()
}
func (m *MsgChangeAlias) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgChangeAlias.DiscardUnknown(m)
}

var xxx_messageInfo_MsgChangeAlias proto.InternalMessageInfo

func (m *MsgChangeAlias) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgChangeAlias) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type MsgChangeAliasResponse struct {
}

func (m *MsgChangeAliasResponse) Reset()         { *m = MsgChangeAliasResponse{} }
func (m *MsgChangeAliasResponse) String() string { return proto.CompactTextString(m) }
func (*MsgChangeAliasResponse) ProtoMessage()    {}
func (*MsgChangeAliasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{81}
}
func (m *MsgChangeAliasResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgChangeAliasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgChangeAliasResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgChangeAliasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgChangeAliasResponse.Merge(m, src)
}
func (m *MsgChangeAliasResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgChangeAliasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgChangeAliasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgChangeAliasResponse proto.InternalMessageInfo

type MsgInviteEarlyAccess struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	User    string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *MsgInviteEarlyAccess) Reset()         { *m = MsgInviteEarlyAccess{} }
func (m *MsgInviteEarlyAccess) String() string { return proto.CompactTextString(m) }
func (*MsgInviteEarlyAccess) ProtoMessage()    {}
func (*MsgInviteEarlyAccess) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{82}
}
func (m *MsgInviteEarlyAccess) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInviteEarlyAccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInviteEarlyAccess.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInviteEarlyAccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInviteEarlyAccess.Merge(m, src)
}
func (m *MsgInviteEarlyAccess) XXX_Size() int {
	return m.Size()
}
func (m *MsgInviteEarlyAccess) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInviteEarlyAccess.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInviteEarlyAccess proto.InternalMessageInfo

func (m *MsgInviteEarlyAccess) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgInviteEarlyAccess) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type MsgInviteEarlyAccessResponse struct {
}

func (m *MsgInviteEarlyAccessResponse) Reset()         { *m = MsgInviteEarlyAccessResponse{} }
func (m *MsgInviteEarlyAccessResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInviteEarlyAccessResponse) ProtoMessage()    {}
func (*MsgInviteEarlyAccessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{83}
}
func (m *MsgInviteEarlyAccessResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInviteEarlyAccessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInviteEarlyAccessResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInviteEarlyAccessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInviteEarlyAccessResponse.Merge(m, src)
}
func (m *MsgInviteEarlyAccessResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInviteEarlyAccessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInviteEarlyAccessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInviteEarlyAccessResponse proto.InternalMessageInfo

type MsgDisinviteEarlyAccess struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	User    string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *MsgDisinviteEarlyAccess) Reset()         { *m = MsgDisinviteEarlyAccess{} }
func (m *MsgDisinviteEarlyAccess) String() string { return proto.CompactTextString(m) }
func (*MsgDisinviteEarlyAccess) ProtoMessage()    {}
func (*MsgDisinviteEarlyAccess) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{84}
}
func (m *MsgDisinviteEarlyAccess) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisinviteEarlyAccess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisinviteEarlyAccess.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisinviteEarlyAccess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisinviteEarlyAccess.Merge(m, src)
}
func (m *MsgDisinviteEarlyAccess) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisinviteEarlyAccess) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisinviteEarlyAccess.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisinviteEarlyAccess proto.InternalMessageInfo

func (m *MsgDisinviteEarlyAccess) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDisinviteEarlyAccess) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type MsgDisinviteEarlyAccessResponse struct {
}

func (m *MsgDisinviteEarlyAccessResponse) Reset()         { *m = MsgDisinviteEarlyAccessResponse{} }
func (m *MsgDisinviteEarlyAccessResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDisinviteEarlyAccessResponse) ProtoMessage()    {}
func (*MsgDisinviteEarlyAccessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{85}
}
func (m *MsgDisinviteEarlyAccessResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDisinviteEarlyAccessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDisinviteEarlyAccessResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDisinviteEarlyAccessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDisinviteEarlyAccessResponse.Merge(m, src)
}
func (m *MsgDisinviteEarlyAccessResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDisinviteEarlyAccessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDisinviteEarlyAccessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDisinviteEarlyAccessResponse proto.InternalMessageInfo

type MsgConnectZealyAccount struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ZealyId string `protobuf:"bytes,2,opt,name=zealyId,proto3" json:"zealyId,omitempty"`
}

func (m *MsgConnectZealyAccount) Reset()         { *m = MsgConnectZealyAccount{} }
func (m *MsgConnectZealyAccount) String() string { return proto.CompactTextString(m) }
func (*MsgConnectZealyAccount) ProtoMessage()    {}
func (*MsgConnectZealyAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{86}
}
func (m *MsgConnectZealyAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgConnectZealyAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgConnectZealyAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgConnectZealyAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgConnectZealyAccount.Merge(m, src)
}
func (m *MsgConnectZealyAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgConnectZealyAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgConnectZealyAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgConnectZealyAccount proto.InternalMessageInfo

func (m *MsgConnectZealyAccount) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgConnectZealyAccount) GetZealyId() string {
	if m != nil {
		return m.ZealyId
	}
	return ""
}

type MsgConnectZealyAccountResponse struct {
}

func (m *MsgConnectZealyAccountResponse) Reset()         { *m = MsgConnectZealyAccountResponse{} }
func (m *MsgConnectZealyAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgConnectZealyAccountResponse) ProtoMessage()    {}
func (*MsgConnectZealyAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{87}
}
func (m *MsgConnectZealyAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgConnectZealyAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgConnectZealyAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgConnectZealyAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgConnectZealyAccountResponse.Merge(m, src)
}
func (m *MsgConnectZealyAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgConnectZealyAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgConnectZealyAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgConnectZealyAccountResponse proto.InternalMessageInfo

type MsgEncounterCreate struct {
	Creator    string            `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Drawlist   []uint64          `protobuf:"varint,2,rep,packed,name=Drawlist,proto3" json:"Drawlist,omitempty"`
	Parameters map[string]string `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *MsgEncounterCreate) Reset()         { *m = MsgEncounterCreate{} }
func (m *MsgEncounterCreate) String() string { return proto.CompactTextString(m) }
func (*MsgEncounterCreate) ProtoMessage()    {}
func (*MsgEncounterCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{88}
}
func (m *MsgEncounterCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEncounterCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEncounterCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEncounterCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEncounterCreate.Merge(m, src)
}
func (m *MsgEncounterCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgEncounterCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEncounterCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEncounterCreate proto.InternalMessageInfo

func (m *MsgEncounterCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgEncounterCreate) GetDrawlist() []uint64 {
	if m != nil {
		return m.Drawlist
	}
	return nil
}

func (m *MsgEncounterCreate) GetParameters() map[string]string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type MsgEncounterCreateResponse struct {
}

func (m *MsgEncounterCreateResponse) Reset()         { *m = MsgEncounterCreateResponse{} }
func (m *MsgEncounterCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEncounterCreateResponse) ProtoMessage()    {}
func (*MsgEncounterCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{89}
}
func (m *MsgEncounterCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEncounterCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEncounterCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEncounterCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEncounterCreateResponse.Merge(m, src)
}
func (m *MsgEncounterCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEncounterCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEncounterCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEncounterCreateResponse proto.InternalMessageInfo

type MsgEncounterDo struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EncounterId uint64 `protobuf:"varint,2,opt,name=encounterId,proto3" json:"encounterId,omitempty"`
}

func (m *MsgEncounterDo) Reset()         { *m = MsgEncounterDo{} }
func (m *MsgEncounterDo) String() string { return proto.CompactTextString(m) }
func (*MsgEncounterDo) ProtoMessage()    {}
func (*MsgEncounterDo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{90}
}
func (m *MsgEncounterDo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEncounterDo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEncounterDo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEncounterDo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEncounterDo.Merge(m, src)
}
func (m *MsgEncounterDo) XXX_Size() int {
	return m.Size()
}
func (m *MsgEncounterDo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEncounterDo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEncounterDo proto.InternalMessageInfo

func (m *MsgEncounterDo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgEncounterDo) GetEncounterId() uint64 {
	if m != nil {
		return m.EncounterId
	}
	return 0
}

type MsgEncounterDoResponse struct {
}

func (m *MsgEncounterDoResponse) Reset()         { *m = MsgEncounterDoResponse{} }
func (m *MsgEncounterDoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEncounterDoResponse) ProtoMessage()    {}
func (*MsgEncounterDoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{91}
}
func (m *MsgEncounterDoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEncounterDoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEncounterDoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEncounterDoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEncounterDoResponse.Merge(m, src)
}
func (m *MsgEncounterDoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEncounterDoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEncounterDoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEncounterDoResponse proto.InternalMessageInfo

type MsgEncounterClose struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EncounterId uint64 `protobuf:"varint,2,opt,name=encounterId,proto3" json:"encounterId,omitempty"`
}

func (m *MsgEncounterClose) Reset()         { *m = MsgEncounterClose{} }
func (m *MsgEncounterClose) String() string { return proto.CompactTextString(m) }
func (*MsgEncounterClose) ProtoMessage()    {}
func (*MsgEncounterClose) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{92}
}
func (m *MsgEncounterClose) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEncounterClose) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEncounterClose.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEncounterClose) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEncounterClose.Merge(m, src)
}
func (m *MsgEncounterClose) XXX_Size() int {
	return m.Size()
}
func (m *MsgEncounterClose) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEncounterClose.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEncounterClose proto.InternalMessageInfo

func (m *MsgEncounterClose) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgEncounterClose) GetEncounterId() uint64 {
	if m != nil {
		return m.EncounterId
	}
	return 0
}

type MsgEncounterCloseResponse struct {
}

func (m *MsgEncounterCloseResponse) Reset()         { *m = MsgEncounterCloseResponse{} }
func (m *MsgEncounterCloseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEncounterCloseResponse) ProtoMessage()    {}
func (*MsgEncounterCloseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{93}
}
func (m *MsgEncounterCloseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEncounterCloseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEncounterCloseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEncounterCloseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEncounterCloseResponse.Merge(m, src)
}
func (m *MsgEncounterCloseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEncounterCloseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEncounterCloseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEncounterCloseResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateuser)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateuser")
	proto.RegisterType((*MsgCreateuserResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateuserResponse")
	proto.RegisterType((*MsgBuyCardScheme)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCardScheme")
	proto.RegisterType((*MsgBuyCardSchemeResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCardSchemeResponse")
	proto.RegisterType((*MsgVoteCard)(nil), "DecentralCardGame.cardchain.cardchain.MsgVoteCard")
	proto.RegisterType((*MsgVoteCardResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgVoteCardResponse")
	proto.RegisterType((*MsgSaveCardContent)(nil), "DecentralCardGame.cardchain.cardchain.MsgSaveCardContent")
	proto.RegisterType((*MsgSaveCardContentResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSaveCardContentResponse")
	proto.RegisterType((*MsgTransferCard)(nil), "DecentralCardGame.cardchain.cardchain.MsgTransferCard")
	proto.RegisterType((*MsgTransferCardResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgTransferCardResponse")
	proto.RegisterType((*MsgDonateToCard)(nil), "DecentralCardGame.cardchain.cardchain.MsgDonateToCard")
	proto.RegisterType((*MsgDonateToCardResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgDonateToCardResponse")
	proto.RegisterType((*MsgAddArtwork)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddArtwork")
	proto.RegisterType((*MsgAddArtworkResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddArtworkResponse")
	proto.RegisterType((*MsgChangeArtist)(nil), "DecentralCardGame.cardchain.cardchain.MsgChangeArtist")
	proto.RegisterType((*MsgChangeArtistResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgChangeArtistResponse")
	proto.RegisterType((*MsgRegisterForCouncil)(nil), "DecentralCardGame.cardchain.cardchain.MsgRegisterForCouncil")
	proto.RegisterType((*MsgRegisterForCouncilResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRegisterForCouncilResponse")
	proto.RegisterType((*MsgReportMatch)(nil), "DecentralCardGame.cardchain.cardchain.MsgReportMatch")
	proto.RegisterType((*MsgReportMatchResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgReportMatchResponse")
	proto.RegisterType((*MsgApointMatchReporter)(nil), "DecentralCardGame.cardchain.cardchain.MsgApointMatchReporter")
	proto.RegisterType((*MsgApointMatchReporterResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgApointMatchReporterResponse")
	proto.RegisterType((*MsgCreateSet)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateSet")
	proto.RegisterType((*MsgCreateSetResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateSetResponse")
	proto.RegisterType((*MsgAddCardToSet)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddCardToSet")
	proto.RegisterType((*MsgAddCardToSetResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddCardToSetResponse")
	proto.RegisterType((*MsgFinalizeSet)(nil), "DecentralCardGame.cardchain.cardchain.MsgFinalizeSet")
	proto.RegisterType((*MsgFinalizeSetResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgFinalizeSetResponse")
	proto.RegisterType((*MsgBuyBoosterPack)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyBoosterPack")
	proto.RegisterType((*MsgBuyBoosterPackResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyBoosterPackResponse")
	proto.RegisterType((*MsgRemoveCardFromSet)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveCardFromSet")
	proto.RegisterType((*MsgRemoveCardFromSetResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveCardFromSetResponse")
	proto.RegisterType((*MsgRemoveContributorFromSet)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveContributorFromSet")
	proto.RegisterType((*MsgRemoveContributorFromSetResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveContributorFromSetResponse")
	proto.RegisterType((*MsgAddContributorToSet)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddContributorToSet")
	proto.RegisterType((*MsgAddContributorToSetResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddContributorToSetResponse")
	proto.RegisterType((*MsgCreateSellOffer)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateSellOffer")
	proto.RegisterType((*MsgCreateSellOfferResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateSellOfferResponse")
	proto.RegisterType((*MsgBuyCard)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCard")
	proto.RegisterType((*MsgBuyCardResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgBuyCardResponse")
	proto.RegisterType((*MsgRemoveSellOffer)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveSellOffer")
	proto.RegisterType((*MsgRemoveSellOfferResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRemoveSellOfferResponse")
	proto.RegisterType((*MsgAddArtworkToSet)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddArtworkToSet")
	proto.RegisterType((*MsgAddArtworkToSetResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddArtworkToSetResponse")
	proto.RegisterType((*MsgAddStoryToSet)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddStoryToSet")
	proto.RegisterType((*MsgAddStoryToSetResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgAddStoryToSetResponse")
	proto.RegisterType((*MsgSetCardRarity)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetCardRarity")
	proto.RegisterType((*MsgSetCardRarityResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetCardRarityResponse")
	proto.RegisterType((*MsgCreateCouncil)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateCouncil")
	proto.RegisterType((*MsgCreateCouncilResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgCreateCouncilResponse")
	proto.RegisterType((*MsgCommitCouncilResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgCommitCouncilResponse")
	proto.RegisterType((*MsgCommitCouncilResponseResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgCommitCouncilResponseResponse")
	proto.RegisterType((*MsgRevealCouncilResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRevealCouncilResponse")
	proto.RegisterType((*MsgRevealCouncilResponseResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRevealCouncilResponseResponse")
	proto.RegisterType((*MsgRestartCouncil)(nil), "DecentralCardGame.cardchain.cardchain.MsgRestartCouncil")
	proto.RegisterType((*MsgRestartCouncilResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRestartCouncilResponse")
	proto.RegisterType((*MsgRewokeCouncilRegistration)(nil), "DecentralCardGame.cardchain.cardchain.MsgRewokeCouncilRegistration")
	proto.RegisterType((*MsgRewokeCouncilRegistrationResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgRewokeCouncilRegistrationResponse")
	proto.RegisterType((*MsgConfirmMatch)(nil), "DecentralCardGame.cardchain.cardchain.MsgConfirmMatch")
	proto.RegisterType((*MsgConfirmMatchResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgConfirmMatchResponse")
	proto.RegisterType((*MsgSetProfileCard)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetProfileCard")
	proto.RegisterType((*MsgSetProfileCardResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetProfileCardResponse")
	proto.RegisterType((*MsgOpenBoosterPack)(nil), "DecentralCardGame.cardchain.cardchain.MsgOpenBoosterPack")
	proto.RegisterType((*MsgOpenBoosterPackResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgOpenBoosterPackResponse")
	proto.RegisterType((*MsgTransferBoosterPack)(nil), "DecentralCardGame.cardchain.cardchain.MsgTransferBoosterPack")
	proto.RegisterType((*MsgTransferBoosterPackResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgTransferBoosterPackResponse")
	proto.RegisterType((*MsgSetSetStoryWriter)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetSetStoryWriter")
	proto.RegisterType((*MsgSetSetStoryWriterResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetSetStoryWriterResponse")
	proto.RegisterType((*MsgSetSetArtist)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetSetArtist")
	proto.RegisterType((*MsgSetSetArtistResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetSetArtistResponse")
	proto.RegisterType((*MsgSetUserWebsite)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetUserWebsite")
	proto.RegisterType((*MsgSetUserWebsiteResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetUserWebsiteResponse")
	proto.RegisterType((*MsgSetUserBiography)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetUserBiography")
	proto.RegisterType((*MsgSetUserBiographyResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetUserBiographyResponse")
	proto.RegisterType((*MsgMultiVoteCard)(nil), "DecentralCardGame.cardchain.cardchain.MsgMultiVoteCard")
	proto.RegisterType((*MsgMultiVoteCardResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgMultiVoteCardResponse")
	proto.RegisterType((*MsgOpenMatch)(nil), "DecentralCardGame.cardchain.cardchain.MsgOpenMatch")
	proto.RegisterType((*MsgOpenMatchResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgOpenMatchResponse")
	proto.RegisterType((*MsgSetSetName)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetSetName")
	proto.RegisterType((*MsgSetSetNameResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgSetSetNameResponse")
	proto.RegisterType((*MsgChangeAlias)(nil), "DecentralCardGame.cardchain.cardchain.MsgChangeAlias")
	proto.RegisterType((*MsgChangeAliasResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgChangeAliasResponse")
	proto.RegisterType((*MsgInviteEarlyAccess)(nil), "DecentralCardGame.cardchain.cardchain.MsgInviteEarlyAccess")
	proto.RegisterType((*MsgInviteEarlyAccessResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgInviteEarlyAccessResponse")
	proto.RegisterType((*MsgDisinviteEarlyAccess)(nil), "DecentralCardGame.cardchain.cardchain.MsgDisinviteEarlyAccess")
	proto.RegisterType((*MsgDisinviteEarlyAccessResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgDisinviteEarlyAccessResponse")
	proto.RegisterType((*MsgConnectZealyAccount)(nil), "DecentralCardGame.cardchain.cardchain.MsgConnectZealyAccount")
	proto.RegisterType((*MsgConnectZealyAccountResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgConnectZealyAccountResponse")
	proto.RegisterType((*MsgEncounterCreate)(nil), "DecentralCardGame.cardchain.cardchain.MsgEncounterCreate")
	proto.RegisterMapType((map[string]string)(nil), "DecentralCardGame.cardchain.cardchain.MsgEncounterCreate.ParametersEntry")
	proto.RegisterType((*MsgEncounterCreateResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgEncounterCreateResponse")
	proto.RegisterType((*MsgEncounterDo)(nil), "DecentralCardGame.cardchain.cardchain.MsgEncounterDo")
	proto.RegisterType((*MsgEncounterDoResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgEncounterDoResponse")
	proto.RegisterType((*MsgEncounterClose)(nil), "DecentralCardGame.cardchain.cardchain.MsgEncounterClose")
	proto.RegisterType((*MsgEncounterCloseResponse)(nil), "DecentralCardGame.cardchain.cardchain.MsgEncounterCloseResponse")
}

func init() { proto.RegisterFile("cardchain/cardchain/tx.proto", fileDescriptor_3b4a3aba0ac94bc8) }

var fileDescriptor_3b4a3aba0ac94bc8 = []byte{
	// 2706 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x5b, 0xcf, 0x6f, 0x1c, 0xb7,
	0xf5, 0xd7, 0x68, 0x25, 0x59, 0xa2, 0x1c, 0xd9, 0x99, 0x28, 0xce, 0x7a, 0xe2, 0x48, 0xca, 0x7c,
	0x93, 0x7c, 0x7d, 0xe9, 0xaa, 0x96, 0x7f, 0x49, 0x76, 0x55, 0x67, 0x7f, 0xc8, 0x8e, 0xeb, 0x2a,
	0x76, 0x57, 0x4e, 0xd2, 0xb8, 0x41, 0x8b, 0xd1, 0x2c, 0xb5, 0x1a, 0x68, 0x77, 0xb8, 0xe5, 0xcc,
	0x4a, 0x59, 0x03, 0x05, 0x0a, 0x14, 0x28, 0x1a, 0xc0, 0x68, 0x8b, 0xa2, 0x05, 0x8a, 0x16, 0x28,
	0xdc, 0x43, 0x2f, 0x01, 0x7a, 0x2b, 0xd0, 0x7f, 0x21, 0xc7, 0x9c, 0x8a, 0xa2, 0x87, 0xb4, 0xb0,
	0x2f, 0xfd, 0x03, 0x7a, 0xe8, 0xb1, 0x98, 0x47, 0x0e, 0x87, 0x9c, 0x9d, 0x1d, 0x2d, 0x47, 0x06,
	0x02, 0x64, 0xc9, 0xe1, 0xe7, 0xbd, 0x47, 0xf2, 0x91, 0xef, 0x3d, 0x7e, 0x2c, 0x74, 0xc1, 0x75,
	0x68, 0xcb, 0xdd, 0x77, 0x3c, 0x7f, 0x35, 0xf9, 0x15, 0x7e, 0x5a, 0xe9, 0x51, 0x12, 0x12, 0xf3,
	0xed, 0x06, 0x76, 0xb1, 0x1f, 0x52, 0xa7, 0x53, 0x77, 0x68, 0xeb, 0x8e, 0xd3, 0xc5, 0x15, 0x31,
	0x2a, 0xf9, 0x65, 0x2d, 0xb6, 0x49, 0x9b, 0x00, 0x62, 0x35, 0xfa, 0xc5, 0xc0, 0xd6, 0x9b, 0x59,
	0xa2, 0x5d, 0xd2, 0xf7, 0x5d, 0xaf, 0xc3, 0x87, 0x2c, 0x67, 0x0d, 0xe9, 0x3a, 0xa1, 0xbb, 0xcf,
	0x07, 0xac, 0x64, 0x0d, 0x38, 0x24, 0xa1, 0xe7, 0xb7, 0xf9, 0x88, 0xa5, 0x4c, 0x2d, 0x0e, 0x6d,
	0x89, 0xef, 0x24, 0xe8, 0x92, 0x60, 0x75, 0xd7, 0x09, 0xf0, 0xea, 0xe1, 0xa5, 0x5d, 0x1c, 0x3a,
	0x97, 0x56, 0x5d, 0xe2, 0xf9, 0xec, 0xbb, 0xfd, 0x31, 0x7a, 0x69, 0x3b, 0x68, 0xd7, 0x29, 0x76,
	0x42, 0xdc, 0x0f, 0x30, 0x35, 0xcb, 0xe8, 0x94, 0x1b, 0xb5, 0x08, 0x2d, 0x1b, 0x2b, 0xc6, 0xc5,
	0xb9, 0x66, 0xdc, 0x8c, 0xbe, 0xf8, 0xf8, 0xe8, 0x83, 0x00, 0xd3, 0xf2, 0x24, 0xfb, 0xc2, 0x9b,
	0xe6, 0x22, 0x9a, 0x76, 0x3a, 0x9e, 0x13, 0x94, 0x4b, 0xd0, 0xcf, 0x1a, 0xf6, 0x6b, 0xe8, 0x55,
	0x45, 0x74, 0x13, 0x07, 0x3d, 0xe2, 0x07, 0xd8, 0xfe, 0xb5, 0x81, 0xce, 0x6e, 0x07, 0xed, 0x5a,
	0x7f, 0x10, 0x2d, 0xeb, 0x8e, 0xbb, 0x8f, 0xbb, 0x38, 0x47, 0xef, 0x27, 0xa8, 0xb4, 0xeb, 0xb5,
	0x40, 0xe7, 0xfc, 0xda, 0xf9, 0x0a, 0x9b, 0x50, 0x25, 0x9a, 0x50, 0x85, 0x4f, 0xa8, 0x52, 0x27,
	0x9e, 0x5f, 0x5b, 0xfd, 0xe2, 0xab, 0xe5, 0x89, 0xcf, 0xff, 0xb9, 0xfc, 0xff, 0x6d, 0x2f, 0xdc,
	0xef, 0xef, 0x56, 0x5c, 0xd2, 0x5d, 0xe5, 0xb3, 0x67, 0xff, 0xfb, 0x5a, 0xd0, 0x3a, 0x58, 0x0d,
	0x07, 0x3d, 0x1c, 0x00, 0xa0, 0x19, 0x89, 0xbd, 0x31, 0xfb, 0xb3, 0xa7, 0xcb, 0x13, 0xff, 0x7e,
	0xba, 0x3c, 0x61, 0xaf, 0xa1, 0x72, 0xda, 0xaa, 0xd8, 0x64, 0xf3, 0x1c, 0x9a, 0x89, 0x16, 0xf5,
	0x6e, 0x0b, 0x8c, 0x9b, 0x6a, 0xf2, 0x96, 0xfd, 0xc4, 0x40, 0xf3, 0xdb, 0x41, 0xfb, 0x43, 0x12,
	0xe2, 0x08, 0x95, 0x33, 0x8b, 0x44, 0xc2, 0xa4, 0x2c, 0xc1, 0xbc, 0x87, 0x66, 0x0f, 0x49, 0x88,
	0x1f, 0x0e, 0x7a, 0x18, 0x96, 0x6f, 0x61, 0x6d, 0xb5, 0x32, 0x96, 0xdb, 0x55, 0x3e, 0xe4, 0xb0,
	0xa6, 0x10, 0x60, 0x6f, 0xa2, 0x57, 0x24, 0x6b, 0x84, 0xf5, 0xef, 0xa0, 0x05, 0xc7, 0xa3, 0x2d,
	0x4a, 0x7a, 0xf5, 0x8e, 0xe3, 0x75, 0x31, 0x9b, 0xc5, 0x6c, 0x33, 0xd5, 0x6b, 0xff, 0xc5, 0x40,
	0xe6, 0x76, 0xd0, 0xde, 0x71, 0x0e, 0x01, 0x5f, 0x27, 0x7e, 0x88, 0xfd, 0xb0, 0xc0, 0xa4, 0x22,
	0x04, 0x03, 0xc3, 0x9c, 0x4e, 0x37, 0xe3, 0x66, 0xe4, 0x2a, 0x3e, 0x09, 0x71, 0x50, 0x9e, 0x62,
	0xae, 0x02, 0x8d, 0x48, 0x8e, 0x43, 0x43, 0x2f, 0x08, 0xcb, 0xd3, 0xd0, 0xcd, 0x5b, 0xe6, 0x5b,
	0xe8, 0xa5, 0x5d, 0xa7, 0xe3, 0xf8, 0x2e, 0xae, 0xfa, 0xee, 0x3e, 0xa1, 0xe5, 0x19, 0xb0, 0x5b,
	0xed, 0xb4, 0x1b, 0xc8, 0x1a, 0xb6, 0x5a, 0x7b, 0xf2, 0x3f, 0x40, 0x67, 0xb6, 0x83, 0xf6, 0x43,
	0xea, 0xf8, 0xc1, 0x1e, 0xa6, 0x05, 0x77, 0xd3, 0x42, 0xb3, 0x14, 0xbb, 0xd8, 0x3b, 0xc4, 0x94,
	0xcf, 0x50, 0xb4, 0xed, 0xf3, 0xe8, 0xb5, 0x94, 0x02, 0x71, 0x22, 0x9e, 0x18, 0xa0, 0xbc, 0x41,
	0x7c, 0x27, 0xc4, 0x0f, 0x49, 0x41, 0xe5, 0x77, 0xd0, 0x8c, 0xd3, 0x25, 0x7d, 0xbe, 0xe8, 0x73,
	0xec, 0x40, 0xfc, 0xe3, 0xab, 0xf1, 0x0f, 0x04, 0x87, 0x73, 0x4b, 0x65, 0x6b, 0x84, 0xa5, 0x3f,
	0x84, 0xfb, 0xa2, 0xda, 0x6a, 0x55, 0x69, 0x78, 0x44, 0xe8, 0x41, 0x01, 0x33, 0x17, 0xd1, 0xb4,
	0xd7, 0x75, 0xda, 0x98, 0xbb, 0x06, 0x6b, 0x44, 0x72, 0xf6, 0xfa, 0x9d, 0x4e, 0x95, 0x86, 0xb0,
	0x70, 0xb3, 0xcd, 0xb8, 0xc9, 0xef, 0x91, 0x44, 0xa5, 0xb0, 0xe5, 0x7b, 0xb0, 0x68, 0xf5, 0x7d,
	0xc7, 0x6f, 0xe3, 0x2a, 0x73, 0x98, 0xe3, 0xad, 0x69, 0x28, 0xd6, 0x34, 0x24, 0xd7, 0x2b, 0xc9,
	0xae, 0xc7, 0xd7, 0x40, 0x16, 0x2e, 0xf4, 0x5e, 0x02, 0x83, 0x9a, 0xb8, 0xed, 0x05, 0x21, 0xa6,
	0xb7, 0x09, 0xad, 0xb3, 0x5b, 0x7d, 0xb4, 0x76, 0x7b, 0x19, 0xbd, 0x91, 0x09, 0x11, 0x32, 0xff,
	0x66, 0xa0, 0x05, 0x18, 0xd1, 0x23, 0x34, 0xdc, 0x8e, 0x42, 0x40, 0xfe, 0x4d, 0x0c, 0x51, 0x42,
	0x2c, 0x6d, 0xdc, 0x34, 0x6d, 0x74, 0xba, 0xd7, 0x71, 0x06, 0xb8, 0x15, 0x6d, 0x5a, 0x50, 0x2d,
	0x97, 0x56, 0x4a, 0x17, 0xa7, 0x9a, 0x4a, 0x5f, 0x6a, 0x4c, 0xad, 0x3c, 0x35, 0x34, 0xa6, 0x66,
	0xbe, 0x87, 0x4e, 0x91, 0x7e, 0xe8, 0x92, 0x2e, 0x86, 0x13, 0xb9, 0xb0, 0x56, 0x19, 0xf3, 0x52,
	0xba, 0xcf, 0x50, 0xcd, 0x18, 0x6e, 0xaf, 0xa1, 0x73, 0xea, 0xbc, 0xc4, 0xc1, 0x94, 0x66, 0x61,
	0x28, 0xb3, 0xb0, 0xdf, 0x07, 0x4c, 0xb5, 0x47, 0x3c, 0x3f, 0xc6, 0x44, 0xf0, 0xdc, 0xe8, 0x04,
	0x27, 0x8f, 0x8d, 0xe2, 0xe1, 0x49, 0xb4, 0xed, 0x15, 0xb4, 0x94, 0x2d, 0x4f, 0x2c, 0xff, 0xef,
	0x0c, 0x74, 0x5a, 0x04, 0xab, 0x1d, 0x9c, 0xe7, 0x48, 0x26, 0x9a, 0xf2, 0x9d, 0x2e, 0xe6, 0x4a,
	0xe0, 0xf7, 0x28, 0x27, 0x32, 0x57, 0xd0, 0x7c, 0x10, 0x12, 0x3a, 0xf8, 0x88, 0x7a, 0xa1, 0xb8,
	0x11, 0xe4, 0xae, 0x68, 0x33, 0xa2, 0xab, 0x91, 0x7a, 0xbb, 0xfd, 0x90, 0xd0, 0xa0, 0x3c, 0xbd,
	0x52, 0xba, 0x38, 0xd7, 0x54, 0xfa, 0xec, 0x73, 0x68, 0x51, 0xb6, 0x4d, 0x18, 0xfd, 0x31, 0xf8,
	0x7f, 0xb5, 0x05, 0x9b, 0xf6, 0x90, 0xe4, 0x9b, 0xbd, 0x88, 0xa6, 0x03, 0x1c, 0x0a, 0x8f, 0x61,
	0x0d, 0xe9, 0x8c, 0x96, 0x94, 0xb8, 0xc6, 0xbc, 0x5f, 0x16, 0x2d, 0xb4, 0xbe, 0x0b, 0x8e, 0x7a,
	0xdb, 0xf3, 0x9d, 0x8e, 0xf7, 0x18, 0x17, 0x50, 0x6a, 0x97, 0x61, 0x7b, 0x25, 0x09, 0x42, 0x76,
	0x1d, 0xbd, 0xcc, 0x42, 0x70, 0x8d, 0x90, 0xe8, 0xa0, 0x3c, 0x70, 0xdc, 0x03, 0x6d, 0xf1, 0x75,
	0x74, 0x7e, 0x48, 0x88, 0x76, 0x34, 0xf8, 0x3e, 0xac, 0x79, 0x13, 0x77, 0x09, 0x8b, 0x2a, 0xb7,
	0x29, 0xe9, 0xbe, 0xc8, 0x05, 0x5e, 0x42, 0x17, 0xb2, 0xe4, 0x8b, 0x95, 0x70, 0xd0, 0xeb, 0xc9,
	0xf7, 0xc4, 0x19, 0x8a, 0x9a, 0x61, 0xa2, 0xa9, 0x28, 0x05, 0xe3, 0xee, 0x09, 0xbf, 0xed, 0xb7,
	0xd1, 0xff, 0xe5, 0xa8, 0x10, 0x96, 0x7c, 0xc2, 0x0e, 0x63, 0xab, 0x25, 0x8d, 0x29, 0xe6, 0x6c,
	0x59, 0x46, 0xf0, 0xa3, 0x39, 0x2c, 0x5d, 0xe8, 0xff, 0x8c, 0x25, 0x25, 0xb1, 0xfb, 0x77, 0x3a,
	0xf7, 0xf7, 0xf6, 0x72, 0x6f, 0x02, 0x13, 0x4d, 0x45, 0x8b, 0xcc, 0x75, 0xc3, 0x6f, 0x73, 0x0b,
	0x4d, 0xf7, 0xa8, 0xe7, 0xe2, 0xa2, 0x91, 0x91, 0xa1, 0xed, 0x0b, 0x90, 0x69, 0xa4, 0x4c, 0x11,
	0x96, 0xbe, 0x87, 0x50, 0x92, 0x40, 0xe6, 0x18, 0x18, 0xdd, 0x0a, 0x31, 0x58, 0xac, 0x91, 0xdc,
	0x65, 0x2f, 0xc2, 0x94, 0xb9, 0x24, 0x21, 0xff, 0x01, 0xf4, 0xb2, 0x0d, 0x1b, 0x67, 0x21, 0x8e,
	0xd7, 0xc3, 0xe6, 0x93, 0x92, 0x28, 0xf4, 0x3d, 0x02, 0x7d, 0x49, 0xe0, 0x2d, 0xb6, 0xeb, 0x99,
	0xe1, 0x9e, 0x6b, 0x4e, 0xc9, 0x16, 0x9a, 0xbf, 0x0b, 0x05, 0x42, 0xb5, 0xd5, 0xda, 0x89, 0xae,
	0xca, 0xc2, 0x7a, 0xe1, 0xa2, 0x8d, 0x8b, 0x12, 0x68, 0xd8, 0x16, 0x24, 0xf9, 0x8a, 0x64, 0xa1,
	0xf5, 0x4f, 0xac, 0x2e, 0xd9, 0xc1, 0x21, 0x2c, 0xbb, 0x43, 0xbd, 0x70, 0x50, 0x2c, 0xbf, 0x61,
	0xe6, 0x94, 0x64, 0x73, 0xee, 0xa2, 0x19, 0x0a, 0x12, 0x21, 0x0a, 0x2c, 0xac, 0x5d, 0x1a, 0x33,
	0xa0, 0x26, 0xa6, 0x34, 0xb9, 0x00, 0x3e, 0x07, 0xc5, 0x4c, 0x31, 0x87, 0x06, 0x4c, 0x81, 0x79,
	0xe8, 0xb1, 0x69, 0xc9, 0xa8, 0x29, 0x70, 0x0d, 0x8a, 0x14, 0xa1, 0xe1, 0xe7, 0x06, 0xfb, 0x48,
	0xba, 0x5d, 0x2f, 0x4c, 0x7d, 0x3c, 0x2e, 0x3e, 0xb3, 0x51, 0x49, 0x7c, 0xe6, 0xa8, 0x0b, 0x68,
	0x8e, 0x17, 0xc6, 0x62, 0xd5, 0x92, 0x0e, 0x73, 0x09, 0xa1, 0xa0, 0xdf, 0x6e, 0xe3, 0x20, 0xf4,
	0x88, 0xcf, 0x63, 0xa8, 0xd4, 0x63, 0xdb, 0x68, 0x65, 0x94, 0x3d, 0xc2, 0xe8, 0xbf, 0x32, 0xa3,
	0x9b, 0xf8, 0x10, 0x3b, 0x9d, 0xf1, 0x8d, 0xbe, 0x97, 0x32, 0x7a, 0xfc, 0xe2, 0x4c, 0x58, 0x90,
	0xcc, 0xf2, 0x1c, 0x9a, 0x09, 0xb0, 0x4b, 0xb1, 0x48, 0x12, 0x58, 0x4b, 0x9d, 0xfd, 0x54, 0x6a,
	0xf6, 0x7c, 0x76, 0x99, 0x86, 0x8b, 0xd9, 0xdd, 0x83, 0xb0, 0xd9, 0xc4, 0x41, 0xe8, 0xd0, 0xf0,
	0xf8, 0x5d, 0x57, 0x14, 0x4e, 0xa6, 0x15, 0xbe, 0x0e, 0xe1, 0x53, 0x15, 0x26, 0x34, 0xad, 0xf3,
	0xb0, 0x75, 0x44, 0x0e, 0x12, 0xc7, 0x88, 0x92, 0x5a, 0xea, 0x44, 0x7b, 0x91, 0x93, 0x01, 0xbf,
	0x83, 0xde, 0xca, 0x43, 0x0a, 0x0d, 0xcf, 0x58, 0x29, 0x54, 0x27, 0xfe, 0x9e, 0x47, 0xbb, 0xc5,
	0x33, 0x61, 0x29, 0x83, 0x2d, 0x9d, 0x28, 0x83, 0x35, 0xbf, 0x83, 0x50, 0x54, 0x60, 0xb3, 0xd4,
	0x18, 0xb2, 0xe5, 0xf9, 0xb1, 0x4f, 0xef, 0x8e, 0xe7, 0xb7, 0x3b, 0x38, 0x2a, 0xc8, 0x9b, 0x92,
	0x90, 0xb8, 0xb8, 0x90, 0xe6, 0x28, 0xe6, 0xbf, 0x05, 0x7b, 0xb9, 0x83, 0xc3, 0x07, 0x94, 0xec,
	0x79, 0x9d, 0x82, 0xcf, 0x0a, 0x7c, 0x17, 0x55, 0x31, 0x42, 0xc7, 0x43, 0xb8, 0xd8, 0xef, 0xf7,
	0xb0, 0x3f, 0x5e, 0x9e, 0x15, 0x95, 0xe1, 0xc9, 0x40, 0xa1, 0x4b, 0xed, 0xb4, 0xaf, 0xc1, 0x95,
	0x9e, 0x92, 0xaa, 0x1c, 0x32, 0x30, 0x2d, 0x28, 0x1b, 0x50, 0x70, 0xc4, 0x4d, 0x3b, 0x84, 0x04,
	0x23, 0xae, 0x8b, 0x5f, 0xa0, 0x45, 0x4a, 0x35, 0x5e, 0x4a, 0x55, 0xe3, 0x2c, 0xf1, 0xc8, 0xd0,
	0x2a, 0x56, 0x69, 0x1f, 0x52, 0xc0, 0x1d, 0x1c, 0x46, 0xff, 0x49, 0x29, 0xbb, 0x6e, 0x20, 0x4a,
	0x15, 0x01, 0xa5, 0xa1, 0x22, 0x80, 0x27, 0x83, 0x43, 0x9a, 0x52, 0x89, 0x3e, 0xfb, 0x7e, 0x6c,
	0xa1, 0x3b, 0x32, 0x0f, 0xcd, 0x29, 0x73, 0x65, 0xd1, 0x42, 0xeb, 0x9d, 0xd8, 0x13, 0x3f, 0x08,
	0x30, 0xfd, 0x08, 0xef, 0x06, 0x5e, 0x88, 0xf3, 0x8f, 0xe2, 0x11, 0x1b, 0x14, 0x3f, 0x0f, 0xf2,
	0x66, 0xe2, 0x8b, 0x92, 0x20, 0xa1, 0x65, 0x1b, 0x9e, 0xac, 0xf8, 0xc7, 0x9a, 0x47, 0xda, 0xd4,
	0xe9, 0xed, 0x0f, 0xf2, 0x6f, 0xaf, 0xdd, 0x78, 0x18, 0xd7, 0x94, 0x74, 0xd8, 0x6f, 0x40, 0xde,
	0x9c, 0x16, 0x27, 0xb4, 0xf5, 0x21, 0x3c, 0x6e, 0xf7, 0x3b, 0xa1, 0x37, 0xc6, 0x9b, 0xdd, 0x1d,
	0x34, 0x7d, 0x08, 0x8f, 0x55, 0x93, 0x45, 0x0f, 0x3d, 0xc3, 0xf3, 0x78, 0xaa, 0xa8, 0x15, 0x26,
	0x3d, 0x65, 0xa5, 0x67, 0x74, 0x6e, 0xc6, 0xb8, 0xed, 0xa0, 0x4a, 0xa7, 0xd5, 0x78, 0x89, 0x79,
	0x33, 0xf9, 0x52, 0xe3, 0xfb, 0x1b, 0x37, 0x23, 0xef, 0xe3, 0x83, 0x1a, 0xd8, 0x3d, 0xe0, 0xc5,
	0xbe, 0xdc, 0x95, 0x8c, 0xa8, 0xc1, 0x88, 0x69, 0x79, 0x04, 0x74, 0xd9, 0x5f, 0x87, 0x93, 0x20,
	0x2c, 0x1c, 0xa3, 0x82, 0xdf, 0x81, 0x67, 0x22, 0xe6, 0x56, 0xef, 0x3b, 0xb9, 0xcf, 0xbb, 0x23,
	0x6b, 0x05, 0xa8, 0xb2, 0x4b, 0x49, 0x95, 0xcd, 0x1f, 0x82, 0x12, 0xa1, 0xa9, 0x92, 0x94, 0xbf,
	0xd5, 0x74, 0x3c, 0x27, 0xc8, 0x57, 0xc7, 0xde, 0xaa, 0x27, 0xe5, 0xb7, 0x6a, 0x56, 0x92, 0x4a,
	0x12, 0xa4, 0x84, 0x2a, 0x9a, 0xfb, 0x5d, 0xff, 0xd0, 0x0b, 0xf1, 0x96, 0x43, 0x3b, 0x83, 0xaa,
	0xeb, 0xe2, 0x20, 0xc8, 0xaf, 0x3f, 0xfa, 0xc9, 0x23, 0x39, 0x2b, 0x73, 0xd8, 0x09, 0x1f, 0x92,
	0x22, 0x9d, 0x35, 0x78, 0x71, 0xf3, 0x02, 0xef, 0x84, 0x8a, 0xde, 0x44, 0xcb, 0x23, 0x04, 0x09,
	0x5d, 0xdf, 0x66, 0x73, 0x25, 0xbe, 0x8f, 0xdd, 0xf0, 0x11, 0x76, 0x60, 0x00, 0xe9, 0xe7, 0x3e,
	0xf4, 0x96, 0xd1, 0xa9, 0xc7, 0xd1, 0x48, 0xbe, 0x4d, 0x73, 0xcd, 0xb8, 0xc9, 0xef, 0xd1, 0x0c,
	0x69, 0x42, 0xdf, 0x7f, 0x58, 0x01, 0xb7, 0xe5, 0x43, 0x37, 0xa6, 0x2c, 0xad, 0xcc, 0x4f, 0x15,
	0x1b, 0xd4, 0x39, 0xea, 0x44, 0xb7, 0xd5, 0x24, 0x78, 0xa3, 0x68, 0x9b, 0x1e, 0x42, 0x3d, 0x87,
	0x3a, 0x5d, 0x1c, 0x62, 0x1a, 0xc0, 0xf3, 0xd6, 0xfc, 0xda, 0xdd, 0x31, 0xcf, 0xe5, 0xb0, 0x11,
	0x95, 0x07, 0x42, 0xd6, 0x96, 0x1f, 0xd2, 0x41, 0x53, 0x12, 0x6e, 0x6d, 0xa2, 0x33, 0xa9, 0xcf,
	0xe6, 0x59, 0x54, 0x3a, 0xc0, 0x03, 0x6e, 0x6f, 0xf4, 0x33, 0x72, 0xa7, 0x43, 0xa7, 0xd3, 0x8f,
	0xef, 0x3c, 0xd6, 0xb8, 0x31, 0xb9, 0x6e, 0xf0, 0x0a, 0x27, 0xa5, 0x50, 0xda, 0x84, 0x05, 0xf9,
	0x6b, 0x83, 0xe4, 0xd7, 0x71, 0x38, 0x1e, 0x98, 0xd4, 0x71, 0x52, 0x17, 0x77, 0x5f, 0x49, 0x9a,
	0xd0, 0x73, 0x1f, 0x2e, 0xf1, 0xc4, 0x8a, 0x0e, 0xc9, 0x4d, 0x78, 0x8f, 0x57, 0xc5, 0x2e, 0x73,
	0x55, 0x60, 0xac, 0x6d, 0xed, 0xbf, 0x57, 0x50, 0x69, 0x3b, 0x68, 0x9b, 0x3f, 0x36, 0x10, 0x92,
	0x38, 0xa5, 0x2b, 0xe3, 0x6f, 0x50, 0x82, 0xb2, 0xbe, 0x51, 0x04, 0x25, 0xee, 0xa6, 0xcf, 0x0c,
	0xf4, 0x92, 0xca, 0x30, 0x5d, 0x1f, 0x5f, 0x9e, 0x02, 0xb4, 0x6e, 0x15, 0x04, 0x0a, 0x5b, 0x1e,
	0xa3, 0x59, 0x11, 0x6d, 0xd6, 0xc6, 0x17, 0x16, 0x63, 0xac, 0x1b, 0xfa, 0x18, 0xa1, 0xfb, 0x17,
	0x06, 0x3a, 0x93, 0x26, 0x74, 0x36, 0xc6, 0x97, 0x97, 0x82, 0x5a, 0xd5, 0xc2, 0x50, 0x61, 0xd1,
	0x4f, 0x0d, 0x74, 0x5a, 0xa1, 0x59, 0xae, 0x8d, 0x2f, 0x53, 0xc6, 0x59, 0xdf, 0x2c, 0x86, 0x53,
	0x0c, 0x51, 0x28, 0x17, 0x0d, 0x43, 0x64, 0x9c, 0x8e, 0x21, 0x59, 0xa4, 0x0a, 0x1c, 0x17, 0x89,
	0x52, 0xd1, 0x38, 0x2e, 0x09, 0x4a, 0xe7, 0xb8, 0x0c, 0x73, 0x29, 0xb0, 0x16, 0x0a, 0x93, 0xa2,
	0xb1, 0x16, 0x32, 0x4e, 0x67, 0x2d, 0xb2, 0xc8, 0x15, 0xf3, 0xb7, 0x06, 0x32, 0x33, 0xa8, 0x15,
	0x8d, 0xd9, 0x0d, 0xa3, 0xad, 0xc6, 0x49, 0xd0, 0xc2, 0xb4, 0x9f, 0x18, 0x68, 0x5e, 0x26, 0x68,
	0xae, 0xea, 0x48, 0x15, 0x30, 0x6b, 0xb3, 0x10, 0x4c, 0x58, 0xf1, 0x7b, 0x03, 0xbd, 0x92, 0x45,
	0x8d, 0x68, 0x88, 0xcd, 0x80, 0x5b, 0x5b, 0x27, 0x82, 0x0b, 0xeb, 0x7e, 0x84, 0xe6, 0x12, 0x12,
	0xe5, 0xb2, 0xee, 0x0d, 0xbe, 0x83, 0x43, 0xeb, 0x66, 0x01, 0x90, 0xe2, 0xc6, 0x0a, 0x21, 0x72,
	0x4d, 0xeb, 0x54, 0x08, 0x9c, 0x8e, 0x1b, 0x67, 0xb1, 0x24, 0xe0, 0x2b, 0x32, 0x47, 0xa2, 0xe1,
	0x2b, 0x12, 0x4c, 0xc7, 0x57, 0x32, 0xf8, 0x14, 0xf3, 0x89, 0x81, 0x16, 0x52, 0x6c, 0xca, 0xba,
	0x56, 0x30, 0x93, 0x90, 0xd6, 0xbb, 0x45, 0x91, 0xc2, 0x9c, 0xdf, 0x18, 0xe8, 0xe5, 0x61, 0x4a,
	0xe5, 0xa6, 0xce, 0x79, 0x48, 0x81, 0xad, 0xfa, 0x09, 0xc0, 0xc2, 0xae, 0xcf, 0x0d, 0x54, 0x1e,
	0x49, 0xb5, 0xd4, 0xb4, 0x35, 0x0c, 0xc9, 0xb0, 0xbe, 0x75, 0x72, 0x19, 0xea, 0xf9, 0xcf, 0x60,
	0x63, 0x36, 0xf5, 0x3c, 0x36, 0x05, 0xd7, 0x3a, 0xff, 0xa3, 0xd9, 0x1a, 0x48, 0x37, 0xd2, 0x54,
	0xcd, 0x86, 0xfe, 0x89, 0xe6, 0x50, 0x9d, 0x74, 0x63, 0x04, 0x2b, 0x63, 0x1e, 0xa1, 0x53, 0x31,
	0x25, 0x73, 0x49, 0x3b, 0x91, 0xb3, 0x36, 0xb4, 0x21, 0xca, 0x52, 0xa4, 0xc9, 0x9a, 0x0d, 0x5d,
	0x47, 0x28, 0xb4, 0x14, 0x23, 0x08, 0x1d, 0xb0, 0x28, 0x4d, 0xe7, 0x6c, 0x14, 0x49, 0x1b, 0x98,
	0xcb, 0x54, 0x0b, 0x43, 0x95, 0x2c, 0x5d, 0xa5, 0x79, 0xae, 0x6b, 0x09, 0x4d, 0x80, 0x3a, 0x59,
	0x7a, 0x26, 0xfd, 0x03, 0xb6, 0xa8, 0xdc, 0x8f, 0x86, 0x2d, 0x0a, 0x50, 0xc7, 0x96, 0x4c, 0x1a,
	0x07, 0x6c, 0x51, 0x49, 0x9c, 0xeb, 0xba, 0x27, 0x21, 0xce, 0x7d, 0x6e, 0x15, 0x04, 0x0a, 0x5b,
	0xfe, 0x68, 0xa0, 0x57, 0xb3, 0xd9, 0x1e, 0x1d, 0xd1, 0x59, 0x02, 0xac, 0x3b, 0x27, 0x14, 0xa0,
	0xd8, 0x98, 0x4d, 0xee, 0xdc, 0xd2, 0x39, 0x36, 0x19, 0x02, 0x74, 0x6c, 0xcc, 0x65, 0x69, 0x20,
	0x18, 0xa7, 0x38, 0x9a, 0x75, 0x1d, 0xd9, 0x32, 0x52, 0x27, 0x18, 0x67, 0x53, 0x39, 0xe6, 0x9f,
	0x0d, 0x74, 0x7e, 0x34, 0x91, 0xa3, 0x15, 0x57, 0x47, 0x08, 0xb1, 0xee, 0xbd, 0x00, 0x21, 0x6a,
	0x85, 0x22, 0xb3, 0x42, 0x3a, 0x15, 0x8a, 0x84, 0xd3, 0xaa, 0x50, 0x32, 0x18, 0x1a, 0xd8, 0xc7,
	0x14, 0x3f, 0xb3, 0xae, 0x75, 0xde, 0x25, 0xa4, 0xce, 0x3e, 0x66, 0x93, 0x39, 0x70, 0xa9, 0xa7,
	0xa9, 0x1c, 0x8d, 0x4b, 0x3d, 0x05, 0xd5, 0xb9, 0xd4, 0x47, 0x51, 0x3d, 0x51, 0x86, 0x92, 0x45,
	0xe7, 0x6c, 0xea, 0xd7, 0xeb, 0xb2, 0x65, 0x5b, 0x27, 0x82, 0x2b, 0x49, 0xe8, 0x30, 0xa9, 0x73,
	0x53, 0x6b, 0x1f, 0x54, 0xb0, 0x4e, 0x12, 0x3a, 0x92, 0xe4, 0x01, 0xff, 0x56, 0x28, 0x9e, 0x6b,
	0xba, 0x52, 0xf5, 0x2b, 0xf0, 0x2c, 0xde, 0x27, 0xf6, 0x6f, 0x99, 0xf5, 0xd1, 0xf3, 0x6f, 0x09,
	0xa9, 0xe9, 0xdf, 0x19, 0x04, 0x91, 0xf9, 0x2b, 0x03, 0x9d, 0x1d, 0xa2, 0x87, 0x6e, 0x68, 0x8b,
	0x15, 0x58, 0xab, 0x56, 0x1c, 0xab, 0xc4, 0x67, 0x95, 0x45, 0xd2, 0x88, 0xcf, 0x0a, 0x50, 0x27,
	0x3e, 0x67, 0x12, 0x48, 0x51, 0xc9, 0x9d, 0x90, 0x47, 0x97, 0xf5, 0x8e, 0x2f, 0xbb, 0x11, 0x6f,
	0x16, 0x00, 0x29, 0x8f, 0x57, 0x12, 0xd1, 0x73, 0x45, 0xd7, 0xfb, 0x22, 0x94, 0xce, 0xe3, 0xd5,
	0x30, 0xff, 0x03, 0xc5, 0xb6, 0xcc, 0xfe, 0x5c, 0xd5, 0x7e, 0x83, 0x8a, 0x60, 0x3a, 0xc5, 0x76,
	0x06, 0x53, 0x04, 0x17, 0xcb, 0x30, 0x4f, 0xa4, 0xb1, 0xb6, 0x43, 0x60, 0x9d, 0x8b, 0x65, 0x24,
	0xb7, 0x64, 0xfe, 0xc1, 0x40, 0x8b, 0x99, 0xcc, 0x92, 0xce, 0xb3, 0x65, 0x06, 0xde, 0xba, 0x7d,
	0x32, 0xbc, 0x12, 0x2f, 0xb2, 0xe8, 0xa8, 0x4d, 0xad, 0x40, 0x9d, 0x86, 0xeb, 0xc4, 0x8b, 0x1c,
	0xfa, 0x0a, 0xe2, 0x6b, 0x9a, 0xbb, 0xda, 0x28, 0xcc, 0x38, 0xe9, 0xc4, 0xd7, 0x11, 0xdc, 0x11,
	0xb8, 0xbb, 0xcc, 0x1c, 0x5d, 0x2d, 0x20, 0xb2, 0x41, 0x74, 0xdc, 0x3d, 0x83, 0x59, 0x82, 0x30,
	0x91, 0xe2, 0x95, 0xd6, 0x8b, 0xcc, 0x2d, 0x42, 0xea, 0x84, 0x89, 0x6c, 0xea, 0xa9, 0xd6, 0xfc,
	0xe2, 0xd9, 0x92, 0xf1, 0xe5, 0xb3, 0x25, 0xe3, 0x5f, 0xcf, 0x96, 0x8c, 0x5f, 0x3e, 0x5f, 0x9a,
	0xf8, 0xf2, 0xf9, 0xd2, 0xc4, 0xdf, 0x9f, 0x2f, 0x4d, 0x3c, 0x5a, 0x97, 0xfe, 0x91, 0xe7, 0x90,
	0x96, 0xd5, 0xba, 0xf8, 0xab, 0xa9, 0x4f, 0xe5, 0x3f, 0x01, 0x1b, 0xf4, 0x70, 0xb0, 0x3b, 0x03,
	0x7f, 0x23, 0x75, 0xf9, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x79, 0x5f, 0xce, 0x26, 0x36,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	Createuser(ctx context.Context, in *MsgCreateuser, opts ...grpc.CallOption) (*MsgCreateuserResponse, error)
	BuyCardScheme(ctx context.Context, in *MsgBuyCardScheme, opts ...grpc.CallOption) (*MsgBuyCardSchemeResponse, error)
	VoteCard(ctx context.Context, in *MsgVoteCard, opts ...grpc.CallOption) (*MsgVoteCardResponse, error)
	SaveCardContent(ctx context.Context, in *MsgSaveCardContent, opts ...grpc.CallOption) (*MsgSaveCardContentResponse, error)
	TransferCard(ctx context.Context, in *MsgTransferCard, opts ...grpc.CallOption) (*MsgTransferCardResponse, error)
	DonateToCard(ctx context.Context, in *MsgDonateToCard, opts ...grpc.CallOption) (*MsgDonateToCardResponse, error)
	AddArtwork(ctx context.Context, in *MsgAddArtwork, opts ...grpc.CallOption) (*MsgAddArtworkResponse, error)
	ChangeArtist(ctx context.Context, in *MsgChangeArtist, opts ...grpc.CallOption) (*MsgChangeArtistResponse, error)
	RegisterForCouncil(ctx context.Context, in *MsgRegisterForCouncil, opts ...grpc.CallOption) (*MsgRegisterForCouncilResponse, error)
	ReportMatch(ctx context.Context, in *MsgReportMatch, opts ...grpc.CallOption) (*MsgReportMatchResponse, error)
	ApointMatchReporter(ctx context.Context, in *MsgApointMatchReporter, opts ...grpc.CallOption) (*MsgApointMatchReporterResponse, error)
	CreateSet(ctx context.Context, in *MsgCreateSet, opts ...grpc.CallOption) (*MsgCreateSetResponse, error)
	AddCardToSet(ctx context.Context, in *MsgAddCardToSet, opts ...grpc.CallOption) (*MsgAddCardToSetResponse, error)
	FinalizeSet(ctx context.Context, in *MsgFinalizeSet, opts ...grpc.CallOption) (*MsgFinalizeSetResponse, error)
	BuyBoosterPack(ctx context.Context, in *MsgBuyBoosterPack, opts ...grpc.CallOption) (*MsgBuyBoosterPackResponse, error)
	RemoveCardFromSet(ctx context.Context, in *MsgRemoveCardFromSet, opts ...grpc.CallOption) (*MsgRemoveCardFromSetResponse, error)
	RemoveContributorFromSet(ctx context.Context, in *MsgRemoveContributorFromSet, opts ...grpc.CallOption) (*MsgRemoveContributorFromSetResponse, error)
	AddContributorToSet(ctx context.Context, in *MsgAddContributorToSet, opts ...grpc.CallOption) (*MsgAddContributorToSetResponse, error)
	CreateSellOffer(ctx context.Context, in *MsgCreateSellOffer, opts ...grpc.CallOption) (*MsgCreateSellOfferResponse, error)
	BuyCard(ctx context.Context, in *MsgBuyCard, opts ...grpc.CallOption) (*MsgBuyCardResponse, error)
	RemoveSellOffer(ctx context.Context, in *MsgRemoveSellOffer, opts ...grpc.CallOption) (*MsgRemoveSellOfferResponse, error)
	AddArtworkToSet(ctx context.Context, in *MsgAddArtworkToSet, opts ...grpc.CallOption) (*MsgAddArtworkToSetResponse, error)
	AddStoryToSet(ctx context.Context, in *MsgAddStoryToSet, opts ...grpc.CallOption) (*MsgAddStoryToSetResponse, error)
	SetCardRarity(ctx context.Context, in *MsgSetCardRarity, opts ...grpc.CallOption) (*MsgSetCardRarityResponse, error)
	CreateCouncil(ctx context.Context, in *MsgCreateCouncil, opts ...grpc.CallOption) (*MsgCreateCouncilResponse, error)
	CommitCouncilResponse(ctx context.Context, in *MsgCommitCouncilResponse, opts ...grpc.CallOption) (*MsgCommitCouncilResponseResponse, error)
	RevealCouncilResponse(ctx context.Context, in *MsgRevealCouncilResponse, opts ...grpc.CallOption) (*MsgRevealCouncilResponseResponse, error)
	RestartCouncil(ctx context.Context, in *MsgRestartCouncil, opts ...grpc.CallOption) (*MsgRestartCouncilResponse, error)
	RewokeCouncilRegistration(ctx context.Context, in *MsgRewokeCouncilRegistration, opts ...grpc.CallOption) (*MsgRewokeCouncilRegistrationResponse, error)
	ConfirmMatch(ctx context.Context, in *MsgConfirmMatch, opts ...grpc.CallOption) (*MsgConfirmMatchResponse, error)
	SetProfileCard(ctx context.Context, in *MsgSetProfileCard, opts ...grpc.CallOption) (*MsgSetProfileCardResponse, error)
	OpenBoosterPack(ctx context.Context, in *MsgOpenBoosterPack, opts ...grpc.CallOption) (*MsgOpenBoosterPackResponse, error)
	TransferBoosterPack(ctx context.Context, in *MsgTransferBoosterPack, opts ...grpc.CallOption) (*MsgTransferBoosterPackResponse, error)
	SetSetStoryWriter(ctx context.Context, in *MsgSetSetStoryWriter, opts ...grpc.CallOption) (*MsgSetSetStoryWriterResponse, error)
	SetSetArtist(ctx context.Context, in *MsgSetSetArtist, opts ...grpc.CallOption) (*MsgSetSetArtistResponse, error)
	SetUserWebsite(ctx context.Context, in *MsgSetUserWebsite, opts ...grpc.CallOption) (*MsgSetUserWebsiteResponse, error)
	SetUserBiography(ctx context.Context, in *MsgSetUserBiography, opts ...grpc.CallOption) (*MsgSetUserBiographyResponse, error)
	// this line is used by starport scaffolding # proto/tx/rpc
	MultiVoteCard(ctx context.Context, in *MsgMultiVoteCard, opts ...grpc.CallOption) (*MsgMultiVoteCardResponse, error)
	OpenMatch(ctx context.Context, in *MsgOpenMatch, opts ...grpc.CallOption) (*MsgOpenMatchResponse, error)
	SetSetName(ctx context.Context, in *MsgSetSetName, opts ...grpc.CallOption) (*MsgSetSetNameResponse, error)
	ChangeAlias(ctx context.Context, in *MsgChangeAlias, opts ...grpc.CallOption) (*MsgChangeAliasResponse, error)
	InviteEarlyAccess(ctx context.Context, in *MsgInviteEarlyAccess, opts ...grpc.CallOption) (*MsgInviteEarlyAccessResponse, error)
	DisinviteEarlyAccess(ctx context.Context, in *MsgDisinviteEarlyAccess, opts ...grpc.CallOption) (*MsgDisinviteEarlyAccessResponse, error)
	ConnectZealyAccount(ctx context.Context, in *MsgConnectZealyAccount, opts ...grpc.CallOption) (*MsgConnectZealyAccountResponse, error)
	EncounterCreate(ctx context.Context, in *MsgEncounterCreate, opts ...grpc.CallOption) (*MsgEncounterCreateResponse, error)
	EncounterDo(ctx context.Context, in *MsgEncounterDo, opts ...grpc.CallOption) (*MsgEncounterDoResponse, error)
	EncounterClose(ctx context.Context, in *MsgEncounterClose, opts ...grpc.CallOption) (*MsgEncounterCloseResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Createuser(ctx context.Context, in *MsgCreateuser, opts ...grpc.CallOption) (*MsgCreateuserResponse, error) {
	out := new(MsgCreateuserResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/Createuser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BuyCardScheme(ctx context.Context, in *MsgBuyCardScheme, opts ...grpc.CallOption) (*MsgBuyCardSchemeResponse, error) {
	out := new(MsgBuyCardSchemeResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/BuyCardScheme", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VoteCard(ctx context.Context, in *MsgVoteCard, opts ...grpc.CallOption) (*MsgVoteCardResponse, error) {
	out := new(MsgVoteCardResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/VoteCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SaveCardContent(ctx context.Context, in *MsgSaveCardContent, opts ...grpc.CallOption) (*MsgSaveCardContentResponse, error) {
	out := new(MsgSaveCardContentResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SaveCardContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) TransferCard(ctx context.Context, in *MsgTransferCard, opts ...grpc.CallOption) (*MsgTransferCardResponse, error) {
	out := new(MsgTransferCardResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/TransferCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DonateToCard(ctx context.Context, in *MsgDonateToCard, opts ...grpc.CallOption) (*MsgDonateToCardResponse, error) {
	out := new(MsgDonateToCardResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/DonateToCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddArtwork(ctx context.Context, in *MsgAddArtwork, opts ...grpc.CallOption) (*MsgAddArtworkResponse, error) {
	out := new(MsgAddArtworkResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/AddArtwork", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ChangeArtist(ctx context.Context, in *MsgChangeArtist, opts ...grpc.CallOption) (*MsgChangeArtistResponse, error) {
	out := new(MsgChangeArtistResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/ChangeArtist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RegisterForCouncil(ctx context.Context, in *MsgRegisterForCouncil, opts ...grpc.CallOption) (*MsgRegisterForCouncilResponse, error) {
	out := new(MsgRegisterForCouncilResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/RegisterForCouncil", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ReportMatch(ctx context.Context, in *MsgReportMatch, opts ...grpc.CallOption) (*MsgReportMatchResponse, error) {
	out := new(MsgReportMatchResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/ReportMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ApointMatchReporter(ctx context.Context, in *MsgApointMatchReporter, opts ...grpc.CallOption) (*MsgApointMatchReporterResponse, error) {
	out := new(MsgApointMatchReporterResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/ApointMatchReporter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSet(ctx context.Context, in *MsgCreateSet, opts ...grpc.CallOption) (*MsgCreateSetResponse, error) {
	out := new(MsgCreateSetResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/CreateSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddCardToSet(ctx context.Context, in *MsgAddCardToSet, opts ...grpc.CallOption) (*MsgAddCardToSetResponse, error) {
	out := new(MsgAddCardToSetResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/AddCardToSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) FinalizeSet(ctx context.Context, in *MsgFinalizeSet, opts ...grpc.CallOption) (*MsgFinalizeSetResponse, error) {
	out := new(MsgFinalizeSetResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/FinalizeSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BuyBoosterPack(ctx context.Context, in *MsgBuyBoosterPack, opts ...grpc.CallOption) (*MsgBuyBoosterPackResponse, error) {
	out := new(MsgBuyBoosterPackResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/BuyBoosterPack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveCardFromSet(ctx context.Context, in *MsgRemoveCardFromSet, opts ...grpc.CallOption) (*MsgRemoveCardFromSetResponse, error) {
	out := new(MsgRemoveCardFromSetResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/RemoveCardFromSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveContributorFromSet(ctx context.Context, in *MsgRemoveContributorFromSet, opts ...grpc.CallOption) (*MsgRemoveContributorFromSetResponse, error) {
	out := new(MsgRemoveContributorFromSetResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/RemoveContributorFromSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddContributorToSet(ctx context.Context, in *MsgAddContributorToSet, opts ...grpc.CallOption) (*MsgAddContributorToSetResponse, error) {
	out := new(MsgAddContributorToSetResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/AddContributorToSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSellOffer(ctx context.Context, in *MsgCreateSellOffer, opts ...grpc.CallOption) (*MsgCreateSellOfferResponse, error) {
	out := new(MsgCreateSellOfferResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/CreateSellOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BuyCard(ctx context.Context, in *MsgBuyCard, opts ...grpc.CallOption) (*MsgBuyCardResponse, error) {
	out := new(MsgBuyCardResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/BuyCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveSellOffer(ctx context.Context, in *MsgRemoveSellOffer, opts ...grpc.CallOption) (*MsgRemoveSellOfferResponse, error) {
	out := new(MsgRemoveSellOfferResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/RemoveSellOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddArtworkToSet(ctx context.Context, in *MsgAddArtworkToSet, opts ...grpc.CallOption) (*MsgAddArtworkToSetResponse, error) {
	out := new(MsgAddArtworkToSetResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/AddArtworkToSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddStoryToSet(ctx context.Context, in *MsgAddStoryToSet, opts ...grpc.CallOption) (*MsgAddStoryToSetResponse, error) {
	out := new(MsgAddStoryToSetResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/AddStoryToSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetCardRarity(ctx context.Context, in *MsgSetCardRarity, opts ...grpc.CallOption) (*MsgSetCardRarityResponse, error) {
	out := new(MsgSetCardRarityResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SetCardRarity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateCouncil(ctx context.Context, in *MsgCreateCouncil, opts ...grpc.CallOption) (*MsgCreateCouncilResponse, error) {
	out := new(MsgCreateCouncilResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/CreateCouncil", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CommitCouncilResponse(ctx context.Context, in *MsgCommitCouncilResponse, opts ...grpc.CallOption) (*MsgCommitCouncilResponseResponse, error) {
	out := new(MsgCommitCouncilResponseResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/CommitCouncilResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RevealCouncilResponse(ctx context.Context, in *MsgRevealCouncilResponse, opts ...grpc.CallOption) (*MsgRevealCouncilResponseResponse, error) {
	out := new(MsgRevealCouncilResponseResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/RevealCouncilResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RestartCouncil(ctx context.Context, in *MsgRestartCouncil, opts ...grpc.CallOption) (*MsgRestartCouncilResponse, error) {
	out := new(MsgRestartCouncilResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/RestartCouncil", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RewokeCouncilRegistration(ctx context.Context, in *MsgRewokeCouncilRegistration, opts ...grpc.CallOption) (*MsgRewokeCouncilRegistrationResponse, error) {
	out := new(MsgRewokeCouncilRegistrationResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/RewokeCouncilRegistration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ConfirmMatch(ctx context.Context, in *MsgConfirmMatch, opts ...grpc.CallOption) (*MsgConfirmMatchResponse, error) {
	out := new(MsgConfirmMatchResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/ConfirmMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetProfileCard(ctx context.Context, in *MsgSetProfileCard, opts ...grpc.CallOption) (*MsgSetProfileCardResponse, error) {
	out := new(MsgSetProfileCardResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SetProfileCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) OpenBoosterPack(ctx context.Context, in *MsgOpenBoosterPack, opts ...grpc.CallOption) (*MsgOpenBoosterPackResponse, error) {
	out := new(MsgOpenBoosterPackResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/OpenBoosterPack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) TransferBoosterPack(ctx context.Context, in *MsgTransferBoosterPack, opts ...grpc.CallOption) (*MsgTransferBoosterPackResponse, error) {
	out := new(MsgTransferBoosterPackResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/TransferBoosterPack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetSetStoryWriter(ctx context.Context, in *MsgSetSetStoryWriter, opts ...grpc.CallOption) (*MsgSetSetStoryWriterResponse, error) {
	out := new(MsgSetSetStoryWriterResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SetSetStoryWriter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetSetArtist(ctx context.Context, in *MsgSetSetArtist, opts ...grpc.CallOption) (*MsgSetSetArtistResponse, error) {
	out := new(MsgSetSetArtistResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SetSetArtist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetUserWebsite(ctx context.Context, in *MsgSetUserWebsite, opts ...grpc.CallOption) (*MsgSetUserWebsiteResponse, error) {
	out := new(MsgSetUserWebsiteResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SetUserWebsite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetUserBiography(ctx context.Context, in *MsgSetUserBiography, opts ...grpc.CallOption) (*MsgSetUserBiographyResponse, error) {
	out := new(MsgSetUserBiographyResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SetUserBiography", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MultiVoteCard(ctx context.Context, in *MsgMultiVoteCard, opts ...grpc.CallOption) (*MsgMultiVoteCardResponse, error) {
	out := new(MsgMultiVoteCardResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/MultiVoteCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) OpenMatch(ctx context.Context, in *MsgOpenMatch, opts ...grpc.CallOption) (*MsgOpenMatchResponse, error) {
	out := new(MsgOpenMatchResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/OpenMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetSetName(ctx context.Context, in *MsgSetSetName, opts ...grpc.CallOption) (*MsgSetSetNameResponse, error) {
	out := new(MsgSetSetNameResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/SetSetName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ChangeAlias(ctx context.Context, in *MsgChangeAlias, opts ...grpc.CallOption) (*MsgChangeAliasResponse, error) {
	out := new(MsgChangeAliasResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/ChangeAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InviteEarlyAccess(ctx context.Context, in *MsgInviteEarlyAccess, opts ...grpc.CallOption) (*MsgInviteEarlyAccessResponse, error) {
	out := new(MsgInviteEarlyAccessResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/InviteEarlyAccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DisinviteEarlyAccess(ctx context.Context, in *MsgDisinviteEarlyAccess, opts ...grpc.CallOption) (*MsgDisinviteEarlyAccessResponse, error) {
	out := new(MsgDisinviteEarlyAccessResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/DisinviteEarlyAccess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ConnectZealyAccount(ctx context.Context, in *MsgConnectZealyAccount, opts ...grpc.CallOption) (*MsgConnectZealyAccountResponse, error) {
	out := new(MsgConnectZealyAccountResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/ConnectZealyAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EncounterCreate(ctx context.Context, in *MsgEncounterCreate, opts ...grpc.CallOption) (*MsgEncounterCreateResponse, error) {
	out := new(MsgEncounterCreateResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/EncounterCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EncounterDo(ctx context.Context, in *MsgEncounterDo, opts ...grpc.CallOption) (*MsgEncounterDoResponse, error) {
	out := new(MsgEncounterDoResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/EncounterDo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EncounterClose(ctx context.Context, in *MsgEncounterClose, opts ...grpc.CallOption) (*MsgEncounterCloseResponse, error) {
	out := new(MsgEncounterCloseResponse)
	err := c.cc.Invoke(ctx, "/DecentralCardGame.cardchain.cardchain.Msg/EncounterClose", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	Createuser(context.Context, *MsgCreateuser) (*MsgCreateuserResponse, error)
	BuyCardScheme(context.Context, *MsgBuyCardScheme) (*MsgBuyCardSchemeResponse, error)
	VoteCard(context.Context, *MsgVoteCard) (*MsgVoteCardResponse, error)
	SaveCardContent(context.Context, *MsgSaveCardContent) (*MsgSaveCardContentResponse, error)
	TransferCard(context.Context, *MsgTransferCard) (*MsgTransferCardResponse, error)
	DonateToCard(context.Context, *MsgDonateToCard) (*MsgDonateToCardResponse, error)
	AddArtwork(context.Context, *MsgAddArtwork) (*MsgAddArtworkResponse, error)
	ChangeArtist(context.Context, *MsgChangeArtist) (*MsgChangeArtistResponse, error)
	RegisterForCouncil(context.Context, *MsgRegisterForCouncil) (*MsgRegisterForCouncilResponse, error)
	ReportMatch(context.Context, *MsgReportMatch) (*MsgReportMatchResponse, error)
	ApointMatchReporter(context.Context, *MsgApointMatchReporter) (*MsgApointMatchReporterResponse, error)
	CreateSet(context.Context, *MsgCreateSet) (*MsgCreateSetResponse, error)
	AddCardToSet(context.Context, *MsgAddCardToSet) (*MsgAddCardToSetResponse, error)
	FinalizeSet(context.Context, *MsgFinalizeSet) (*MsgFinalizeSetResponse, error)
	BuyBoosterPack(context.Context, *MsgBuyBoosterPack) (*MsgBuyBoosterPackResponse, error)
	RemoveCardFromSet(context.Context, *MsgRemoveCardFromSet) (*MsgRemoveCardFromSetResponse, error)
	RemoveContributorFromSet(context.Context, *MsgRemoveContributorFromSet) (*MsgRemoveContributorFromSetResponse, error)
	AddContributorToSet(context.Context, *MsgAddContributorToSet) (*MsgAddContributorToSetResponse, error)
	CreateSellOffer(context.Context, *MsgCreateSellOffer) (*MsgCreateSellOfferResponse, error)
	BuyCard(context.Context, *MsgBuyCard) (*MsgBuyCardResponse, error)
	RemoveSellOffer(context.Context, *MsgRemoveSellOffer) (*MsgRemoveSellOfferResponse, error)
	AddArtworkToSet(context.Context, *MsgAddArtworkToSet) (*MsgAddArtworkToSetResponse, error)
	AddStoryToSet(context.Context, *MsgAddStoryToSet) (*MsgAddStoryToSetResponse, error)
	SetCardRarity(context.Context, *MsgSetCardRarity) (*MsgSetCardRarityResponse, error)
	CreateCouncil(context.Context, *MsgCreateCouncil) (*MsgCreateCouncilResponse, error)
	CommitCouncilResponse(context.Context, *MsgCommitCouncilResponse) (*MsgCommitCouncilResponseResponse, error)
	RevealCouncilResponse(context.Context, *MsgRevealCouncilResponse) (*MsgRevealCouncilResponseResponse, error)
	RestartCouncil(context.Context, *MsgRestartCouncil) (*MsgRestartCouncilResponse, error)
	RewokeCouncilRegistration(context.Context, *MsgRewokeCouncilRegistration) (*MsgRewokeCouncilRegistrationResponse, error)
	ConfirmMatch(context.Context, *MsgConfirmMatch) (*MsgConfirmMatchResponse, error)
	SetProfileCard(context.Context, *MsgSetProfileCard) (*MsgSetProfileCardResponse, error)
	OpenBoosterPack(context.Context, *MsgOpenBoosterPack) (*MsgOpenBoosterPackResponse, error)
	TransferBoosterPack(context.Context, *MsgTransferBoosterPack) (*MsgTransferBoosterPackResponse, error)
	SetSetStoryWriter(context.Context, *MsgSetSetStoryWriter) (*MsgSetSetStoryWriterResponse, error)
	SetSetArtist(context.Context, *MsgSetSetArtist) (*MsgSetSetArtistResponse, error)
	SetUserWebsite(context.Context, *MsgSetUserWebsite) (*MsgSetUserWebsiteResponse, error)
	SetUserBiography(context.Context, *MsgSetUserBiography) (*MsgSetUserBiographyResponse, error)
	// this line is used by starport scaffolding # proto/tx/rpc
	MultiVoteCard(context.Context, *MsgMultiVoteCard) (*MsgMultiVoteCardResponse, error)
	OpenMatch(context.Context, *MsgOpenMatch) (*MsgOpenMatchResponse, error)
	SetSetName(context.Context, *MsgSetSetName) (*MsgSetSetNameResponse, error)
	ChangeAlias(context.Context, *MsgChangeAlias) (*MsgChangeAliasResponse, error)
	InviteEarlyAccess(context.Context, *MsgInviteEarlyAccess) (*MsgInviteEarlyAccessResponse, error)
	DisinviteEarlyAccess(context.Context, *MsgDisinviteEarlyAccess) (*MsgDisinviteEarlyAccessResponse, error)
	ConnectZealyAccount(context.Context, *MsgConnectZealyAccount) (*MsgConnectZealyAccountResponse, error)
	EncounterCreate(context.Context, *MsgEncounterCreate) (*MsgEncounterCreateResponse, error)
	EncounterDo(context.Context, *MsgEncounterDo) (*MsgEncounterDoResponse, error)
	EncounterClose(context.Context, *MsgEncounterClose) (*MsgEncounterCloseResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Createuser(ctx context.Context, req *MsgCreateuser) (*MsgCreateuserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Createuser not implemented")
}
func (*UnimplementedMsgServer) BuyCardScheme(ctx context.Context, req *MsgBuyCardScheme) (*MsgBuyCardSchemeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyCardScheme not implemented")
}
func (*UnimplementedMsgServer) VoteCard(ctx context.Context, req *MsgVoteCard) (*MsgVoteCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteCard not implemented")
}
func (*UnimplementedMsgServer) SaveCardContent(ctx context.Context, req *MsgSaveCardContent) (*MsgSaveCardContentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveCardContent not implemented")
}
func (*UnimplementedMsgServer) TransferCard(ctx context.Context, req *MsgTransferCard) (*MsgTransferCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferCard not implemented")
}
func (*UnimplementedMsgServer) DonateToCard(ctx context.Context, req *MsgDonateToCard) (*MsgDonateToCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DonateToCard not implemented")
}
func (*UnimplementedMsgServer) AddArtwork(ctx context.Context, req *MsgAddArtwork) (*MsgAddArtworkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddArtwork not implemented")
}
func (*UnimplementedMsgServer) ChangeArtist(ctx context.Context, req *MsgChangeArtist) (*MsgChangeArtistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeArtist not implemented")
}
func (*UnimplementedMsgServer) RegisterForCouncil(ctx context.Context, req *MsgRegisterForCouncil) (*MsgRegisterForCouncilResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterForCouncil not implemented")
}
func (*UnimplementedMsgServer) ReportMatch(ctx context.Context, req *MsgReportMatch) (*MsgReportMatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportMatch not implemented")
}
func (*UnimplementedMsgServer) ApointMatchReporter(ctx context.Context, req *MsgApointMatchReporter) (*MsgApointMatchReporterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApointMatchReporter not implemented")
}
func (*UnimplementedMsgServer) CreateSet(ctx context.Context, req *MsgCreateSet) (*MsgCreateSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSet not implemented")
}
func (*UnimplementedMsgServer) AddCardToSet(ctx context.Context, req *MsgAddCardToSet) (*MsgAddCardToSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCardToSet not implemented")
}
func (*UnimplementedMsgServer) FinalizeSet(ctx context.Context, req *MsgFinalizeSet) (*MsgFinalizeSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinalizeSet not implemented")
}
func (*UnimplementedMsgServer) BuyBoosterPack(ctx context.Context, req *MsgBuyBoosterPack) (*MsgBuyBoosterPackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyBoosterPack not implemented")
}
func (*UnimplementedMsgServer) RemoveCardFromSet(ctx context.Context, req *MsgRemoveCardFromSet) (*MsgRemoveCardFromSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveCardFromSet not implemented")
}
func (*UnimplementedMsgServer) RemoveContributorFromSet(ctx context.Context, req *MsgRemoveContributorFromSet) (*MsgRemoveContributorFromSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveContributorFromSet not implemented")
}
func (*UnimplementedMsgServer) AddContributorToSet(ctx context.Context, req *MsgAddContributorToSet) (*MsgAddContributorToSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddContributorToSet not implemented")
}
func (*UnimplementedMsgServer) CreateSellOffer(ctx context.Context, req *MsgCreateSellOffer) (*MsgCreateSellOfferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSellOffer not implemented")
}
func (*UnimplementedMsgServer) BuyCard(ctx context.Context, req *MsgBuyCard) (*MsgBuyCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyCard not implemented")
}
func (*UnimplementedMsgServer) RemoveSellOffer(ctx context.Context, req *MsgRemoveSellOffer) (*MsgRemoveSellOfferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSellOffer not implemented")
}
func (*UnimplementedMsgServer) AddArtworkToSet(ctx context.Context, req *MsgAddArtworkToSet) (*MsgAddArtworkToSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddArtworkToSet not implemented")
}
func (*UnimplementedMsgServer) AddStoryToSet(ctx context.Context, req *MsgAddStoryToSet) (*MsgAddStoryToSetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddStoryToSet not implemented")
}
func (*UnimplementedMsgServer) SetCardRarity(ctx context.Context, req *MsgSetCardRarity) (*MsgSetCardRarityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCardRarity not implemented")
}
func (*UnimplementedMsgServer) CreateCouncil(ctx context.Context, req *MsgCreateCouncil) (*MsgCreateCouncilResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCouncil not implemented")
}
func (*UnimplementedMsgServer) CommitCouncilResponse(ctx context.Context, req *MsgCommitCouncilResponse) (*MsgCommitCouncilResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommitCouncilResponse not implemented")
}
func (*UnimplementedMsgServer) RevealCouncilResponse(ctx context.Context, req *MsgRevealCouncilResponse) (*MsgRevealCouncilResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevealCouncilResponse not implemented")
}
func (*UnimplementedMsgServer) RestartCouncil(ctx context.Context, req *MsgRestartCouncil) (*MsgRestartCouncilResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestartCouncil not implemented")
}
func (*UnimplementedMsgServer) RewokeCouncilRegistration(ctx context.Context, req *MsgRewokeCouncilRegistration) (*MsgRewokeCouncilRegistrationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RewokeCouncilRegistration not implemented")
}
func (*UnimplementedMsgServer) ConfirmMatch(ctx context.Context, req *MsgConfirmMatch) (*MsgConfirmMatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmMatch not implemented")
}
func (*UnimplementedMsgServer) SetProfileCard(ctx context.Context, req *MsgSetProfileCard) (*MsgSetProfileCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetProfileCard not implemented")
}
func (*UnimplementedMsgServer) OpenBoosterPack(ctx context.Context, req *MsgOpenBoosterPack) (*MsgOpenBoosterPackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenBoosterPack not implemented")
}
func (*UnimplementedMsgServer) TransferBoosterPack(ctx context.Context, req *MsgTransferBoosterPack) (*MsgTransferBoosterPackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferBoosterPack not implemented")
}
func (*UnimplementedMsgServer) SetSetStoryWriter(ctx context.Context, req *MsgSetSetStoryWriter) (*MsgSetSetStoryWriterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSetStoryWriter not implemented")
}
func (*UnimplementedMsgServer) SetSetArtist(ctx context.Context, req *MsgSetSetArtist) (*MsgSetSetArtistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSetArtist not implemented")
}
func (*UnimplementedMsgServer) SetUserWebsite(ctx context.Context, req *MsgSetUserWebsite) (*MsgSetUserWebsiteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserWebsite not implemented")
}
func (*UnimplementedMsgServer) SetUserBiography(ctx context.Context, req *MsgSetUserBiography) (*MsgSetUserBiographyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserBiography not implemented")
}
func (*UnimplementedMsgServer) MultiVoteCard(ctx context.Context, req *MsgMultiVoteCard) (*MsgMultiVoteCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiVoteCard not implemented")
}
func (*UnimplementedMsgServer) OpenMatch(ctx context.Context, req *MsgOpenMatch) (*MsgOpenMatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenMatch not implemented")
}
func (*UnimplementedMsgServer) SetSetName(ctx context.Context, req *MsgSetSetName) (*MsgSetSetNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSetName not implemented")
}
func (*UnimplementedMsgServer) ChangeAlias(ctx context.Context, req *MsgChangeAlias) (*MsgChangeAliasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeAlias not implemented")
}
func (*UnimplementedMsgServer) InviteEarlyAccess(ctx context.Context, req *MsgInviteEarlyAccess) (*MsgInviteEarlyAccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InviteEarlyAccess not implemented")
}
func (*UnimplementedMsgServer) DisinviteEarlyAccess(ctx context.Context, req *MsgDisinviteEarlyAccess) (*MsgDisinviteEarlyAccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisinviteEarlyAccess not implemented")
}
func (*UnimplementedMsgServer) ConnectZealyAccount(ctx context.Context, req *MsgConnectZealyAccount) (*MsgConnectZealyAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectZealyAccount not implemented")
}
func (*UnimplementedMsgServer) EncounterCreate(ctx context.Context, req *MsgEncounterCreate) (*MsgEncounterCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EncounterCreate not implemented")
}
func (*UnimplementedMsgServer) EncounterDo(ctx context.Context, req *MsgEncounterDo) (*MsgEncounterDoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EncounterDo not implemented")
}
func (*UnimplementedMsgServer) EncounterClose(ctx context.Context, req *MsgEncounterClose) (*MsgEncounterCloseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EncounterClose not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Createuser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateuser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Createuser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/Createuser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Createuser(ctx, req.(*MsgCreateuser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BuyCardScheme_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBuyCardScheme)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BuyCardScheme(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/BuyCardScheme",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BuyCardScheme(ctx, req.(*MsgBuyCardScheme))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VoteCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVoteCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VoteCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/VoteCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VoteCard(ctx, req.(*MsgVoteCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SaveCardContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSaveCardContent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SaveCardContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SaveCardContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SaveCardContent(ctx, req.(*MsgSaveCardContent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_TransferCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTransferCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).TransferCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/TransferCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).TransferCard(ctx, req.(*MsgTransferCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DonateToCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDonateToCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DonateToCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/DonateToCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DonateToCard(ctx, req.(*MsgDonateToCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddArtwork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddArtwork)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddArtwork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/AddArtwork",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddArtwork(ctx, req.(*MsgAddArtwork))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ChangeArtist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgChangeArtist)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ChangeArtist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/ChangeArtist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ChangeArtist(ctx, req.(*MsgChangeArtist))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RegisterForCouncil_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterForCouncil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterForCouncil(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/RegisterForCouncil",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterForCouncil(ctx, req.(*MsgRegisterForCouncil))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ReportMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReportMatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ReportMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/ReportMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ReportMatch(ctx, req.(*MsgReportMatch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ApointMatchReporter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgApointMatchReporter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ApointMatchReporter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/ApointMatchReporter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ApointMatchReporter(ctx, req.(*MsgApointMatchReporter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/CreateSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSet(ctx, req.(*MsgCreateSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddCardToSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddCardToSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddCardToSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/AddCardToSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddCardToSet(ctx, req.(*MsgAddCardToSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_FinalizeSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFinalizeSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FinalizeSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/FinalizeSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FinalizeSet(ctx, req.(*MsgFinalizeSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BuyBoosterPack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBuyBoosterPack)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BuyBoosterPack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/BuyBoosterPack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BuyBoosterPack(ctx, req.(*MsgBuyBoosterPack))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveCardFromSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveCardFromSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveCardFromSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/RemoveCardFromSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveCardFromSet(ctx, req.(*MsgRemoveCardFromSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveContributorFromSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveContributorFromSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveContributorFromSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/RemoveContributorFromSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveContributorFromSet(ctx, req.(*MsgRemoveContributorFromSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddContributorToSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddContributorToSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddContributorToSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/AddContributorToSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddContributorToSet(ctx, req.(*MsgAddContributorToSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSellOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSellOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSellOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/CreateSellOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSellOffer(ctx, req.(*MsgCreateSellOffer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BuyCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBuyCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BuyCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/BuyCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BuyCard(ctx, req.(*MsgBuyCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveSellOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveSellOffer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveSellOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/RemoveSellOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveSellOffer(ctx, req.(*MsgRemoveSellOffer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddArtworkToSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddArtworkToSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddArtworkToSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/AddArtworkToSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddArtworkToSet(ctx, req.(*MsgAddArtworkToSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddStoryToSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddStoryToSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddStoryToSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/AddStoryToSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddStoryToSet(ctx, req.(*MsgAddStoryToSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetCardRarity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetCardRarity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetCardRarity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SetCardRarity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetCardRarity(ctx, req.(*MsgSetCardRarity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateCouncil_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCouncil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCouncil(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/CreateCouncil",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCouncil(ctx, req.(*MsgCreateCouncil))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CommitCouncilResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCommitCouncilResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CommitCouncilResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/CommitCouncilResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CommitCouncilResponse(ctx, req.(*MsgCommitCouncilResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RevealCouncilResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRevealCouncilResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RevealCouncilResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/RevealCouncilResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RevealCouncilResponse(ctx, req.(*MsgRevealCouncilResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RestartCouncil_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRestartCouncil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RestartCouncil(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/RestartCouncil",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RestartCouncil(ctx, req.(*MsgRestartCouncil))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RewokeCouncilRegistration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRewokeCouncilRegistration)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RewokeCouncilRegistration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/RewokeCouncilRegistration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RewokeCouncilRegistration(ctx, req.(*MsgRewokeCouncilRegistration))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ConfirmMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgConfirmMatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ConfirmMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/ConfirmMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ConfirmMatch(ctx, req.(*MsgConfirmMatch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetProfileCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetProfileCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetProfileCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SetProfileCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetProfileCard(ctx, req.(*MsgSetProfileCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_OpenBoosterPack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgOpenBoosterPack)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).OpenBoosterPack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/OpenBoosterPack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).OpenBoosterPack(ctx, req.(*MsgOpenBoosterPack))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_TransferBoosterPack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTransferBoosterPack)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).TransferBoosterPack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/TransferBoosterPack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).TransferBoosterPack(ctx, req.(*MsgTransferBoosterPack))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetSetStoryWriter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetSetStoryWriter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetSetStoryWriter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SetSetStoryWriter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetSetStoryWriter(ctx, req.(*MsgSetSetStoryWriter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetSetArtist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetSetArtist)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetSetArtist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SetSetArtist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetSetArtist(ctx, req.(*MsgSetSetArtist))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetUserWebsite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetUserWebsite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetUserWebsite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SetUserWebsite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetUserWebsite(ctx, req.(*MsgSetUserWebsite))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetUserBiography_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetUserBiography)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetUserBiography(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SetUserBiography",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetUserBiography(ctx, req.(*MsgSetUserBiography))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MultiVoteCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMultiVoteCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MultiVoteCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/MultiVoteCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MultiVoteCard(ctx, req.(*MsgMultiVoteCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_OpenMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgOpenMatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).OpenMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/OpenMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).OpenMatch(ctx, req.(*MsgOpenMatch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetSetName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetSetName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetSetName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/SetSetName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetSetName(ctx, req.(*MsgSetSetName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ChangeAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgChangeAlias)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ChangeAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/ChangeAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ChangeAlias(ctx, req.(*MsgChangeAlias))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InviteEarlyAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInviteEarlyAccess)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InviteEarlyAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/InviteEarlyAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InviteEarlyAccess(ctx, req.(*MsgInviteEarlyAccess))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DisinviteEarlyAccess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDisinviteEarlyAccess)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DisinviteEarlyAccess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/DisinviteEarlyAccess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DisinviteEarlyAccess(ctx, req.(*MsgDisinviteEarlyAccess))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ConnectZealyAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgConnectZealyAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ConnectZealyAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/ConnectZealyAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ConnectZealyAccount(ctx, req.(*MsgConnectZealyAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EncounterCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEncounterCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EncounterCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/EncounterCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EncounterCreate(ctx, req.(*MsgEncounterCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EncounterDo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEncounterDo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EncounterDo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/EncounterDo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EncounterDo(ctx, req.(*MsgEncounterDo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EncounterClose_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEncounterClose)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EncounterClose(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DecentralCardGame.cardchain.cardchain.Msg/EncounterClose",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EncounterClose(ctx, req.(*MsgEncounterClose))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DecentralCardGame.cardchain.cardchain.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Createuser",
			Handler:    _Msg_Createuser_Handler,
		},
		{
			MethodName: "BuyCardScheme",
			Handler:    _Msg_BuyCardScheme_Handler,
		},
		{
			MethodName: "VoteCard",
			Handler:    _Msg_VoteCard_Handler,
		},
		{
			MethodName: "SaveCardContent",
			Handler:    _Msg_SaveCardContent_Handler,
		},
		{
			MethodName: "TransferCard",
			Handler:    _Msg_TransferCard_Handler,
		},
		{
			MethodName: "DonateToCard",
			Handler:    _Msg_DonateToCard_Handler,
		},
		{
			MethodName: "AddArtwork",
			Handler:    _Msg_AddArtwork_Handler,
		},
		{
			MethodName: "ChangeArtist",
			Handler:    _Msg_ChangeArtist_Handler,
		},
		{
			MethodName: "RegisterForCouncil",
			Handler:    _Msg_RegisterForCouncil_Handler,
		},
		{
			MethodName: "ReportMatch",
			Handler:    _Msg_ReportMatch_Handler,
		},
		{
			MethodName: "ApointMatchReporter",
			Handler:    _Msg_ApointMatchReporter_Handler,
		},
		{
			MethodName: "CreateSet",
			Handler:    _Msg_CreateSet_Handler,
		},
		{
			MethodName: "AddCardToSet",
			Handler:    _Msg_AddCardToSet_Handler,
		},
		{
			MethodName: "FinalizeSet",
			Handler:    _Msg_FinalizeSet_Handler,
		},
		{
			MethodName: "BuyBoosterPack",
			Handler:    _Msg_BuyBoosterPack_Handler,
		},
		{
			MethodName: "RemoveCardFromSet",
			Handler:    _Msg_RemoveCardFromSet_Handler,
		},
		{
			MethodName: "RemoveContributorFromSet",
			Handler:    _Msg_RemoveContributorFromSet_Handler,
		},
		{
			MethodName: "AddContributorToSet",
			Handler:    _Msg_AddContributorToSet_Handler,
		},
		{
			MethodName: "CreateSellOffer",
			Handler:    _Msg_CreateSellOffer_Handler,
		},
		{
			MethodName: "BuyCard",
			Handler:    _Msg_BuyCard_Handler,
		},
		{
			MethodName: "RemoveSellOffer",
			Handler:    _Msg_RemoveSellOffer_Handler,
		},
		{
			MethodName: "AddArtworkToSet",
			Handler:    _Msg_AddArtworkToSet_Handler,
		},
		{
			MethodName: "AddStoryToSet",
			Handler:    _Msg_AddStoryToSet_Handler,
		},
		{
			MethodName: "SetCardRarity",
			Handler:    _Msg_SetCardRarity_Handler,
		},
		{
			MethodName: "CreateCouncil",
			Handler:    _Msg_CreateCouncil_Handler,
		},
		{
			MethodName: "CommitCouncilResponse",
			Handler:    _Msg_CommitCouncilResponse_Handler,
		},
		{
			MethodName: "RevealCouncilResponse",
			Handler:    _Msg_RevealCouncilResponse_Handler,
		},
		{
			MethodName: "RestartCouncil",
			Handler:    _Msg_RestartCouncil_Handler,
		},
		{
			MethodName: "RewokeCouncilRegistration",
			Handler:    _Msg_RewokeCouncilRegistration_Handler,
		},
		{
			MethodName: "ConfirmMatch",
			Handler:    _Msg_ConfirmMatch_Handler,
		},
		{
			MethodName: "SetProfileCard",
			Handler:    _Msg_SetProfileCard_Handler,
		},
		{
			MethodName: "OpenBoosterPack",
			Handler:    _Msg_OpenBoosterPack_Handler,
		},
		{
			MethodName: "TransferBoosterPack",
			Handler:    _Msg_TransferBoosterPack_Handler,
		},
		{
			MethodName: "SetSetStoryWriter",
			Handler:    _Msg_SetSetStoryWriter_Handler,
		},
		{
			MethodName: "SetSetArtist",
			Handler:    _Msg_SetSetArtist_Handler,
		},
		{
			MethodName: "SetUserWebsite",
			Handler:    _Msg_SetUserWebsite_Handler,
		},
		{
			MethodName: "SetUserBiography",
			Handler:    _Msg_SetUserBiography_Handler,
		},
		{
			MethodName: "MultiVoteCard",
			Handler:    _Msg_MultiVoteCard_Handler,
		},
		{
			MethodName: "OpenMatch",
			Handler:    _Msg_OpenMatch_Handler,
		},
		{
			MethodName: "SetSetName",
			Handler:    _Msg_SetSetName_Handler,
		},
		{
			MethodName: "ChangeAlias",
			Handler:    _Msg_ChangeAlias_Handler,
		},
		{
			MethodName: "InviteEarlyAccess",
			Handler:    _Msg_InviteEarlyAccess_Handler,
		},
		{
			MethodName: "DisinviteEarlyAccess",
			Handler:    _Msg_DisinviteEarlyAccess_Handler,
		},
		{
			MethodName: "ConnectZealyAccount",
			Handler:    _Msg_ConnectZealyAccount_Handler,
		},
		{
			MethodName: "EncounterCreate",
			Handler:    _Msg_EncounterCreate_Handler,
		},
		{
			MethodName: "EncounterDo",
			Handler:    _Msg_EncounterDo_Handler,
		},
		{
			MethodName: "EncounterClose",
			Handler:    _Msg_EncounterClose_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cardchain/cardchain/tx.proto",
}

func (m *MsgCreateuser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateuser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateuser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Alias) > 0 {
		i -= len(m.Alias)
		copy(dAtA[i:], m.Alias)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Alias)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NewUser) > 0 {
		i -= len(m.NewUser)
		copy(dAtA[i:], m.NewUser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewUser)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateuserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateuserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateuserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBuyCardScheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCardScheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCardScheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Bid.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBuyCardSchemeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCardSchemeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCardSchemeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgVoteCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.VoteType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.VoteType))
		i--
		dAtA[i] = 0x18
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVoteCardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteCardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteCardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AirdropClaimed {
		i--
		if m.AirdropClaimed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgSaveCardContent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSaveCardContent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSaveCardContent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BalanceAnchor {
		i--
		if m.BalanceAnchor {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Artist) > 0 {
		i -= len(m.Artist)
		copy(dAtA[i:], m.Artist)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Artist)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Notes) > 0 {
		i -= len(m.Notes)
		copy(dAtA[i:], m.Notes)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Notes)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSaveCardContentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSaveCardContentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSaveCardContentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AirdropClaimed {
		i--
		if m.AirdropClaimed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransferCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x22
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransferCardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferCardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferCardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDonateToCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDonateToCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDonateToCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDonateToCardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDonateToCardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDonateToCardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddArtwork) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddArtwork) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddArtwork) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FullArt {
		i--
		if m.FullArt {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddArtworkResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddArtworkResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddArtworkResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgChangeArtist) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgChangeArtist) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgChangeArtist) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Artist) > 0 {
		i -= len(m.Artist)
		copy(dAtA[i:], m.Artist)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Artist)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardID))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgChangeArtistResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgChangeArtistResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgChangeArtistResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRegisterForCouncil) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterForCouncil) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterForCouncil) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterForCouncilResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterForCouncilResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterForCouncilResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgReportMatch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReportMatch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReportMatch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Outcome != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Outcome))
		i--
		dAtA[i] = 0x28
	}
	if len(m.PlayedCardsB) > 0 {
		dAtA3 := make([]byte, len(m.PlayedCardsB)*10)
		var j2 int
		for _, num := range m.PlayedCardsB {
			for num >= 1<<7 {
				dAtA3[j2] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j2++
			}
			dAtA3[j2] = uint8(num)
			j2++
		}
		i -= j2
		copy(dAtA[i:], dAtA3[:j2])
		i = encodeVarintTx(dAtA, i, uint64(j2))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PlayedCardsA) > 0 {
		dAtA5 := make([]byte, len(m.PlayedCardsA)*10)
		var j4 int
		for _, num := range m.PlayedCardsA {
			for num >= 1<<7 {
				dAtA5[j4] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j4++
			}
			dAtA5[j4] = uint8(num)
			j4++
		}
		i -= j4
		copy(dAtA[i:], dAtA5[:j4])
		i = encodeVarintTx(dAtA, i, uint64(j4))
		i--
		dAtA[i] = 0x1a
	}
	if m.MatchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MatchId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgReportMatchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReportMatchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReportMatchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MatchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MatchId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgApointMatchReporter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApointMatchReporter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApointMatchReporter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Reporter) > 0 {
		i -= len(m.Reporter)
		copy(dAtA[i:], m.Reporter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Reporter)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgApointMatchReporterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApointMatchReporterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApointMatchReporterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Contributors) > 0 {
		for iNdEx := len(m.Contributors) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Contributors[iNdEx])
			copy(dAtA[i:], m.Contributors[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Contributors[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.StoryWriter) > 0 {
		i -= len(m.StoryWriter)
		copy(dAtA[i:], m.StoryWriter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StoryWriter)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Artist) > 0 {
		i -= len(m.Artist)
		copy(dAtA[i:], m.Artist)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Artist)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddCardToSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddCardToSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddCardToSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x18
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddCardToSetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddCardToSetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddCardToSetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFinalizeSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinalizeSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinalizeSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFinalizeSetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinalizeSetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinalizeSetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBuyBoosterPack) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyBoosterPack) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyBoosterPack) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBuyBoosterPackResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyBoosterPackResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyBoosterPackResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AirdropClaimed {
		i--
		if m.AirdropClaimed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveCardFromSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveCardFromSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveCardFromSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x18
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveCardFromSetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveCardFromSetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveCardFromSetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveContributorFromSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveContributorFromSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveContributorFromSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveContributorFromSetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveContributorFromSetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveContributorFromSetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddContributorToSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddContributorToSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddContributorToSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddContributorToSetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddContributorToSetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddContributorToSetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSellOffer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSellOffer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSellOffer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Price.Size()
		i -= size
		if _, err := m.Price.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.Card != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Card))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSellOfferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSellOfferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSellOfferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBuyCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SellOfferId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SellOfferId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBuyCardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBuyCardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBuyCardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSellOffer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSellOffer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSellOffer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SellOfferId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SellOfferId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSellOfferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSellOfferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSellOfferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddArtworkToSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddArtworkToSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddArtworkToSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddArtworkToSetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddArtworkToSetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddArtworkToSetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddStoryToSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddStoryToSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddStoryToSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Story) > 0 {
		i -= len(m.Story)
		copy(dAtA[i:], m.Story)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Story)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddStoryToSetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddStoryToSetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddStoryToSetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetCardRarity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCardRarity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCardRarity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Rarity != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Rarity))
		i--
		dAtA[i] = 0x20
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x18
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetCardRarityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCardRarityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCardRarityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateCouncil) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCouncil) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCouncil) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateCouncilResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCouncilResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCouncilResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCommitCouncilResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCommitCouncilResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCommitCouncilResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Suggestion) > 0 {
		i -= len(m.Suggestion)
		copy(dAtA[i:], m.Suggestion)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Suggestion)))
		i--
		dAtA[i] = 0x22
	}
	if m.CouncilId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CouncilId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Response) > 0 {
		i -= len(m.Response)
		copy(dAtA[i:], m.Response)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Response)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCommitCouncilResponseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCommitCouncilResponseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCommitCouncilResponseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRevealCouncilResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevealCouncilResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevealCouncilResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CouncilId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CouncilId))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Secret) > 0 {
		i -= len(m.Secret)
		copy(dAtA[i:], m.Secret)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Secret)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Response != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Response))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRevealCouncilResponseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevealCouncilResponseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevealCouncilResponseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRestartCouncil) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRestartCouncil) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRestartCouncil) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CouncilId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CouncilId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRestartCouncilResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRestartCouncilResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRestartCouncilResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRewokeCouncilRegistration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRewokeCouncilRegistration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRewokeCouncilRegistration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRewokeCouncilRegistrationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRewokeCouncilRegistrationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRewokeCouncilRegistrationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgConfirmMatch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgConfirmMatch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgConfirmMatch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.VotedCards) > 0 {
		for iNdEx := len(m.VotedCards) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.VotedCards[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Outcome != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Outcome))
		i--
		dAtA[i] = 0x18
	}
	if m.MatchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MatchId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgConfirmMatchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgConfirmMatchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgConfirmMatchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetProfileCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetProfileCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetProfileCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetProfileCardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetProfileCardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetProfileCardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgOpenBoosterPack) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOpenBoosterPack) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOpenBoosterPack) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BoosterPackId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.BoosterPackId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgOpenBoosterPackResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOpenBoosterPackResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOpenBoosterPackResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CardIds) > 0 {
		dAtA7 := make([]byte, len(m.CardIds)*10)
		var j6 int
		for _, num := range m.CardIds {
			for num >= 1<<7 {
				dAtA7[j6] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j6++
			}
			dAtA7[j6] = uint8(num)
			j6++
		}
		i -= j6
		copy(dAtA[i:], dAtA7[:j6])
		i = encodeVarintTx(dAtA, i, uint64(j6))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransferBoosterPack) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferBoosterPack) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferBoosterPack) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x1a
	}
	if m.BoosterPackId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.BoosterPackId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransferBoosterPackResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferBoosterPackResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferBoosterPackResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetSetStoryWriter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetSetStoryWriter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetSetStoryWriter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StoryWriter) > 0 {
		i -= len(m.StoryWriter)
		copy(dAtA[i:], m.StoryWriter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StoryWriter)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetSetStoryWriterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetSetStoryWriterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetSetStoryWriterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetSetArtist) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetSetArtist) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetSetArtist) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Artist) > 0 {
		i -= len(m.Artist)
		copy(dAtA[i:], m.Artist)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Artist)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetSetArtistResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetSetArtistResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetSetArtistResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetUserWebsite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetUserWebsite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetUserWebsite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetUserWebsiteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetUserWebsiteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetUserWebsiteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetUserBiography) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetUserBiography) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetUserBiography) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Biography) > 0 {
		i -= len(m.Biography)
		copy(dAtA[i:], m.Biography)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Biography)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetUserBiographyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetUserBiographyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetUserBiographyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMultiVoteCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiVoteCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiVoteCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Votes) > 0 {
		for iNdEx := len(m.Votes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Votes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMultiVoteCardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiVoteCardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiVoteCardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgOpenMatch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOpenMatch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOpenMatch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlayerBDeck) > 0 {
		dAtA9 := make([]byte, len(m.PlayerBDeck)*10)
		var j8 int
		for _, num := range m.PlayerBDeck {
			for num >= 1<<7 {
				dAtA9[j8] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j8++
			}
			dAtA9[j8] = uint8(num)
			j8++
		}
		i -= j8
		copy(dAtA[i:], dAtA9[:j8])
		i = encodeVarintTx(dAtA, i, uint64(j8))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PlayerADeck) > 0 {
		dAtA11 := make([]byte, len(m.PlayerADeck)*10)
		var j10 int
		for _, num := range m.PlayerADeck {
			for num >= 1<<7 {
				dAtA11[j10] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j10++
			}
			dAtA11[j10] = uint8(num)
			j10++
		}
		i -= j10
		copy(dAtA[i:], dAtA11[:j10])
		i = encodeVarintTx(dAtA, i, uint64(j10))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PlayerB) > 0 {
		i -= len(m.PlayerB)
		copy(dAtA[i:], m.PlayerB)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerB)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PlayerA) > 0 {
		i -= len(m.PlayerA)
		copy(dAtA[i:], m.PlayerA)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PlayerA)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgOpenMatchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOpenMatchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOpenMatchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MatchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MatchId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetSetName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetSetName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetSetName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetSetNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetSetNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetSetNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgChangeAlias) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgChangeAlias) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgChangeAlias) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Alias) > 0 {
		i -= len(m.Alias)
		copy(dAtA[i:], m.Alias)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Alias)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgChangeAliasResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgChangeAliasResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgChangeAliasResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgInviteEarlyAccess) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInviteEarlyAccess) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInviteEarlyAccess) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInviteEarlyAccessResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInviteEarlyAccessResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInviteEarlyAccessResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDisinviteEarlyAccess) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisinviteEarlyAccess) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisinviteEarlyAccess) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDisinviteEarlyAccessResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDisinviteEarlyAccessResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDisinviteEarlyAccessResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgConnectZealyAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgConnectZealyAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgConnectZealyAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ZealyId) > 0 {
		i -= len(m.ZealyId)
		copy(dAtA[i:], m.ZealyId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ZealyId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgConnectZealyAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgConnectZealyAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgConnectZealyAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEncounterCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEncounterCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEncounterCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Parameters) > 0 {
		for k := range m.Parameters {
			v := m.Parameters[k]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = encodeVarintTx(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintTx(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintTx(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Drawlist) > 0 {
		dAtA13 := make([]byte, len(m.Drawlist)*10)
		var j12 int
		for _, num := range m.Drawlist {
			for num >= 1<<7 {
				dAtA13[j12] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j12++
			}
			dAtA13[j12] = uint8(num)
			j12++
		}
		i -= j12
		copy(dAtA[i:], dAtA13[:j12])
		i = encodeVarintTx(dAtA, i, uint64(j12))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEncounterCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEncounterCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEncounterCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEncounterDo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEncounterDo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEncounterDo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EncounterId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EncounterId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEncounterDoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEncounterDoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEncounterDoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEncounterClose) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEncounterClose) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEncounterClose) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EncounterId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EncounterId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEncounterCloseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEncounterCloseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEncounterCloseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateuser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewUser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Alias)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateuserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBuyCardScheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Bid.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgBuyCardSchemeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgVoteCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	if m.VoteType != 0 {
		n += 1 + sovTx(uint64(m.VoteType))
	}
	return n
}

func (m *MsgVoteCardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AirdropClaimed {
		n += 2
	}
	return n
}

func (m *MsgSaveCardContent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Notes)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Artist)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.BalanceAnchor {
		n += 2
	}
	return n
}

func (m *MsgSaveCardContentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AirdropClaimed {
		n += 2
	}
	return n
}

func (m *MsgTransferCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgTransferCardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDonateToCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgDonateToCardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddArtwork) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.FullArt {
		n += 2
	}
	return n
}

func (m *MsgAddArtworkResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgChangeArtist) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardID != 0 {
		n += 1 + sovTx(uint64(m.CardID))
	}
	l = len(m.Artist)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgChangeArtistResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRegisterForCouncil) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterForCouncilResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgReportMatch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MatchId != 0 {
		n += 1 + sovTx(uint64(m.MatchId))
	}
	if len(m.PlayedCardsA) > 0 {
		l = 0
		for _, e := range m.PlayedCardsA {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if len(m.PlayedCardsB) > 0 {
		l = 0
		for _, e := range m.PlayedCardsB {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if m.Outcome != 0 {
		n += 1 + sovTx(uint64(m.Outcome))
	}
	return n
}

func (m *MsgReportMatchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MatchId != 0 {
		n += 1 + sovTx(uint64(m.MatchId))
	}
	return n
}

func (m *MsgApointMatchReporter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Reporter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgApointMatchReporterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Artist)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StoryWriter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Contributors) > 0 {
		for _, s := range m.Contributors {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgCreateSetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddCardToSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgAddCardToSetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFinalizeSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	return n
}

func (m *MsgFinalizeSetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBuyBoosterPack) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	return n
}

func (m *MsgBuyBoosterPackResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AirdropClaimed {
		n += 2
	}
	return n
}

func (m *MsgRemoveCardFromSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgRemoveCardFromSetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveContributorFromSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveContributorFromSetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddContributorToSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddContributorToSetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSellOffer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Card != 0 {
		n += 1 + sovTx(uint64(m.Card))
	}
	l = m.Price.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCreateSellOfferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBuyCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SellOfferId != 0 {
		n += 1 + sovTx(uint64(m.SellOfferId))
	}
	return n
}

func (m *MsgBuyCardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveSellOffer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SellOfferId != 0 {
		n += 1 + sovTx(uint64(m.SellOfferId))
	}
	return n
}

func (m *MsgRemoveSellOfferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddArtworkToSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddArtworkToSetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddStoryToSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	l = len(m.Story)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddStoryToSetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetCardRarity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	if m.Rarity != 0 {
		n += 1 + sovTx(uint64(m.Rarity))
	}
	return n
}

func (m *MsgSetCardRarityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateCouncil) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgCreateCouncilResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCommitCouncilResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Response)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CouncilId != 0 {
		n += 1 + sovTx(uint64(m.CouncilId))
	}
	l = len(m.Suggestion)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCommitCouncilResponseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRevealCouncilResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Response != 0 {
		n += 1 + sovTx(uint64(m.Response))
	}
	l = len(m.Secret)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CouncilId != 0 {
		n += 1 + sovTx(uint64(m.CouncilId))
	}
	return n
}

func (m *MsgRevealCouncilResponseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRestartCouncil) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CouncilId != 0 {
		n += 1 + sovTx(uint64(m.CouncilId))
	}
	return n
}

func (m *MsgRestartCouncilResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRewokeCouncilRegistration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRewokeCouncilRegistrationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgConfirmMatch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MatchId != 0 {
		n += 1 + sovTx(uint64(m.MatchId))
	}
	if m.Outcome != 0 {
		n += 1 + sovTx(uint64(m.Outcome))
	}
	if len(m.VotedCards) > 0 {
		for _, e := range m.VotedCards {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgConfirmMatchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetProfileCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgSetProfileCardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgOpenBoosterPack) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.BoosterPackId != 0 {
		n += 1 + sovTx(uint64(m.BoosterPackId))
	}
	return n
}

func (m *MsgOpenBoosterPackResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.CardIds) > 0 {
		l = 0
		for _, e := range m.CardIds {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	return n
}

func (m *MsgTransferBoosterPack) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.BoosterPackId != 0 {
		n += 1 + sovTx(uint64(m.BoosterPackId))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgTransferBoosterPackResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetSetStoryWriter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	l = len(m.StoryWriter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetSetStoryWriterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetSetArtist) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	l = len(m.Artist)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetSetArtistResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetUserWebsite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetUserWebsiteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetUserBiography) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Biography)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetUserBiographyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMultiVoteCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Votes) > 0 {
		for _, e := range m.Votes {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgMultiVoteCardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgOpenMatch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerA)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PlayerB)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.PlayerADeck) > 0 {
		l = 0
		for _, e := range m.PlayerADeck {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if len(m.PlayerBDeck) > 0 {
		l = 0
		for _, e := range m.PlayerBDeck {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	return n
}

func (m *MsgOpenMatchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MatchId != 0 {
		n += 1 + sovTx(uint64(m.MatchId))
	}
	return n
}

func (m *MsgSetSetName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetSetNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgChangeAlias) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Alias)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgChangeAliasResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgInviteEarlyAccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInviteEarlyAccessResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDisinviteEarlyAccess) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDisinviteEarlyAccessResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgConnectZealyAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ZealyId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgConnectZealyAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEncounterCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Drawlist) > 0 {
		l = 0
		for _, e := range m.Drawlist {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if len(m.Parameters) > 0 {
		for k, v := range m.Parameters {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovTx(uint64(len(k))) + 1 + len(v) + sovTx(uint64(len(v)))
			n += mapEntrySize + 1 + sovTx(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *MsgEncounterCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEncounterDo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EncounterId != 0 {
		n += 1 + sovTx(uint64(m.EncounterId))
	}
	return n
}

func (m *MsgEncounterDoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEncounterClose) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EncounterId != 0 {
		n += 1 + sovTx(uint64(m.EncounterId))
	}
	return n
}

func (m *MsgEncounterCloseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateuser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateuser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateuser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewUser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewUser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateuserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateuserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateuserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCardScheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCardScheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCardScheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Bid.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCardSchemeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCardSchemeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCardSchemeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoteType", wireType)
			}
			m.VoteType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VoteType |= VoteType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteCardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteCardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteCardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AirdropClaimed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AirdropClaimed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSaveCardContent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSaveCardContent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSaveCardContent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = append(m.Content[:0], dAtA[iNdEx:postIndex]...)
			if m.Content == nil {
				m.Content = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Notes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BalanceAnchor", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BalanceAnchor = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSaveCardContentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSaveCardContentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSaveCardContentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AirdropClaimed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AirdropClaimed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferCardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferCardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferCardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDonateToCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDonateToCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDonateToCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDonateToCardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDonateToCardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDonateToCardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddArtwork) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddArtwork: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddArtwork: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = append(m.Image[:0], dAtA[iNdEx:postIndex]...)
			if m.Image == nil {
				m.Image = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FullArt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FullArt = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddArtworkResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddArtworkResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddArtworkResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgChangeArtist) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgChangeArtist: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgChangeArtist: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardID", wireType)
			}
			m.CardID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgChangeArtistResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgChangeArtistResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgChangeArtistResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterForCouncil) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterForCouncil: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterForCouncil: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterForCouncilResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterForCouncilResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterForCouncilResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReportMatch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReportMatch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReportMatch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MatchId", wireType)
			}
			m.MatchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MatchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.PlayedCardsA = append(m.PlayedCardsA, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.PlayedCardsA) == 0 {
					m.PlayedCardsA = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.PlayedCardsA = append(m.PlayedCardsA, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayedCardsA", wireType)
			}
		case 4:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.PlayedCardsB = append(m.PlayedCardsB, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.PlayedCardsB) == 0 {
					m.PlayedCardsB = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.PlayedCardsB = append(m.PlayedCardsB, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayedCardsB", wireType)
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outcome", wireType)
			}
			m.Outcome = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Outcome |= Outcome(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReportMatchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReportMatchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReportMatchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MatchId", wireType)
			}
			m.MatchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MatchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApointMatchReporter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApointMatchReporter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApointMatchReporter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reporter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reporter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApointMatchReporterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApointMatchReporterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApointMatchReporterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoryWriter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StoryWriter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contributors", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contributors = append(m.Contributors, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddCardToSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddCardToSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddCardToSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddCardToSetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddCardToSetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddCardToSetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinalizeSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinalizeSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinalizeSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinalizeSetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinalizeSetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinalizeSetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyBoosterPack) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyBoosterPack: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyBoosterPack: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyBoosterPackResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyBoosterPackResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyBoosterPackResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AirdropClaimed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AirdropClaimed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveCardFromSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveCardFromSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveCardFromSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveCardFromSetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveCardFromSetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveCardFromSetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveContributorFromSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveContributorFromSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveContributorFromSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveContributorFromSetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveContributorFromSetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveContributorFromSetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddContributorToSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddContributorToSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddContributorToSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddContributorToSetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddContributorToSetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddContributorToSetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSellOffer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSellOffer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSellOffer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Card", wireType)
			}
			m.Card = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Card |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Price.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSellOfferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSellOfferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSellOfferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellOfferId", wireType)
			}
			m.SellOfferId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SellOfferId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBuyCardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBuyCardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBuyCardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSellOffer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSellOffer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSellOffer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellOfferId", wireType)
			}
			m.SellOfferId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SellOfferId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSellOfferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSellOfferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSellOfferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddArtworkToSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddArtworkToSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddArtworkToSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = append(m.Image[:0], dAtA[iNdEx:postIndex]...)
			if m.Image == nil {
				m.Image = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddArtworkToSetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddArtworkToSetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddArtworkToSetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddStoryToSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddStoryToSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddStoryToSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Story", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Story = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddStoryToSetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddStoryToSetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddStoryToSetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetCardRarity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCardRarity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCardRarity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rarity", wireType)
			}
			m.Rarity = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rarity |= CardRarity(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetCardRarityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCardRarityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCardRarityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCouncil) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCouncil: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCouncil: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCouncilResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCouncilResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCouncilResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCommitCouncilResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCommitCouncilResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCommitCouncilResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Response", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Response = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CouncilId", wireType)
			}
			m.CouncilId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CouncilId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Suggestion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Suggestion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCommitCouncilResponseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCommitCouncilResponseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCommitCouncilResponseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevealCouncilResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevealCouncilResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevealCouncilResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Response", wireType)
			}
			m.Response = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Response |= Response(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Secret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CouncilId", wireType)
			}
			m.CouncilId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CouncilId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevealCouncilResponseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevealCouncilResponseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevealCouncilResponseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRestartCouncil) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRestartCouncil: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRestartCouncil: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CouncilId", wireType)
			}
			m.CouncilId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CouncilId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRestartCouncilResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRestartCouncilResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRestartCouncilResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRewokeCouncilRegistration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRewokeCouncilRegistration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRewokeCouncilRegistration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRewokeCouncilRegistrationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRewokeCouncilRegistrationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRewokeCouncilRegistrationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgConfirmMatch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgConfirmMatch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgConfirmMatch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MatchId", wireType)
			}
			m.MatchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MatchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outcome", wireType)
			}
			m.Outcome = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Outcome |= Outcome(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VotedCards", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VotedCards = append(m.VotedCards, &SingleVote{})
			if err := m.VotedCards[len(m.VotedCards)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgConfirmMatchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgConfirmMatchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgConfirmMatchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetProfileCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetProfileCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetProfileCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetProfileCardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetProfileCardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetProfileCardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOpenBoosterPack) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOpenBoosterPack: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOpenBoosterPack: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BoosterPackId", wireType)
			}
			m.BoosterPackId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BoosterPackId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOpenBoosterPackResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOpenBoosterPackResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOpenBoosterPackResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.CardIds = append(m.CardIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.CardIds) == 0 {
					m.CardIds = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.CardIds = append(m.CardIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field CardIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferBoosterPack) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferBoosterPack: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferBoosterPack: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BoosterPackId", wireType)
			}
			m.BoosterPackId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BoosterPackId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferBoosterPackResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferBoosterPackResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferBoosterPackResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetSetStoryWriter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetSetStoryWriter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetSetStoryWriter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoryWriter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StoryWriter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetSetStoryWriterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetSetStoryWriterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetSetStoryWriterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetSetArtist) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetSetArtist: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetSetArtist: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetSetArtistResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetSetArtistResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetSetArtistResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetUserWebsite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetUserWebsite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetUserWebsite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetUserWebsiteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetUserWebsiteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetUserWebsiteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetUserBiography) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetUserBiography: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetUserBiography: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Biography", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Biography = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetUserBiographyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetUserBiographyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetUserBiographyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiVoteCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiVoteCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiVoteCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Votes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Votes = append(m.Votes, &SingleVote{})
			if err := m.Votes[len(m.Votes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiVoteCardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiVoteCardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiVoteCardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOpenMatch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOpenMatch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOpenMatch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerA", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerA = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerB", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlayerB = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.PlayerADeck = append(m.PlayerADeck, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.PlayerADeck) == 0 {
					m.PlayerADeck = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.PlayerADeck = append(m.PlayerADeck, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerADeck", wireType)
			}
		case 5:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.PlayerBDeck = append(m.PlayerBDeck, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.PlayerBDeck) == 0 {
					m.PlayerBDeck = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.PlayerBDeck = append(m.PlayerBDeck, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayerBDeck", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOpenMatchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOpenMatchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOpenMatchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MatchId", wireType)
			}
			m.MatchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MatchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetSetName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetSetName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetSetName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetSetNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetSetNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetSetNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgChangeAlias) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgChangeAlias: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgChangeAlias: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgChangeAliasResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgChangeAliasResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgChangeAliasResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInviteEarlyAccess) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInviteEarlyAccess: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInviteEarlyAccess: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInviteEarlyAccessResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInviteEarlyAccessResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInviteEarlyAccessResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisinviteEarlyAccess) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisinviteEarlyAccess: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisinviteEarlyAccess: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDisinviteEarlyAccessResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDisinviteEarlyAccessResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDisinviteEarlyAccessResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgConnectZealyAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgConnectZealyAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgConnectZealyAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ZealyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ZealyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgConnectZealyAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgConnectZealyAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgConnectZealyAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEncounterCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEncounterCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEncounterCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Drawlist = append(m.Drawlist, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Drawlist) == 0 {
					m.Drawlist = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Drawlist = append(m.Drawlist, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Drawlist", wireType)
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parameters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Parameters == nil {
				m.Parameters = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthTx
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthTx
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthTx
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthTx
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipTx(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthTx
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Parameters[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEncounterCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEncounterCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEncounterCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEncounterDo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEncounterDo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEncounterDo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EncounterId", wireType)
			}
			m.EncounterId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EncounterId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEncounterDoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEncounterDoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEncounterDoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEncounterClose) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEncounterClose: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEncounterClose: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EncounterId", wireType)
			}
			m.EncounterId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EncounterId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEncounterCloseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEncounterCloseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEncounterCloseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
