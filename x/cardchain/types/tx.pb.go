// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cardchain/cardchain/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgUserCreate struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NewUser string `protobuf:"bytes,2,opt,name=newUser,proto3" json:"newUser,omitempty"`
	Alias   string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (m *MsgUserCreate) Reset()         { *m = MsgUserCreate{} }
func (m *MsgUserCreate) String() string { return proto.CompactTextString(m) }
func (*MsgUserCreate) ProtoMessage()    {}
func (*MsgUserCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{2}
}
func (m *MsgUserCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUserCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUserCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUserCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUserCreate.Merge(m, src)
}
func (m *MsgUserCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgUserCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUserCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUserCreate proto.InternalMessageInfo

func (m *MsgUserCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUserCreate) GetNewUser() string {
	if m != nil {
		return m.NewUser
	}
	return ""
}

func (m *MsgUserCreate) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type MsgUserCreateResponse struct {
}

func (m *MsgUserCreateResponse) Reset()         { *m = MsgUserCreateResponse{} }
func (m *MsgUserCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUserCreateResponse) ProtoMessage()    {}
func (*MsgUserCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{3}
}
func (m *MsgUserCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUserCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUserCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUserCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUserCreateResponse.Merge(m, src)
}
func (m *MsgUserCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUserCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUserCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUserCreateResponse proto.InternalMessageInfo

type MsgCardSchemeBuy struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Bid     types.Coin `protobuf:"bytes,2,opt,name=bid,proto3" json:"bid"`
}

func (m *MsgCardSchemeBuy) Reset()         { *m = MsgCardSchemeBuy{} }
func (m *MsgCardSchemeBuy) String() string { return proto.CompactTextString(m) }
func (*MsgCardSchemeBuy) ProtoMessage()    {}
func (*MsgCardSchemeBuy) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{4}
}
func (m *MsgCardSchemeBuy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardSchemeBuy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardSchemeBuy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardSchemeBuy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardSchemeBuy.Merge(m, src)
}
func (m *MsgCardSchemeBuy) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardSchemeBuy) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardSchemeBuy.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardSchemeBuy proto.InternalMessageInfo

func (m *MsgCardSchemeBuy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCardSchemeBuy) GetBid() types.Coin {
	if m != nil {
		return m.Bid
	}
	return types.Coin{}
}

type MsgCardSchemeBuyResponse struct {
	CardId uint64 `protobuf:"varint,1,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgCardSchemeBuyResponse) Reset()         { *m = MsgCardSchemeBuyResponse{} }
func (m *MsgCardSchemeBuyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCardSchemeBuyResponse) ProtoMessage()    {}
func (*MsgCardSchemeBuyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{5}
}
func (m *MsgCardSchemeBuyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardSchemeBuyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardSchemeBuyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardSchemeBuyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardSchemeBuyResponse.Merge(m, src)
}
func (m *MsgCardSchemeBuyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardSchemeBuyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardSchemeBuyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardSchemeBuyResponse proto.InternalMessageInfo

func (m *MsgCardSchemeBuyResponse) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgCardSaveContent struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId        uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Content       []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Notes         string `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	Artist        string `protobuf:"bytes,5,opt,name=artist,proto3" json:"artist,omitempty"`
	BalanceAnchor bool   `protobuf:"varint,6,opt,name=balanceAnchor,proto3" json:"balanceAnchor,omitempty"`
}

func (m *MsgCardSaveContent) Reset()         { *m = MsgCardSaveContent{} }
func (m *MsgCardSaveContent) String() string { return proto.CompactTextString(m) }
func (*MsgCardSaveContent) ProtoMessage()    {}
func (*MsgCardSaveContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{6}
}
func (m *MsgCardSaveContent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardSaveContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardSaveContent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardSaveContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardSaveContent.Merge(m, src)
}
func (m *MsgCardSaveContent) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardSaveContent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardSaveContent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardSaveContent proto.InternalMessageInfo

func (m *MsgCardSaveContent) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCardSaveContent) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgCardSaveContent) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *MsgCardSaveContent) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *MsgCardSaveContent) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

func (m *MsgCardSaveContent) GetBalanceAnchor() bool {
	if m != nil {
		return m.BalanceAnchor
	}
	return false
}

type MsgCardSaveContentResponse struct {
	AirdropClaimed bool `protobuf:"varint,1,opt,name=airdropClaimed,proto3" json:"airdropClaimed,omitempty"`
}

func (m *MsgCardSaveContentResponse) Reset()         { *m = MsgCardSaveContentResponse{} }
func (m *MsgCardSaveContentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCardSaveContentResponse) ProtoMessage()    {}
func (*MsgCardSaveContentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{7}
}
func (m *MsgCardSaveContentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardSaveContentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardSaveContentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardSaveContentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardSaveContentResponse.Merge(m, src)
}
func (m *MsgCardSaveContentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardSaveContentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardSaveContentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardSaveContentResponse proto.InternalMessageInfo

func (m *MsgCardSaveContentResponse) GetAirdropClaimed() bool {
	if m != nil {
		return m.AirdropClaimed
	}
	return false
}

type MsgCardVote struct {
	Creator string      `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Vote    *SingleVote `protobuf:"bytes,2,opt,name=vote,proto3" json:"vote,omitempty"`
}

func (m *MsgCardVote) Reset()         { *m = MsgCardVote{} }
func (m *MsgCardVote) String() string { return proto.CompactTextString(m) }
func (*MsgCardVote) ProtoMessage()    {}
func (*MsgCardVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{8}
}
func (m *MsgCardVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardVote.Merge(m, src)
}
func (m *MsgCardVote) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardVote) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardVote.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardVote proto.InternalMessageInfo

func (m *MsgCardVote) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCardVote) GetVote() *SingleVote {
	if m != nil {
		return m.Vote
	}
	return nil
}

type MsgCardVoteResponse struct {
	AirdropClaimed bool `protobuf:"varint,1,opt,name=airdropClaimed,proto3" json:"airdropClaimed,omitempty"`
}

func (m *MsgCardVoteResponse) Reset()         { *m = MsgCardVoteResponse{} }
func (m *MsgCardVoteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCardVoteResponse) ProtoMessage()    {}
func (*MsgCardVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{9}
}
func (m *MsgCardVoteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardVoteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardVoteResponse.Merge(m, src)
}
func (m *MsgCardVoteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardVoteResponse proto.InternalMessageInfo

func (m *MsgCardVoteResponse) GetAirdropClaimed() bool {
	if m != nil {
		return m.AirdropClaimed
	}
	return false
}

type MsgCardTransfer struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId   uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Receiver string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
}

func (m *MsgCardTransfer) Reset()         { *m = MsgCardTransfer{} }
func (m *MsgCardTransfer) String() string { return proto.CompactTextString(m) }
func (*MsgCardTransfer) ProtoMessage()    {}
func (*MsgCardTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{10}
}
func (m *MsgCardTransfer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardTransfer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardTransfer.Merge(m, src)
}
func (m *MsgCardTransfer) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardTransfer proto.InternalMessageInfo

func (m *MsgCardTransfer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCardTransfer) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgCardTransfer) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

type MsgCardTransferResponse struct {
}

func (m *MsgCardTransferResponse) Reset()         { *m = MsgCardTransferResponse{} }
func (m *MsgCardTransferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCardTransferResponse) ProtoMessage()    {}
func (*MsgCardTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{11}
}
func (m *MsgCardTransferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardTransferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardTransferResponse.Merge(m, src)
}
func (m *MsgCardTransferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardTransferResponse proto.InternalMessageInfo

type MsgCardDonate struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64     `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Amount  types.Coin `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount"`
}

func (m *MsgCardDonate) Reset()         { *m = MsgCardDonate{} }
func (m *MsgCardDonate) String() string { return proto.CompactTextString(m) }
func (*MsgCardDonate) ProtoMessage()    {}
func (*MsgCardDonate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{12}
}
func (m *MsgCardDonate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardDonate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardDonate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardDonate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardDonate.Merge(m, src)
}
func (m *MsgCardDonate) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardDonate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardDonate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardDonate proto.InternalMessageInfo

func (m *MsgCardDonate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCardDonate) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgCardDonate) GetAmount() types.Coin {
	if m != nil {
		return m.Amount
	}
	return types.Coin{}
}

type MsgCardDonateResponse struct {
}

func (m *MsgCardDonateResponse) Reset()         { *m = MsgCardDonateResponse{} }
func (m *MsgCardDonateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCardDonateResponse) ProtoMessage()    {}
func (*MsgCardDonateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{13}
}
func (m *MsgCardDonateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardDonateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardDonateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardDonateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardDonateResponse.Merge(m, src)
}
func (m *MsgCardDonateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardDonateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardDonateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardDonateResponse proto.InternalMessageInfo

type MsgCardArtworkAdd struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Image   []byte `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	FullArt bool   `protobuf:"varint,4,opt,name=fullArt,proto3" json:"fullArt,omitempty"`
}

func (m *MsgCardArtworkAdd) Reset()         { *m = MsgCardArtworkAdd{} }
func (m *MsgCardArtworkAdd) String() string { return proto.CompactTextString(m) }
func (*MsgCardArtworkAdd) ProtoMessage()    {}
func (*MsgCardArtworkAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{14}
}
func (m *MsgCardArtworkAdd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardArtworkAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardArtworkAdd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardArtworkAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardArtworkAdd.Merge(m, src)
}
func (m *MsgCardArtworkAdd) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardArtworkAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardArtworkAdd.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardArtworkAdd proto.InternalMessageInfo

func (m *MsgCardArtworkAdd) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCardArtworkAdd) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgCardArtworkAdd) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *MsgCardArtworkAdd) GetFullArt() bool {
	if m != nil {
		return m.FullArt
	}
	return false
}

type MsgCardArtworkAddResponse struct {
}

func (m *MsgCardArtworkAddResponse) Reset()         { *m = MsgCardArtworkAddResponse{} }
func (m *MsgCardArtworkAddResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCardArtworkAddResponse) ProtoMessage()    {}
func (*MsgCardArtworkAddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{15}
}
func (m *MsgCardArtworkAddResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardArtworkAddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardArtworkAddResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardArtworkAddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardArtworkAddResponse.Merge(m, src)
}
func (m *MsgCardArtworkAddResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardArtworkAddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardArtworkAddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardArtworkAddResponse proto.InternalMessageInfo

type MsgCardArtistChange struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Artist  string `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
}

func (m *MsgCardArtistChange) Reset()         { *m = MsgCardArtistChange{} }
func (m *MsgCardArtistChange) String() string { return proto.CompactTextString(m) }
func (*MsgCardArtistChange) ProtoMessage()    {}
func (*MsgCardArtistChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{16}
}
func (m *MsgCardArtistChange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardArtistChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardArtistChange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardArtistChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardArtistChange.Merge(m, src)
}
func (m *MsgCardArtistChange) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardArtistChange) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardArtistChange.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardArtistChange proto.InternalMessageInfo

func (m *MsgCardArtistChange) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCardArtistChange) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgCardArtistChange) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

type MsgCardArtistChangeResponse struct {
}

func (m *MsgCardArtistChangeResponse) Reset()         { *m = MsgCardArtistChangeResponse{} }
func (m *MsgCardArtistChangeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCardArtistChangeResponse) ProtoMessage()    {}
func (*MsgCardArtistChangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{17}
}
func (m *MsgCardArtistChangeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardArtistChangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardArtistChangeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardArtistChangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardArtistChangeResponse.Merge(m, src)
}
func (m *MsgCardArtistChangeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardArtistChangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardArtistChangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardArtistChangeResponse proto.InternalMessageInfo

type MsgCouncilRegister struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCouncilRegister) Reset()         { *m = MsgCouncilRegister{} }
func (m *MsgCouncilRegister) String() string { return proto.CompactTextString(m) }
func (*MsgCouncilRegister) ProtoMessage()    {}
func (*MsgCouncilRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{18}
}
func (m *MsgCouncilRegister) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCouncilRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCouncilRegister.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCouncilRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCouncilRegister.Merge(m, src)
}
func (m *MsgCouncilRegister) XXX_Size() int {
	return m.Size()
}
func (m *MsgCouncilRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCouncilRegister.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCouncilRegister proto.InternalMessageInfo

func (m *MsgCouncilRegister) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCouncilRegisterResponse struct {
}

func (m *MsgCouncilRegisterResponse) Reset()         { *m = MsgCouncilRegisterResponse{} }
func (m *MsgCouncilRegisterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCouncilRegisterResponse) ProtoMessage()    {}
func (*MsgCouncilRegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{19}
}
func (m *MsgCouncilRegisterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCouncilRegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCouncilRegisterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCouncilRegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCouncilRegisterResponse.Merge(m, src)
}
func (m *MsgCouncilRegisterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCouncilRegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCouncilRegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCouncilRegisterResponse proto.InternalMessageInfo

type MsgCouncilDeregister struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCouncilDeregister) Reset()         { *m = MsgCouncilDeregister{} }
func (m *MsgCouncilDeregister) String() string { return proto.CompactTextString(m) }
func (*MsgCouncilDeregister) ProtoMessage()    {}
func (*MsgCouncilDeregister) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{20}
}
func (m *MsgCouncilDeregister) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCouncilDeregister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCouncilDeregister.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCouncilDeregister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCouncilDeregister.Merge(m, src)
}
func (m *MsgCouncilDeregister) XXX_Size() int {
	return m.Size()
}
func (m *MsgCouncilDeregister) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCouncilDeregister.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCouncilDeregister proto.InternalMessageInfo

func (m *MsgCouncilDeregister) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCouncilDeregisterResponse struct {
}

func (m *MsgCouncilDeregisterResponse) Reset()         { *m = MsgCouncilDeregisterResponse{} }
func (m *MsgCouncilDeregisterResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCouncilDeregisterResponse) ProtoMessage()    {}
func (*MsgCouncilDeregisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{21}
}
func (m *MsgCouncilDeregisterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCouncilDeregisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCouncilDeregisterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCouncilDeregisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCouncilDeregisterResponse.Merge(m, src)
}
func (m *MsgCouncilDeregisterResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCouncilDeregisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCouncilDeregisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCouncilDeregisterResponse proto.InternalMessageInfo

type MsgMatchReport struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MatchId      uint64   `protobuf:"varint,2,opt,name=matchId,proto3" json:"matchId,omitempty"`
	PlayedCardsA []uint64 `protobuf:"varint,3,rep,packed,name=playedCardsA,proto3" json:"playedCardsA,omitempty"`
	PlayedCardsB []uint64 `protobuf:"varint,4,rep,packed,name=playedCardsB,proto3" json:"playedCardsB,omitempty"`
	Outcome      Outcome  `protobuf:"varint,5,opt,name=outcome,proto3,enum=cardchain.cardchain.Outcome" json:"outcome,omitempty"`
}

func (m *MsgMatchReport) Reset()         { *m = MsgMatchReport{} }
func (m *MsgMatchReport) String() string { return proto.CompactTextString(m) }
func (*MsgMatchReport) ProtoMessage()    {}
func (*MsgMatchReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{22}
}
func (m *MsgMatchReport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMatchReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMatchReport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMatchReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMatchReport.Merge(m, src)
}
func (m *MsgMatchReport) XXX_Size() int {
	return m.Size()
}
func (m *MsgMatchReport) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMatchReport.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMatchReport proto.InternalMessageInfo

func (m *MsgMatchReport) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMatchReport) GetMatchId() uint64 {
	if m != nil {
		return m.MatchId
	}
	return 0
}

func (m *MsgMatchReport) GetPlayedCardsA() []uint64 {
	if m != nil {
		return m.PlayedCardsA
	}
	return nil
}

func (m *MsgMatchReport) GetPlayedCardsB() []uint64 {
	if m != nil {
		return m.PlayedCardsB
	}
	return nil
}

func (m *MsgMatchReport) GetOutcome() Outcome {
	if m != nil {
		return m.Outcome
	}
	return Outcome_AWon
}

type MsgMatchReportResponse struct {
}

func (m *MsgMatchReportResponse) Reset()         { *m = MsgMatchReportResponse{} }
func (m *MsgMatchReportResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMatchReportResponse) ProtoMessage()    {}
func (*MsgMatchReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{23}
}
func (m *MsgMatchReportResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMatchReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMatchReportResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMatchReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMatchReportResponse.Merge(m, src)
}
func (m *MsgMatchReportResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMatchReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMatchReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMatchReportResponse proto.InternalMessageInfo

type MsgCouncilCreate struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgCouncilCreate) Reset()         { *m = MsgCouncilCreate{} }
func (m *MsgCouncilCreate) String() string { return proto.CompactTextString(m) }
func (*MsgCouncilCreate) ProtoMessage()    {}
func (*MsgCouncilCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{24}
}
func (m *MsgCouncilCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCouncilCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCouncilCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCouncilCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCouncilCreate.Merge(m, src)
}
func (m *MsgCouncilCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgCouncilCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCouncilCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCouncilCreate proto.InternalMessageInfo

func (m *MsgCouncilCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCouncilCreate) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgCouncilCreateResponse struct {
}

func (m *MsgCouncilCreateResponse) Reset()         { *m = MsgCouncilCreateResponse{} }
func (m *MsgCouncilCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCouncilCreateResponse) ProtoMessage()    {}
func (*MsgCouncilCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{25}
}
func (m *MsgCouncilCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCouncilCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCouncilCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCouncilCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCouncilCreateResponse.Merge(m, src)
}
func (m *MsgCouncilCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCouncilCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCouncilCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCouncilCreateResponse proto.InternalMessageInfo

type MsgMatchReporterAppoint struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Reporter string `protobuf:"bytes,2,opt,name=reporter,proto3" json:"reporter,omitempty"`
}

func (m *MsgMatchReporterAppoint) Reset()         { *m = MsgMatchReporterAppoint{} }
func (m *MsgMatchReporterAppoint) String() string { return proto.CompactTextString(m) }
func (*MsgMatchReporterAppoint) ProtoMessage()    {}
func (*MsgMatchReporterAppoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{26}
}
func (m *MsgMatchReporterAppoint) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMatchReporterAppoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMatchReporterAppoint.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMatchReporterAppoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMatchReporterAppoint.Merge(m, src)
}
func (m *MsgMatchReporterAppoint) XXX_Size() int {
	return m.Size()
}
func (m *MsgMatchReporterAppoint) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMatchReporterAppoint.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMatchReporterAppoint proto.InternalMessageInfo

func (m *MsgMatchReporterAppoint) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMatchReporterAppoint) GetReporter() string {
	if m != nil {
		return m.Reporter
	}
	return ""
}

type MsgMatchReporterAppointResponse struct {
}

func (m *MsgMatchReporterAppointResponse) Reset()         { *m = MsgMatchReporterAppointResponse{} }
func (m *MsgMatchReporterAppointResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMatchReporterAppointResponse) ProtoMessage()    {}
func (*MsgMatchReporterAppointResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{27}
}
func (m *MsgMatchReporterAppointResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMatchReporterAppointResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMatchReporterAppointResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMatchReporterAppointResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMatchReporterAppointResponse.Merge(m, src)
}
func (m *MsgMatchReporterAppointResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMatchReporterAppointResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMatchReporterAppointResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMatchReporterAppointResponse proto.InternalMessageInfo

type MsgSetCreate struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Artist       string   `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	StoryWriter  string   `protobuf:"bytes,4,opt,name=storyWriter,proto3" json:"storyWriter,omitempty"`
	Contributors []string `protobuf:"bytes,5,rep,name=contributors,proto3" json:"contributors,omitempty"`
}

func (m *MsgSetCreate) Reset()         { *m = MsgSetCreate{} }
func (m *MsgSetCreate) String() string { return proto.CompactTextString(m) }
func (*MsgSetCreate) ProtoMessage()    {}
func (*MsgSetCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{28}
}
func (m *MsgSetCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCreate.Merge(m, src)
}
func (m *MsgSetCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCreate proto.InternalMessageInfo

func (m *MsgSetCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetCreate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgSetCreate) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

func (m *MsgSetCreate) GetStoryWriter() string {
	if m != nil {
		return m.StoryWriter
	}
	return ""
}

func (m *MsgSetCreate) GetContributors() []string {
	if m != nil {
		return m.Contributors
	}
	return nil
}

type MsgSetCreateResponse struct {
}

func (m *MsgSetCreateResponse) Reset()         { *m = MsgSetCreateResponse{} }
func (m *MsgSetCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetCreateResponse) ProtoMessage()    {}
func (*MsgSetCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{29}
}
func (m *MsgSetCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCreateResponse.Merge(m, src)
}
func (m *MsgSetCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCreateResponse proto.InternalMessageInfo

type MsgSetCardAdd struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	CardId  uint64 `protobuf:"varint,3,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgSetCardAdd) Reset()         { *m = MsgSetCardAdd{} }
func (m *MsgSetCardAdd) String() string { return proto.CompactTextString(m) }
func (*MsgSetCardAdd) ProtoMessage()    {}
func (*MsgSetCardAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{30}
}
func (m *MsgSetCardAdd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCardAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCardAdd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCardAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCardAdd.Merge(m, src)
}
func (m *MsgSetCardAdd) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCardAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCardAdd.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCardAdd proto.InternalMessageInfo

func (m *MsgSetCardAdd) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetCardAdd) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgSetCardAdd) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgSetCardAddResponse struct {
}

func (m *MsgSetCardAddResponse) Reset()         { *m = MsgSetCardAddResponse{} }
func (m *MsgSetCardAddResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetCardAddResponse) ProtoMessage()    {}
func (*MsgSetCardAddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{31}
}
func (m *MsgSetCardAddResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCardAddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCardAddResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCardAddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCardAddResponse.Merge(m, src)
}
func (m *MsgSetCardAddResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCardAddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCardAddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCardAddResponse proto.InternalMessageInfo

type MsgSetCardRemove struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	CardId  uint64 `protobuf:"varint,3,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgSetCardRemove) Reset()         { *m = MsgSetCardRemove{} }
func (m *MsgSetCardRemove) String() string { return proto.CompactTextString(m) }
func (*MsgSetCardRemove) ProtoMessage()    {}
func (*MsgSetCardRemove) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{32}
}
func (m *MsgSetCardRemove) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCardRemove) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCardRemove.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCardRemove) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCardRemove.Merge(m, src)
}
func (m *MsgSetCardRemove) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCardRemove) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCardRemove.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCardRemove proto.InternalMessageInfo

func (m *MsgSetCardRemove) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetCardRemove) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgSetCardRemove) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgSetCardRemoveResponse struct {
}

func (m *MsgSetCardRemoveResponse) Reset()         { *m = MsgSetCardRemoveResponse{} }
func (m *MsgSetCardRemoveResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetCardRemoveResponse) ProtoMessage()    {}
func (*MsgSetCardRemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{33}
}
func (m *MsgSetCardRemoveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetCardRemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetCardRemoveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetCardRemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetCardRemoveResponse.Merge(m, src)
}
func (m *MsgSetCardRemoveResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetCardRemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetCardRemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetCardRemoveResponse proto.InternalMessageInfo

type MsgSetContributorAdd struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	User    string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *MsgSetContributorAdd) Reset()         { *m = MsgSetContributorAdd{} }
func (m *MsgSetContributorAdd) String() string { return proto.CompactTextString(m) }
func (*MsgSetContributorAdd) ProtoMessage()    {}
func (*MsgSetContributorAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{34}
}
func (m *MsgSetContributorAdd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetContributorAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetContributorAdd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetContributorAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetContributorAdd.Merge(m, src)
}
func (m *MsgSetContributorAdd) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetContributorAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetContributorAdd.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetContributorAdd proto.InternalMessageInfo

func (m *MsgSetContributorAdd) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetContributorAdd) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgSetContributorAdd) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type MsgSetContributorAddResponse struct {
}

func (m *MsgSetContributorAddResponse) Reset()         { *m = MsgSetContributorAddResponse{} }
func (m *MsgSetContributorAddResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetContributorAddResponse) ProtoMessage()    {}
func (*MsgSetContributorAddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{35}
}
func (m *MsgSetContributorAddResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetContributorAddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetContributorAddResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetContributorAddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetContributorAddResponse.Merge(m, src)
}
func (m *MsgSetContributorAddResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetContributorAddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetContributorAddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetContributorAddResponse proto.InternalMessageInfo

type MsgSetContributorRemove struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	User    string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *MsgSetContributorRemove) Reset()         { *m = MsgSetContributorRemove{} }
func (m *MsgSetContributorRemove) String() string { return proto.CompactTextString(m) }
func (*MsgSetContributorRemove) ProtoMessage()    {}
func (*MsgSetContributorRemove) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{36}
}
func (m *MsgSetContributorRemove) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetContributorRemove) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetContributorRemove.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetContributorRemove) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetContributorRemove.Merge(m, src)
}
func (m *MsgSetContributorRemove) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetContributorRemove) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetContributorRemove.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetContributorRemove proto.InternalMessageInfo

func (m *MsgSetContributorRemove) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetContributorRemove) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgSetContributorRemove) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type MsgSetContributorRemoveResponse struct {
}

func (m *MsgSetContributorRemoveResponse) Reset()         { *m = MsgSetContributorRemoveResponse{} }
func (m *MsgSetContributorRemoveResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetContributorRemoveResponse) ProtoMessage()    {}
func (*MsgSetContributorRemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{37}
}
func (m *MsgSetContributorRemoveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetContributorRemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetContributorRemoveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetContributorRemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetContributorRemoveResponse.Merge(m, src)
}
func (m *MsgSetContributorRemoveResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetContributorRemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetContributorRemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetContributorRemoveResponse proto.InternalMessageInfo

type MsgSetFinalize struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
}

func (m *MsgSetFinalize) Reset()         { *m = MsgSetFinalize{} }
func (m *MsgSetFinalize) String() string { return proto.CompactTextString(m) }
func (*MsgSetFinalize) ProtoMessage()    {}
func (*MsgSetFinalize) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{38}
}
func (m *MsgSetFinalize) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetFinalize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetFinalize.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetFinalize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetFinalize.Merge(m, src)
}
func (m *MsgSetFinalize) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetFinalize) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetFinalize.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetFinalize proto.InternalMessageInfo

func (m *MsgSetFinalize) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetFinalize) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

type MsgSetFinalizeResponse struct {
}

func (m *MsgSetFinalizeResponse) Reset()         { *m = MsgSetFinalizeResponse{} }
func (m *MsgSetFinalizeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetFinalizeResponse) ProtoMessage()    {}
func (*MsgSetFinalizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{39}
}
func (m *MsgSetFinalizeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetFinalizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetFinalizeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetFinalizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetFinalizeResponse.Merge(m, src)
}
func (m *MsgSetFinalizeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetFinalizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetFinalizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetFinalizeResponse proto.InternalMessageInfo

type MsgSetArtworkAdd struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	Image   []byte `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
}

func (m *MsgSetArtworkAdd) Reset()         { *m = MsgSetArtworkAdd{} }
func (m *MsgSetArtworkAdd) String() string { return proto.CompactTextString(m) }
func (*MsgSetArtworkAdd) ProtoMessage()    {}
func (*MsgSetArtworkAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{40}
}
func (m *MsgSetArtworkAdd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetArtworkAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetArtworkAdd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetArtworkAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetArtworkAdd.Merge(m, src)
}
func (m *MsgSetArtworkAdd) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetArtworkAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetArtworkAdd.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetArtworkAdd proto.InternalMessageInfo

func (m *MsgSetArtworkAdd) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetArtworkAdd) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgSetArtworkAdd) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

type MsgSetArtworkAddResponse struct {
}

func (m *MsgSetArtworkAddResponse) Reset()         { *m = MsgSetArtworkAddResponse{} }
func (m *MsgSetArtworkAddResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetArtworkAddResponse) ProtoMessage()    {}
func (*MsgSetArtworkAddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{41}
}
func (m *MsgSetArtworkAddResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetArtworkAddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetArtworkAddResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetArtworkAddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetArtworkAddResponse.Merge(m, src)
}
func (m *MsgSetArtworkAddResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetArtworkAddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetArtworkAddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetArtworkAddResponse proto.InternalMessageInfo

type MsgSetStoryAdd struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
	Story   string `protobuf:"bytes,3,opt,name=story,proto3" json:"story,omitempty"`
}

func (m *MsgSetStoryAdd) Reset()         { *m = MsgSetStoryAdd{} }
func (m *MsgSetStoryAdd) String() string { return proto.CompactTextString(m) }
func (*MsgSetStoryAdd) ProtoMessage()    {}
func (*MsgSetStoryAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{42}
}
func (m *MsgSetStoryAdd) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetStoryAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetStoryAdd.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetStoryAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetStoryAdd.Merge(m, src)
}
func (m *MsgSetStoryAdd) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetStoryAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetStoryAdd.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetStoryAdd proto.InternalMessageInfo

func (m *MsgSetStoryAdd) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetStoryAdd) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *MsgSetStoryAdd) GetStory() string {
	if m != nil {
		return m.Story
	}
	return ""
}

type MsgSetStoryAddResponse struct {
}

func (m *MsgSetStoryAddResponse) Reset()         { *m = MsgSetStoryAddResponse{} }
func (m *MsgSetStoryAddResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetStoryAddResponse) ProtoMessage()    {}
func (*MsgSetStoryAddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{43}
}
func (m *MsgSetStoryAddResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetStoryAddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetStoryAddResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetStoryAddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetStoryAddResponse.Merge(m, src)
}
func (m *MsgSetStoryAddResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetStoryAddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetStoryAddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetStoryAddResponse proto.InternalMessageInfo

type MsgBoosterPackBuy struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SetId   uint64 `protobuf:"varint,2,opt,name=setId,proto3" json:"setId,omitempty"`
}

func (m *MsgBoosterPackBuy) Reset()         { *m = MsgBoosterPackBuy{} }
func (m *MsgBoosterPackBuy) String() string { return proto.CompactTextString(m) }
func (*MsgBoosterPackBuy) ProtoMessage()    {}
func (*MsgBoosterPackBuy) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{44}
}
func (m *MsgBoosterPackBuy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBoosterPackBuy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBoosterPackBuy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBoosterPackBuy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBoosterPackBuy.Merge(m, src)
}
func (m *MsgBoosterPackBuy) XXX_Size() int {
	return m.Size()
}
func (m *MsgBoosterPackBuy) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBoosterPackBuy.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBoosterPackBuy proto.InternalMessageInfo

func (m *MsgBoosterPackBuy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgBoosterPackBuy) GetSetId() uint64 {
	if m != nil {
		return m.SetId
	}
	return 0
}

type MsgBoosterPackBuyResponse struct {
	AirdropClaimed bool `protobuf:"varint,1,opt,name=airdropClaimed,proto3" json:"airdropClaimed,omitempty"`
}

func (m *MsgBoosterPackBuyResponse) Reset()         { *m = MsgBoosterPackBuyResponse{} }
func (m *MsgBoosterPackBuyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBoosterPackBuyResponse) ProtoMessage()    {}
func (*MsgBoosterPackBuyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{45}
}
func (m *MsgBoosterPackBuyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBoosterPackBuyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBoosterPackBuyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBoosterPackBuyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBoosterPackBuyResponse.Merge(m, src)
}
func (m *MsgBoosterPackBuyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBoosterPackBuyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBoosterPackBuyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBoosterPackBuyResponse proto.InternalMessageInfo

func (m *MsgBoosterPackBuyResponse) GetAirdropClaimed() bool {
	if m != nil {
		return m.AirdropClaimed
	}
	return false
}

type MsgSellOfferCreate struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId  uint64     `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Price   types.Coin `protobuf:"bytes,3,opt,name=price,proto3" json:"price"`
}

func (m *MsgSellOfferCreate) Reset()         { *m = MsgSellOfferCreate{} }
func (m *MsgSellOfferCreate) String() string { return proto.CompactTextString(m) }
func (*MsgSellOfferCreate) ProtoMessage()    {}
func (*MsgSellOfferCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{46}
}
func (m *MsgSellOfferCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSellOfferCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSellOfferCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSellOfferCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSellOfferCreate.Merge(m, src)
}
func (m *MsgSellOfferCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgSellOfferCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSellOfferCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSellOfferCreate proto.InternalMessageInfo

func (m *MsgSellOfferCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSellOfferCreate) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgSellOfferCreate) GetPrice() types.Coin {
	if m != nil {
		return m.Price
	}
	return types.Coin{}
}

type MsgSellOfferCreateResponse struct {
}

func (m *MsgSellOfferCreateResponse) Reset()         { *m = MsgSellOfferCreateResponse{} }
func (m *MsgSellOfferCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSellOfferCreateResponse) ProtoMessage()    {}
func (*MsgSellOfferCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{47}
}
func (m *MsgSellOfferCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSellOfferCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSellOfferCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSellOfferCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSellOfferCreateResponse.Merge(m, src)
}
func (m *MsgSellOfferCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSellOfferCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSellOfferCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSellOfferCreateResponse proto.InternalMessageInfo

type MsgSellOfferBuy struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SellOfferId uint64 `protobuf:"varint,2,opt,name=sellOfferId,proto3" json:"sellOfferId,omitempty"`
}

func (m *MsgSellOfferBuy) Reset()         { *m = MsgSellOfferBuy{} }
func (m *MsgSellOfferBuy) String() string { return proto.CompactTextString(m) }
func (*MsgSellOfferBuy) ProtoMessage()    {}
func (*MsgSellOfferBuy) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{48}
}
func (m *MsgSellOfferBuy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSellOfferBuy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSellOfferBuy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSellOfferBuy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSellOfferBuy.Merge(m, src)
}
func (m *MsgSellOfferBuy) XXX_Size() int {
	return m.Size()
}
func (m *MsgSellOfferBuy) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSellOfferBuy.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSellOfferBuy proto.InternalMessageInfo

func (m *MsgSellOfferBuy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSellOfferBuy) GetSellOfferId() uint64 {
	if m != nil {
		return m.SellOfferId
	}
	return 0
}

type MsgSellOfferBuyResponse struct {
}

func (m *MsgSellOfferBuyResponse) Reset()         { *m = MsgSellOfferBuyResponse{} }
func (m *MsgSellOfferBuyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSellOfferBuyResponse) ProtoMessage()    {}
func (*MsgSellOfferBuyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{49}
}
func (m *MsgSellOfferBuyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSellOfferBuyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSellOfferBuyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSellOfferBuyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSellOfferBuyResponse.Merge(m, src)
}
func (m *MsgSellOfferBuyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSellOfferBuyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSellOfferBuyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSellOfferBuyResponse proto.InternalMessageInfo

type MsgSellOfferRemove struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SellOfferId uint64 `protobuf:"varint,2,opt,name=sellOfferId,proto3" json:"sellOfferId,omitempty"`
}

func (m *MsgSellOfferRemove) Reset()         { *m = MsgSellOfferRemove{} }
func (m *MsgSellOfferRemove) String() string { return proto.CompactTextString(m) }
func (*MsgSellOfferRemove) ProtoMessage()    {}
func (*MsgSellOfferRemove) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{50}
}
func (m *MsgSellOfferRemove) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSellOfferRemove) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSellOfferRemove.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSellOfferRemove) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSellOfferRemove.Merge(m, src)
}
func (m *MsgSellOfferRemove) XXX_Size() int {
	return m.Size()
}
func (m *MsgSellOfferRemove) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSellOfferRemove.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSellOfferRemove proto.InternalMessageInfo

func (m *MsgSellOfferRemove) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSellOfferRemove) GetSellOfferId() uint64 {
	if m != nil {
		return m.SellOfferId
	}
	return 0
}

type MsgSellOfferRemoveResponse struct {
}

func (m *MsgSellOfferRemoveResponse) Reset()         { *m = MsgSellOfferRemoveResponse{} }
func (m *MsgSellOfferRemoveResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSellOfferRemoveResponse) ProtoMessage()    {}
func (*MsgSellOfferRemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{51}
}
func (m *MsgSellOfferRemoveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSellOfferRemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSellOfferRemoveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSellOfferRemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSellOfferRemoveResponse.Merge(m, src)
}
func (m *MsgSellOfferRemoveResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSellOfferRemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSellOfferRemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSellOfferRemoveResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "cardchain.cardchain.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "cardchain.cardchain.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgUserCreate)(nil), "cardchain.cardchain.MsgUserCreate")
	proto.RegisterType((*MsgUserCreateResponse)(nil), "cardchain.cardchain.MsgUserCreateResponse")
	proto.RegisterType((*MsgCardSchemeBuy)(nil), "cardchain.cardchain.MsgCardSchemeBuy")
	proto.RegisterType((*MsgCardSchemeBuyResponse)(nil), "cardchain.cardchain.MsgCardSchemeBuyResponse")
	proto.RegisterType((*MsgCardSaveContent)(nil), "cardchain.cardchain.MsgCardSaveContent")
	proto.RegisterType((*MsgCardSaveContentResponse)(nil), "cardchain.cardchain.MsgCardSaveContentResponse")
	proto.RegisterType((*MsgCardVote)(nil), "cardchain.cardchain.MsgCardVote")
	proto.RegisterType((*MsgCardVoteResponse)(nil), "cardchain.cardchain.MsgCardVoteResponse")
	proto.RegisterType((*MsgCardTransfer)(nil), "cardchain.cardchain.MsgCardTransfer")
	proto.RegisterType((*MsgCardTransferResponse)(nil), "cardchain.cardchain.MsgCardTransferResponse")
	proto.RegisterType((*MsgCardDonate)(nil), "cardchain.cardchain.MsgCardDonate")
	proto.RegisterType((*MsgCardDonateResponse)(nil), "cardchain.cardchain.MsgCardDonateResponse")
	proto.RegisterType((*MsgCardArtworkAdd)(nil), "cardchain.cardchain.MsgCardArtworkAdd")
	proto.RegisterType((*MsgCardArtworkAddResponse)(nil), "cardchain.cardchain.MsgCardArtworkAddResponse")
	proto.RegisterType((*MsgCardArtistChange)(nil), "cardchain.cardchain.MsgCardArtistChange")
	proto.RegisterType((*MsgCardArtistChangeResponse)(nil), "cardchain.cardchain.MsgCardArtistChangeResponse")
	proto.RegisterType((*MsgCouncilRegister)(nil), "cardchain.cardchain.MsgCouncilRegister")
	proto.RegisterType((*MsgCouncilRegisterResponse)(nil), "cardchain.cardchain.MsgCouncilRegisterResponse")
	proto.RegisterType((*MsgCouncilDeregister)(nil), "cardchain.cardchain.MsgCouncilDeregister")
	proto.RegisterType((*MsgCouncilDeregisterResponse)(nil), "cardchain.cardchain.MsgCouncilDeregisterResponse")
	proto.RegisterType((*MsgMatchReport)(nil), "cardchain.cardchain.MsgMatchReport")
	proto.RegisterType((*MsgMatchReportResponse)(nil), "cardchain.cardchain.MsgMatchReportResponse")
	proto.RegisterType((*MsgCouncilCreate)(nil), "cardchain.cardchain.MsgCouncilCreate")
	proto.RegisterType((*MsgCouncilCreateResponse)(nil), "cardchain.cardchain.MsgCouncilCreateResponse")
	proto.RegisterType((*MsgMatchReporterAppoint)(nil), "cardchain.cardchain.MsgMatchReporterAppoint")
	proto.RegisterType((*MsgMatchReporterAppointResponse)(nil), "cardchain.cardchain.MsgMatchReporterAppointResponse")
	proto.RegisterType((*MsgSetCreate)(nil), "cardchain.cardchain.MsgSetCreate")
	proto.RegisterType((*MsgSetCreateResponse)(nil), "cardchain.cardchain.MsgSetCreateResponse")
	proto.RegisterType((*MsgSetCardAdd)(nil), "cardchain.cardchain.MsgSetCardAdd")
	proto.RegisterType((*MsgSetCardAddResponse)(nil), "cardchain.cardchain.MsgSetCardAddResponse")
	proto.RegisterType((*MsgSetCardRemove)(nil), "cardchain.cardchain.MsgSetCardRemove")
	proto.RegisterType((*MsgSetCardRemoveResponse)(nil), "cardchain.cardchain.MsgSetCardRemoveResponse")
	proto.RegisterType((*MsgSetContributorAdd)(nil), "cardchain.cardchain.MsgSetContributorAdd")
	proto.RegisterType((*MsgSetContributorAddResponse)(nil), "cardchain.cardchain.MsgSetContributorAddResponse")
	proto.RegisterType((*MsgSetContributorRemove)(nil), "cardchain.cardchain.MsgSetContributorRemove")
	proto.RegisterType((*MsgSetContributorRemoveResponse)(nil), "cardchain.cardchain.MsgSetContributorRemoveResponse")
	proto.RegisterType((*MsgSetFinalize)(nil), "cardchain.cardchain.MsgSetFinalize")
	proto.RegisterType((*MsgSetFinalizeResponse)(nil), "cardchain.cardchain.MsgSetFinalizeResponse")
	proto.RegisterType((*MsgSetArtworkAdd)(nil), "cardchain.cardchain.MsgSetArtworkAdd")
	proto.RegisterType((*MsgSetArtworkAddResponse)(nil), "cardchain.cardchain.MsgSetArtworkAddResponse")
	proto.RegisterType((*MsgSetStoryAdd)(nil), "cardchain.cardchain.MsgSetStoryAdd")
	proto.RegisterType((*MsgSetStoryAddResponse)(nil), "cardchain.cardchain.MsgSetStoryAddResponse")
	proto.RegisterType((*MsgBoosterPackBuy)(nil), "cardchain.cardchain.MsgBoosterPackBuy")
	proto.RegisterType((*MsgBoosterPackBuyResponse)(nil), "cardchain.cardchain.MsgBoosterPackBuyResponse")
	proto.RegisterType((*MsgSellOfferCreate)(nil), "cardchain.cardchain.MsgSellOfferCreate")
	proto.RegisterType((*MsgSellOfferCreateResponse)(nil), "cardchain.cardchain.MsgSellOfferCreateResponse")
	proto.RegisterType((*MsgSellOfferBuy)(nil), "cardchain.cardchain.MsgSellOfferBuy")
	proto.RegisterType((*MsgSellOfferBuyResponse)(nil), "cardchain.cardchain.MsgSellOfferBuyResponse")
	proto.RegisterType((*MsgSellOfferRemove)(nil), "cardchain.cardchain.MsgSellOfferRemove")
	proto.RegisterType((*MsgSellOfferRemoveResponse)(nil), "cardchain.cardchain.MsgSellOfferRemoveResponse")
}

func init() { proto.RegisterFile("cardchain/cardchain/tx.proto", fileDescriptor_3b4a3aba0ac94bc8) }

var fileDescriptor_3b4a3aba0ac94bc8 = []byte{
	// 1679 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0xcf, 0x73, 0xd3, 0xc6,
	0x17, 0x8f, 0xb0, 0x13, 0x92, 0x4d, 0x08, 0x20, 0x02, 0x38, 0x22, 0x5f, 0xc7, 0x98, 0x04, 0x42,
	0xbe, 0x89, 0xdd, 0x04, 0x4a, 0x19, 0xa6, 0x65, 0x26, 0x4e, 0xa6, 0x9d, 0x1e, 0x52, 0xa8, 0xd2,
	0xd2, 0xe9, 0x4f, 0x66, 0x2d, 0x6f, 0x64, 0x35, 0x96, 0xd6, 0x5d, 0xad, 0x0d, 0xe1, 0xd4, 0x69,
	0x2f, 0x9d, 0xf6, 0xd2, 0x73, 0xff, 0x02, 0x8e, 0x39, 0xf4, 0x2f, 0x68, 0x2f, 0x1c, 0x19, 0x4e,
	0x3d, 0x75, 0x3a, 0x70, 0xc8, 0xbf, 0xd1, 0xd9, 0x5d, 0x69, 0xf5, 0xc3, 0x92, 0x2c, 0x67, 0xa6,
	0x97, 0x44, 0xbb, 0xfb, 0xd9, 0xf7, 0x3e, 0xef, 0xed, 0xdb, 0x7d, 0xef, 0x8d, 0xc1, 0x82, 0x01,
	0x49, 0xcb, 0x68, 0x43, 0xcb, 0xa9, 0x07, 0x5f, 0xf4, 0x69, 0xad, 0x4b, 0x30, 0xc5, 0xea, 0x05,
	0x39, 0x57, 0x93, 0x5f, 0xda, 0x79, 0x68, 0x5b, 0x0e, 0xae, 0xf3, 0xbf, 0x02, 0xa7, 0x5d, 0x36,
	0xb0, 0x6b, 0x63, 0xb7, 0x6e, 0xbb, 0x66, 0xbd, 0xbf, 0xc1, 0xfe, 0x79, 0x0b, 0xf3, 0x62, 0xe1,
	0x31, 0x1f, 0xd5, 0xc5, 0xc0, 0x5b, 0x9a, 0x33, 0xb1, 0x89, 0xc5, 0x3c, 0xfb, 0xf2, 0x66, 0x2b,
	0x49, 0x7c, 0xba, 0x90, 0x40, 0xdb, 0xdf, 0x57, 0xf6, 0x74, 0x35, 0xa1, 0x8b, 0xea, 0xfd, 0x8d,
	0x26, 0xa2, 0x70, 0xa3, 0x6e, 0x60, 0xcb, 0xc9, 0x92, 0xd0, 0xc7, 0xd4, 0x72, 0x7c, 0x52, 0x8b,
	0x49, 0x08, 0x1b, 0x52, 0xa3, 0x2d, 0x00, 0xd5, 0x3f, 0x15, 0x70, 0x76, 0xd7, 0x35, 0x3f, 0xed,
	0xb6, 0x20, 0x45, 0x0f, 0xb9, 0x72, 0xf5, 0x0e, 0x98, 0x82, 0x3d, 0xda, 0xc6, 0xc4, 0xa2, 0x87,
	0x25, 0xa5, 0xa2, 0xac, 0x4c, 0x35, 0x4a, 0xaf, 0x7e, 0x5f, 0x9f, 0xf3, 0x6c, 0xda, 0x6a, 0xb5,
	0x08, 0x72, 0xdd, 0x3d, 0x4a, 0x2c, 0xc7, 0xd4, 0x03, 0xa8, 0x7a, 0x1f, 0x4c, 0x08, 0xfa, 0xa5,
	0x53, 0x15, 0x65, 0x65, 0x7a, 0xf3, 0x4a, 0x2d, 0xc1, 0xa7, 0x35, 0xa1, 0xa4, 0x31, 0xf5, 0xe2,
	0xef, 0xc5, 0xb1, 0xe7, 0xc7, 0x47, 0xab, 0x8a, 0xee, 0xed, 0xba, 0x77, 0xf7, 0x87, 0xe3, 0xa3,
	0xd5, 0x40, 0xde, 0xcf, 0xc7, 0x47, 0xab, 0xcb, 0x01, 0xeb, 0xa7, 0x21, 0x0b, 0x62, 0x8c, 0xab,
	0xf3, 0xe0, 0x72, 0x6c, 0x4a, 0x47, 0x6e, 0x17, 0x3b, 0x2e, 0xaa, 0x9a, 0xe0, 0x0c, 0x5b, 0x72,
	0x11, 0xd9, 0x26, 0x08, 0x52, 0xa4, 0x96, 0xc0, 0x69, 0x83, 0x7d, 0x61, 0x22, 0x6c, 0xd3, 0xfd,
	0x21, 0x5b, 0x71, 0xd0, 0x13, 0x06, 0xe5, 0x06, 0x4c, 0xe9, 0xfe, 0x50, 0x9d, 0x03, 0xe3, 0xb0,
	0x63, 0x41, 0xb7, 0x54, 0xe0, 0xf3, 0x62, 0x70, 0x6f, 0x86, 0xf1, 0xf5, 0x77, 0x57, 0x2f, 0x83,
	0x8b, 0x11, 0x45, 0x92, 0x81, 0x0d, 0xce, 0xed, 0xba, 0xe6, 0x36, 0x24, 0xad, 0x3d, 0xa3, 0x8d,
	0x6c, 0xd4, 0xe8, 0x1d, 0x66, 0x90, 0xd8, 0x00, 0x85, 0xa6, 0xd5, 0xf2, 0x3c, 0x38, 0x5f, 0xf3,
	0x7c, 0xce, 0x22, 0xa0, 0xe6, 0x45, 0x40, 0x6d, 0x1b, 0x5b, 0x4e, 0xa3, 0xc8, 0xfc, 0xa7, 0x33,
	0x6c, 0x8c, 0xc7, 0x26, 0x28, 0xc5, 0xd5, 0xf9, 0x54, 0xd4, 0x4b, 0x60, 0x82, 0x39, 0xf1, 0xc3,
	0x16, 0xd7, 0x5a, 0xd4, 0xbd, 0x51, 0xf5, 0x0f, 0x05, 0xa8, 0xfe, 0x26, 0xd8, 0x47, 0xdb, 0xd8,
	0xa1, 0xc8, 0xa1, 0x19, 0x2c, 0x03, 0x41, 0xa7, 0xc2, 0x82, 0xf8, 0x0e, 0xb1, 0x99, 0xbb, 0x6a,
	0x46, 0xf7, 0x87, 0xcc, 0x85, 0x0e, 0xa6, 0xc8, 0x2d, 0x15, 0x85, 0x0b, 0xf9, 0x80, 0xc9, 0x81,
	0x84, 0x5a, 0x2e, 0x2d, 0x8d, 0xf3, 0x69, 0x6f, 0xa4, 0x2e, 0x81, 0x33, 0x4d, 0xd8, 0x81, 0x8e,
	0x81, 0xb6, 0x1c, 0xa3, 0x8d, 0x49, 0x69, 0xa2, 0xa2, 0xac, 0x4c, 0xea, 0xd1, 0xc9, 0x98, 0xe1,
	0x3b, 0x40, 0x1b, 0xb4, 0x41, 0x9a, 0x7e, 0x1d, 0xcc, 0x42, 0x8b, 0xb4, 0x08, 0xee, 0x6e, 0x77,
	0xa0, 0x65, 0x23, 0xe1, 0x82, 0x49, 0x3d, 0x36, 0x5b, 0xfd, 0x16, 0x4c, 0x7b, 0x52, 0x1e, 0xe1,
	0xcc, 0x68, 0xb9, 0x05, 0x8a, 0x7d, 0x4c, 0x91, 0x77, 0x52, 0x8b, 0x89, 0xb1, 0xbe, 0x67, 0x39,
	0x66, 0x07, 0x31, 0x41, 0x3a, 0x07, 0xc7, 0x18, 0xbf, 0x07, 0x2e, 0x84, 0x74, 0x8d, 0x4c, 0xd5,
	0xe6, 0x57, 0x97, 0x6d, 0xff, 0x84, 0x40, 0xc7, 0xdd, 0x47, 0xe4, 0x04, 0x27, 0xa6, 0x81, 0x49,
	0x82, 0x0c, 0x64, 0xf5, 0x11, 0xf1, 0xa2, 0x5b, 0x8e, 0x63, 0x6c, 0xc5, 0x25, 0x0b, 0xab, 0x93,
	0x21, 0xfe, 0x93, 0xc2, 0x6f, 0x19, 0x5b, 0xdb, 0xc1, 0x4e, 0xf6, 0x2d, 0x4b, 0x23, 0xf2, 0x0e,
	0x98, 0x80, 0x36, 0xee, 0x79, 0x91, 0x93, 0x23, 0xf6, 0x3d, 0x78, 0xe2, 0x35, 0x0c, 0x98, 0x48,
	0x8e, 0x3f, 0x2a, 0xe0, 0xbc, 0xb7, 0xb2, 0x45, 0xe8, 0x13, 0x4c, 0x0e, 0xb6, 0x5a, 0xad, 0x13,
	0xf0, 0x9c, 0x03, 0xe3, 0x96, 0x0d, 0x4d, 0xe4, 0x05, 0xb8, 0x18, 0x30, 0x39, 0xfb, 0xbd, 0x4e,
	0x67, 0x8b, 0x50, 0x1e, 0xe0, 0x93, 0xba, 0x3f, 0x8c, 0xd1, 0xbb, 0x02, 0xe6, 0x07, 0x48, 0x84,
	0x5e, 0x8a, 0x0b, 0xc1, 0xa2, 0xe5, 0xd2, 0xed, 0x36, 0x74, 0xcc, 0x93, 0xf8, 0x32, 0xb8, 0x56,
	0x85, 0xf0, 0xb5, 0x8a, 0x71, 0xf9, 0x1f, 0xb8, 0x92, 0xa0, 0x4e, 0xb2, 0x79, 0x57, 0xbc, 0x09,
	0xb8, 0xe7, 0x18, 0x56, 0x47, 0x47, 0xa6, 0xe5, 0xd2, 0xac, 0x08, 0x8b, 0x09, 0x5f, 0x10, 0xb7,
	0x31, 0xba, 0x5b, 0xca, 0xbe, 0x0f, 0xe6, 0x82, 0xd5, 0x1d, 0x44, 0x46, 0x95, 0x5e, 0x06, 0x0b,
	0x49, 0xfb, 0xa5, 0xfc, 0x57, 0x0a, 0x98, 0xdd, 0x75, 0xcd, 0x5d, 0x96, 0xe9, 0x74, 0xd4, 0xc5,
	0x84, 0x66, 0xbf, 0xfb, 0x3c, 0x25, 0x4a, 0x37, 0xfa, 0x43, 0xb5, 0x0a, 0x66, 0xba, 0x1d, 0x78,
	0x88, 0x5a, 0xcc, 0x49, 0xee, 0x56, 0xa9, 0x50, 0x29, 0xac, 0x14, 0xf5, 0xc8, 0x5c, 0x0c, 0xd3,
	0x28, 0x15, 0x07, 0x30, 0x0d, 0xf5, 0x0e, 0x38, 0x8d, 0x7b, 0xd4, 0xc0, 0x36, 0xe2, 0xef, 0xdc,
	0xec, 0xe6, 0x42, 0xe2, 0x73, 0xf1, 0x40, 0x60, 0x74, 0x1f, 0x1c, 0x33, 0xba, 0x04, 0x2e, 0x45,
	0x6d, 0x92, 0xe6, 0xea, 0x22, 0xc5, 0x08, 0x77, 0x0c, 0xcd, 0x73, 0x29, 0x51, 0x13, 0xd3, 0xa6,
	0x89, 0x3c, 0x12, 0x96, 0x29, 0xf5, 0x7d, 0xcd, 0x9f, 0x82, 0x10, 0x13, 0x44, 0xb6, 0xba, 0x5d,
	0x6c, 0x65, 0xe6, 0x0c, 0xfe, 0xd2, 0x08, 0xb0, 0x97, 0x5f, 0xe5, 0x38, 0xa6, 0xfa, 0x2a, 0x58,
	0x4c, 0x11, 0x2f, 0x19, 0x3c, 0x57, 0xc0, 0xcc, 0xae, 0x6b, 0xee, 0x21, 0x3a, 0xd4, 0x5c, 0x15,
	0x14, 0x1d, 0x68, 0x23, 0x4f, 0x27, 0xff, 0x4e, 0xbb, 0x20, 0x6a, 0x05, 0x4c, 0xbb, 0x14, 0x93,
	0xc3, 0xcf, 0x88, 0xc5, 0x68, 0x8a, 0x5c, 0x15, 0x9e, 0x62, 0xc7, 0xcd, 0x52, 0x1a, 0xb1, 0x9a,
	0x3d, 0x8a, 0x89, 0x5b, 0x1a, 0xaf, 0x14, 0x56, 0xa6, 0xf4, 0xc8, 0x5c, 0xcc, 0x9a, 0x4b, 0x3c,
	0xd6, 0x25, 0x53, 0x69, 0x02, 0xe2, 0x6f, 0x26, 0x9b, 0x67, 0x37, 0x30, 0xf3, 0x2d, 0x9a, 0x03,
	0xe3, 0x2e, 0xa2, 0xf2, 0xc0, 0xc4, 0x20, 0x74, 0x8e, 0x85, 0x8c, 0x73, 0x14, 0x0f, 0x62, 0xa0,
	0x46, 0xea, 0x6f, 0xf3, 0xa0, 0xf1, 0x16, 0x74, 0x64, 0xe3, 0x3e, 0xfa, 0x8f, 0x28, 0x88, 0x50,
	0x8a, 0x68, 0x0a, 0xb1, 0xf0, 0xbd, 0x13, 0x78, 0xf0, 0x24, 0xce, 0x50, 0x41, 0xb1, 0xe7, 0xca,
	0x1c, 0xc6, 0xbf, 0x13, 0xdf, 0x8c, 0x01, 0x4d, 0x92, 0xc9, 0x01, 0x0f, 0xea, 0xe8, 0xfa, 0x09,
	0xdd, 0x32, 0x9c, 0x8c, 0x08, 0xf1, 0x24, 0x65, 0x92, 0xcf, 0x47, 0xfc, 0x09, 0xdb, 0x43, 0xf4,
	0x7d, 0xcb, 0x81, 0x1d, 0xeb, 0xd9, 0xc8, 0x34, 0x12, 0x9f, 0x8f, 0x90, 0x3c, 0xa9, 0x69, 0xdf,
	0x8f, 0x84, 0x5c, 0x89, 0x31, 0xd9, 0xe4, 0xc4, 0xb4, 0x98, 0x16, 0x07, 0x09, 0xb9, 0xaf, 0xe5,
	0x5b, 0xbb, 0xc7, 0x2e, 0xdb, 0x09, 0x19, 0xf0, 0x8b, 0xea, 0x17, 0xe9, 0x7c, 0x90, 0xe6, 0x03,
	0x5f, 0x8b, 0xd4, 0xff, 0x31, 0xaf, 0x0e, 0x1a, 0x18, 0xb3, 0x3c, 0xf2, 0x10, 0x1a, 0x07, 0xd9,
	0x65, 0x7a, 0x1e, 0x87, 0x6f, 0xf3, 0x5c, 0x1f, 0x15, 0x39, 0x72, 0x91, 0xf7, 0x8b, 0x28, 0xcd,
	0xf7, 0x50, 0xa7, 0xf3, 0x60, 0x7f, 0x3f, 0x47, 0x17, 0x93, 0x56, 0x13, 0xbc, 0x0d, 0xc6, 0xbb,
	0xc4, 0x32, 0x50, 0xde, 0xf2, 0x4a, 0xa0, 0x13, 0xb3, 0x7a, 0x8c, 0x8c, 0xf4, 0xe1, 0x97, 0xbc,
	0x20, 0x95, 0xab, 0xd9, 0x1e, 0x64, 0x4f, 0xad, 0x8f, 0x94, 0x64, 0xc3, 0x53, 0x89, 0xe5, 0x67,
	0x58, 0xb8, 0xd4, 0xfb, 0x4d, 0xd4, 0x45, 0x43, 0x2f, 0xed, 0xa8, 0xaa, 0x63, 0x56, 0x47, 0xef,
	0xe9, 0xe6, 0x6f, 0x17, 0x41, 0x61, 0xd7, 0x35, 0xd5, 0x26, 0x98, 0x89, 0xb4, 0xd1, 0x4b, 0x89,
	0x39, 0x3e, 0xd6, 0xa7, 0x6a, 0x6b, 0x79, 0x50, 0x32, 0x6a, 0xbe, 0x02, 0x20, 0xd4, 0xca, 0x56,
	0x53, 0xf7, 0x4a, 0x8c, 0xb6, 0x3a, 0x1c, 0x23, 0xa5, 0x23, 0x70, 0x26, 0xda, 0xa6, 0x2e, 0xa7,
	0x6d, 0x8e, 0xc0, 0xb4, 0xf5, 0x5c, 0x30, 0xa9, 0xe6, 0x00, 0x9c, 0x8d, 0x77, 0x9a, 0x37, 0x32,
	0x25, 0x04, 0x40, 0xad, 0x9e, 0x13, 0x28, 0x95, 0x3d, 0x02, 0x93, 0xb2, 0x99, 0xab, 0x64, 0x6d,
	0x66, 0x08, 0x6d, 0x65, 0x18, 0x42, 0xca, 0x6d, 0x82, 0x99, 0x48, 0xe7, 0xb5, 0x94, 0xb5, 0xd3,
	0x47, 0xa5, 0x9f, 0x76, 0x52, 0x5b, 0xc5, 0x4e, 0x3b, 0xd4, 0x52, 0x55, 0xb3, 0xf6, 0x0a, 0x4c,
	0xfa, 0x69, 0x0f, 0x36, 0x44, 0x6a, 0x1b, 0xcc, 0xc6, 0x9a, 0xa1, 0xeb, 0x59, 0xbb, 0x03, 0x9c,
	0x56, 0xcb, 0x87, 0x93, 0x9a, 0x1c, 0x70, 0x6e, 0xa0, 0xa9, 0x59, 0x19, 0x22, 0x43, 0x22, 0xb5,
	0xb7, 0xf2, 0x22, 0x23, 0x01, 0x16, 0x6b, 0x5b, 0xd2, 0x03, 0x2c, 0x0a, 0xcc, 0x08, 0xb0, 0xe4,
	0x56, 0x46, 0xfd, 0x0e, 0x9c, 0x1f, 0xec, 0x63, 0x6e, 0x0e, 0x91, 0x12, 0x40, 0xb5, 0x8d, 0xdc,
	0x50, 0xa9, 0xf2, 0x31, 0x98, 0x0e, 0x77, 0x36, 0xd7, 0xd2, 0x24, 0x84, 0x40, 0xda, 0xff, 0x73,
	0x80, 0x22, 0x0f, 0x41, 0xa4, 0x99, 0x58, 0x1e, 0x42, 0xd2, 0x7b, 0x6c, 0xd6, 0x73, 0xc1, 0xa4,
	0x9a, 0x67, 0x60, 0x2e, 0xb1, 0x87, 0x58, 0xcb, 0xc1, 0x55, 0xa2, 0xb5, 0xdb, 0xa3, 0xa0, 0xa5,
	0xee, 0xcf, 0xc1, 0x54, 0xd0, 0x3c, 0x5c, 0x4d, 0x13, 0x21, 0x21, 0xda, 0xcd, 0xa1, 0x90, 0xf0,
	0xb5, 0x0d, 0x55, 0xf5, 0xd5, 0xac, 0x8d, 0x02, 0x93, 0x7e, 0x6d, 0x07, 0xcb, 0x76, 0x76, 0x36,
	0xd1, 0x9a, 0x7d, 0x79, 0xc8, 0x66, 0x01, 0x4b, 0x3f, 0x9b, 0xc4, 0xba, 0x9c, 0x85, 0xf5, 0x60,
	0x51, 0x9e, 0xe9, 0x84, 0x08, 0x34, 0x3d, 0xac, 0x53, 0x0b, 0x70, 0x16, 0x0e, 0x89, 0xd5, 0xf7,
	0x5a, 0x3e, 0x51, 0x9e, 0x9d, 0xb7, 0x47, 0x41, 0x87, 0xaf, 0x54, 0xb8, 0xd2, 0xbe, 0x96, 0x21,
	0xc4, 0x07, 0xa5, 0x5f, 0xa9, 0x84, 0x1a, 0xdb, 0x3b, 0xb6, 0xd0, 0x63, 0x9b, 0x75, 0x6c, 0xa1,
	0xb7, 0x76, 0x3d, 0x17, 0x2c, 0x66, 0x87, 0xac, 0xa1, 0xb3, 0xec, 0xf0, 0x41, 0x99, 0x76, 0xc4,
	0xeb, 0x64, 0x96, 0x35, 0x62, 0x45, 0x72, 0x6a, 0xd6, 0x88, 0xe2, 0xd2, 0xb3, 0x46, 0x4a, 0x85,
	0x7c, 0x00, 0xce, 0xc6, 0xab, 0xde, 0x1b, 0xe9, 0x4c, 0x23, 0xc0, 0xf4, 0x57, 0x3c, 0xa5, 0x74,
	0x65, 0xe9, 0x3c, 0x52, 0xb7, 0x2e, 0x0d, 0x15, 0xc0, 0x4c, 0x5a, 0xcb, 0x83, 0x4a, 0x34, 0xc8,
	0x0b, 0xed, 0xe1, 0x06, 0x79, 0x51, 0x5d, 0xcf, 0x09, 0xf4, 0x95, 0x69, 0xe3, 0xdf, 0x1f, 0x1f,
	0xad, 0x2a, 0x0d, 0xfd, 0xc5, 0xeb, 0xb2, 0xf2, 0xf2, 0x75, 0x59, 0xf9, 0xe7, 0x75, 0x59, 0xf9,
	0xf5, 0x4d, 0x79, 0xec, 0xe5, 0x9b, 0xf2, 0xd8, 0x5f, 0x6f, 0xca, 0x63, 0x5f, 0xdc, 0x35, 0x2d,
	0xda, 0xee, 0x35, 0x6b, 0x06, 0xb6, 0xeb, 0x3b, 0xc8, 0x40, 0x0e, 0x25, 0xb0, 0xc3, 0x1e, 0x82,
	0x0f, 0xa0, 0x8d, 0xea, 0xc9, 0xbf, 0xbb, 0xd0, 0xc3, 0x2e, 0x72, 0x9b, 0x13, 0xfc, 0xa7, 0xa3,
	0x5b, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x34, 0xf5, 0x60, 0x44, 0x51, 0x1b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	UserCreate(ctx context.Context, in *MsgUserCreate, opts ...grpc.CallOption) (*MsgUserCreateResponse, error)
	CardSchemeBuy(ctx context.Context, in *MsgCardSchemeBuy, opts ...grpc.CallOption) (*MsgCardSchemeBuyResponse, error)
	CardSaveContent(ctx context.Context, in *MsgCardSaveContent, opts ...grpc.CallOption) (*MsgCardSaveContentResponse, error)
	CardVote(ctx context.Context, in *MsgCardVote, opts ...grpc.CallOption) (*MsgCardVoteResponse, error)
	CardTransfer(ctx context.Context, in *MsgCardTransfer, opts ...grpc.CallOption) (*MsgCardTransferResponse, error)
	CardDonate(ctx context.Context, in *MsgCardDonate, opts ...grpc.CallOption) (*MsgCardDonateResponse, error)
	CardArtworkAdd(ctx context.Context, in *MsgCardArtworkAdd, opts ...grpc.CallOption) (*MsgCardArtworkAddResponse, error)
	CardArtistChange(ctx context.Context, in *MsgCardArtistChange, opts ...grpc.CallOption) (*MsgCardArtistChangeResponse, error)
	CouncilRegister(ctx context.Context, in *MsgCouncilRegister, opts ...grpc.CallOption) (*MsgCouncilRegisterResponse, error)
	CouncilDeregister(ctx context.Context, in *MsgCouncilDeregister, opts ...grpc.CallOption) (*MsgCouncilDeregisterResponse, error)
	MatchReport(ctx context.Context, in *MsgMatchReport, opts ...grpc.CallOption) (*MsgMatchReportResponse, error)
	CouncilCreate(ctx context.Context, in *MsgCouncilCreate, opts ...grpc.CallOption) (*MsgCouncilCreateResponse, error)
	MatchReporterAppoint(ctx context.Context, in *MsgMatchReporterAppoint, opts ...grpc.CallOption) (*MsgMatchReporterAppointResponse, error)
	SetCreate(ctx context.Context, in *MsgSetCreate, opts ...grpc.CallOption) (*MsgSetCreateResponse, error)
	SetCardAdd(ctx context.Context, in *MsgSetCardAdd, opts ...grpc.CallOption) (*MsgSetCardAddResponse, error)
	SetCardRemove(ctx context.Context, in *MsgSetCardRemove, opts ...grpc.CallOption) (*MsgSetCardRemoveResponse, error)
	SetContributorAdd(ctx context.Context, in *MsgSetContributorAdd, opts ...grpc.CallOption) (*MsgSetContributorAddResponse, error)
	SetContributorRemove(ctx context.Context, in *MsgSetContributorRemove, opts ...grpc.CallOption) (*MsgSetContributorRemoveResponse, error)
	SetFinalize(ctx context.Context, in *MsgSetFinalize, opts ...grpc.CallOption) (*MsgSetFinalizeResponse, error)
	SetArtworkAdd(ctx context.Context, in *MsgSetArtworkAdd, opts ...grpc.CallOption) (*MsgSetArtworkAddResponse, error)
	SetStoryAdd(ctx context.Context, in *MsgSetStoryAdd, opts ...grpc.CallOption) (*MsgSetStoryAddResponse, error)
	BoosterPackBuy(ctx context.Context, in *MsgBoosterPackBuy, opts ...grpc.CallOption) (*MsgBoosterPackBuyResponse, error)
	SellOfferCreate(ctx context.Context, in *MsgSellOfferCreate, opts ...grpc.CallOption) (*MsgSellOfferCreateResponse, error)
	SellOfferBuy(ctx context.Context, in *MsgSellOfferBuy, opts ...grpc.CallOption) (*MsgSellOfferBuyResponse, error)
	SellOfferRemove(ctx context.Context, in *MsgSellOfferRemove, opts ...grpc.CallOption) (*MsgSellOfferRemoveResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UserCreate(ctx context.Context, in *MsgUserCreate, opts ...grpc.CallOption) (*MsgUserCreateResponse, error) {
	out := new(MsgUserCreateResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/UserCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CardSchemeBuy(ctx context.Context, in *MsgCardSchemeBuy, opts ...grpc.CallOption) (*MsgCardSchemeBuyResponse, error) {
	out := new(MsgCardSchemeBuyResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/CardSchemeBuy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CardSaveContent(ctx context.Context, in *MsgCardSaveContent, opts ...grpc.CallOption) (*MsgCardSaveContentResponse, error) {
	out := new(MsgCardSaveContentResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/CardSaveContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CardVote(ctx context.Context, in *MsgCardVote, opts ...grpc.CallOption) (*MsgCardVoteResponse, error) {
	out := new(MsgCardVoteResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/CardVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CardTransfer(ctx context.Context, in *MsgCardTransfer, opts ...grpc.CallOption) (*MsgCardTransferResponse, error) {
	out := new(MsgCardTransferResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/CardTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CardDonate(ctx context.Context, in *MsgCardDonate, opts ...grpc.CallOption) (*MsgCardDonateResponse, error) {
	out := new(MsgCardDonateResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/CardDonate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CardArtworkAdd(ctx context.Context, in *MsgCardArtworkAdd, opts ...grpc.CallOption) (*MsgCardArtworkAddResponse, error) {
	out := new(MsgCardArtworkAddResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/CardArtworkAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CardArtistChange(ctx context.Context, in *MsgCardArtistChange, opts ...grpc.CallOption) (*MsgCardArtistChangeResponse, error) {
	out := new(MsgCardArtistChangeResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/CardArtistChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CouncilRegister(ctx context.Context, in *MsgCouncilRegister, opts ...grpc.CallOption) (*MsgCouncilRegisterResponse, error) {
	out := new(MsgCouncilRegisterResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/CouncilRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CouncilDeregister(ctx context.Context, in *MsgCouncilDeregister, opts ...grpc.CallOption) (*MsgCouncilDeregisterResponse, error) {
	out := new(MsgCouncilDeregisterResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/CouncilDeregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MatchReport(ctx context.Context, in *MsgMatchReport, opts ...grpc.CallOption) (*MsgMatchReportResponse, error) {
	out := new(MsgMatchReportResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/MatchReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CouncilCreate(ctx context.Context, in *MsgCouncilCreate, opts ...grpc.CallOption) (*MsgCouncilCreateResponse, error) {
	out := new(MsgCouncilCreateResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/CouncilCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MatchReporterAppoint(ctx context.Context, in *MsgMatchReporterAppoint, opts ...grpc.CallOption) (*MsgMatchReporterAppointResponse, error) {
	out := new(MsgMatchReporterAppointResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/MatchReporterAppoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetCreate(ctx context.Context, in *MsgSetCreate, opts ...grpc.CallOption) (*MsgSetCreateResponse, error) {
	out := new(MsgSetCreateResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/SetCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetCardAdd(ctx context.Context, in *MsgSetCardAdd, opts ...grpc.CallOption) (*MsgSetCardAddResponse, error) {
	out := new(MsgSetCardAddResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/SetCardAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetCardRemove(ctx context.Context, in *MsgSetCardRemove, opts ...grpc.CallOption) (*MsgSetCardRemoveResponse, error) {
	out := new(MsgSetCardRemoveResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/SetCardRemove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetContributorAdd(ctx context.Context, in *MsgSetContributorAdd, opts ...grpc.CallOption) (*MsgSetContributorAddResponse, error) {
	out := new(MsgSetContributorAddResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/SetContributorAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetContributorRemove(ctx context.Context, in *MsgSetContributorRemove, opts ...grpc.CallOption) (*MsgSetContributorRemoveResponse, error) {
	out := new(MsgSetContributorRemoveResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/SetContributorRemove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetFinalize(ctx context.Context, in *MsgSetFinalize, opts ...grpc.CallOption) (*MsgSetFinalizeResponse, error) {
	out := new(MsgSetFinalizeResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/SetFinalize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetArtworkAdd(ctx context.Context, in *MsgSetArtworkAdd, opts ...grpc.CallOption) (*MsgSetArtworkAddResponse, error) {
	out := new(MsgSetArtworkAddResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/SetArtworkAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetStoryAdd(ctx context.Context, in *MsgSetStoryAdd, opts ...grpc.CallOption) (*MsgSetStoryAddResponse, error) {
	out := new(MsgSetStoryAddResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/SetStoryAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BoosterPackBuy(ctx context.Context, in *MsgBoosterPackBuy, opts ...grpc.CallOption) (*MsgBoosterPackBuyResponse, error) {
	out := new(MsgBoosterPackBuyResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/BoosterPackBuy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SellOfferCreate(ctx context.Context, in *MsgSellOfferCreate, opts ...grpc.CallOption) (*MsgSellOfferCreateResponse, error) {
	out := new(MsgSellOfferCreateResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/SellOfferCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SellOfferBuy(ctx context.Context, in *MsgSellOfferBuy, opts ...grpc.CallOption) (*MsgSellOfferBuyResponse, error) {
	out := new(MsgSellOfferBuyResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/SellOfferBuy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SellOfferRemove(ctx context.Context, in *MsgSellOfferRemove, opts ...grpc.CallOption) (*MsgSellOfferRemoveResponse, error) {
	out := new(MsgSellOfferRemoveResponse)
	err := c.cc.Invoke(ctx, "/cardchain.cardchain.Msg/SellOfferRemove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	UserCreate(context.Context, *MsgUserCreate) (*MsgUserCreateResponse, error)
	CardSchemeBuy(context.Context, *MsgCardSchemeBuy) (*MsgCardSchemeBuyResponse, error)
	CardSaveContent(context.Context, *MsgCardSaveContent) (*MsgCardSaveContentResponse, error)
	CardVote(context.Context, *MsgCardVote) (*MsgCardVoteResponse, error)
	CardTransfer(context.Context, *MsgCardTransfer) (*MsgCardTransferResponse, error)
	CardDonate(context.Context, *MsgCardDonate) (*MsgCardDonateResponse, error)
	CardArtworkAdd(context.Context, *MsgCardArtworkAdd) (*MsgCardArtworkAddResponse, error)
	CardArtistChange(context.Context, *MsgCardArtistChange) (*MsgCardArtistChangeResponse, error)
	CouncilRegister(context.Context, *MsgCouncilRegister) (*MsgCouncilRegisterResponse, error)
	CouncilDeregister(context.Context, *MsgCouncilDeregister) (*MsgCouncilDeregisterResponse, error)
	MatchReport(context.Context, *MsgMatchReport) (*MsgMatchReportResponse, error)
	CouncilCreate(context.Context, *MsgCouncilCreate) (*MsgCouncilCreateResponse, error)
	MatchReporterAppoint(context.Context, *MsgMatchReporterAppoint) (*MsgMatchReporterAppointResponse, error)
	SetCreate(context.Context, *MsgSetCreate) (*MsgSetCreateResponse, error)
	SetCardAdd(context.Context, *MsgSetCardAdd) (*MsgSetCardAddResponse, error)
	SetCardRemove(context.Context, *MsgSetCardRemove) (*MsgSetCardRemoveResponse, error)
	SetContributorAdd(context.Context, *MsgSetContributorAdd) (*MsgSetContributorAddResponse, error)
	SetContributorRemove(context.Context, *MsgSetContributorRemove) (*MsgSetContributorRemoveResponse, error)
	SetFinalize(context.Context, *MsgSetFinalize) (*MsgSetFinalizeResponse, error)
	SetArtworkAdd(context.Context, *MsgSetArtworkAdd) (*MsgSetArtworkAddResponse, error)
	SetStoryAdd(context.Context, *MsgSetStoryAdd) (*MsgSetStoryAddResponse, error)
	BoosterPackBuy(context.Context, *MsgBoosterPackBuy) (*MsgBoosterPackBuyResponse, error)
	SellOfferCreate(context.Context, *MsgSellOfferCreate) (*MsgSellOfferCreateResponse, error)
	SellOfferBuy(context.Context, *MsgSellOfferBuy) (*MsgSellOfferBuyResponse, error)
	SellOfferRemove(context.Context, *MsgSellOfferRemove) (*MsgSellOfferRemoveResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) UserCreate(ctx context.Context, req *MsgUserCreate) (*MsgUserCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCreate not implemented")
}
func (*UnimplementedMsgServer) CardSchemeBuy(ctx context.Context, req *MsgCardSchemeBuy) (*MsgCardSchemeBuyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardSchemeBuy not implemented")
}
func (*UnimplementedMsgServer) CardSaveContent(ctx context.Context, req *MsgCardSaveContent) (*MsgCardSaveContentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardSaveContent not implemented")
}
func (*UnimplementedMsgServer) CardVote(ctx context.Context, req *MsgCardVote) (*MsgCardVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardVote not implemented")
}
func (*UnimplementedMsgServer) CardTransfer(ctx context.Context, req *MsgCardTransfer) (*MsgCardTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardTransfer not implemented")
}
func (*UnimplementedMsgServer) CardDonate(ctx context.Context, req *MsgCardDonate) (*MsgCardDonateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardDonate not implemented")
}
func (*UnimplementedMsgServer) CardArtworkAdd(ctx context.Context, req *MsgCardArtworkAdd) (*MsgCardArtworkAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardArtworkAdd not implemented")
}
func (*UnimplementedMsgServer) CardArtistChange(ctx context.Context, req *MsgCardArtistChange) (*MsgCardArtistChangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardArtistChange not implemented")
}
func (*UnimplementedMsgServer) CouncilRegister(ctx context.Context, req *MsgCouncilRegister) (*MsgCouncilRegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CouncilRegister not implemented")
}
func (*UnimplementedMsgServer) CouncilDeregister(ctx context.Context, req *MsgCouncilDeregister) (*MsgCouncilDeregisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CouncilDeregister not implemented")
}
func (*UnimplementedMsgServer) MatchReport(ctx context.Context, req *MsgMatchReport) (*MsgMatchReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MatchReport not implemented")
}
func (*UnimplementedMsgServer) CouncilCreate(ctx context.Context, req *MsgCouncilCreate) (*MsgCouncilCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CouncilCreate not implemented")
}
func (*UnimplementedMsgServer) MatchReporterAppoint(ctx context.Context, req *MsgMatchReporterAppoint) (*MsgMatchReporterAppointResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MatchReporterAppoint not implemented")
}
func (*UnimplementedMsgServer) SetCreate(ctx context.Context, req *MsgSetCreate) (*MsgSetCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCreate not implemented")
}
func (*UnimplementedMsgServer) SetCardAdd(ctx context.Context, req *MsgSetCardAdd) (*MsgSetCardAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCardAdd not implemented")
}
func (*UnimplementedMsgServer) SetCardRemove(ctx context.Context, req *MsgSetCardRemove) (*MsgSetCardRemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCardRemove not implemented")
}
func (*UnimplementedMsgServer) SetContributorAdd(ctx context.Context, req *MsgSetContributorAdd) (*MsgSetContributorAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetContributorAdd not implemented")
}
func (*UnimplementedMsgServer) SetContributorRemove(ctx context.Context, req *MsgSetContributorRemove) (*MsgSetContributorRemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetContributorRemove not implemented")
}
func (*UnimplementedMsgServer) SetFinalize(ctx context.Context, req *MsgSetFinalize) (*MsgSetFinalizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFinalize not implemented")
}
func (*UnimplementedMsgServer) SetArtworkAdd(ctx context.Context, req *MsgSetArtworkAdd) (*MsgSetArtworkAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetArtworkAdd not implemented")
}
func (*UnimplementedMsgServer) SetStoryAdd(ctx context.Context, req *MsgSetStoryAdd) (*MsgSetStoryAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetStoryAdd not implemented")
}
func (*UnimplementedMsgServer) BoosterPackBuy(ctx context.Context, req *MsgBoosterPackBuy) (*MsgBoosterPackBuyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BoosterPackBuy not implemented")
}
func (*UnimplementedMsgServer) SellOfferCreate(ctx context.Context, req *MsgSellOfferCreate) (*MsgSellOfferCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SellOfferCreate not implemented")
}
func (*UnimplementedMsgServer) SellOfferBuy(ctx context.Context, req *MsgSellOfferBuy) (*MsgSellOfferBuyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SellOfferBuy not implemented")
}
func (*UnimplementedMsgServer) SellOfferRemove(ctx context.Context, req *MsgSellOfferRemove) (*MsgSellOfferRemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SellOfferRemove not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UserCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUserCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UserCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/UserCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UserCreate(ctx, req.(*MsgUserCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CardSchemeBuy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCardSchemeBuy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CardSchemeBuy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/CardSchemeBuy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CardSchemeBuy(ctx, req.(*MsgCardSchemeBuy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CardSaveContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCardSaveContent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CardSaveContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/CardSaveContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CardSaveContent(ctx, req.(*MsgCardSaveContent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CardVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCardVote)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CardVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/CardVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CardVote(ctx, req.(*MsgCardVote))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CardTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCardTransfer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CardTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/CardTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CardTransfer(ctx, req.(*MsgCardTransfer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CardDonate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCardDonate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CardDonate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/CardDonate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CardDonate(ctx, req.(*MsgCardDonate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CardArtworkAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCardArtworkAdd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CardArtworkAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/CardArtworkAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CardArtworkAdd(ctx, req.(*MsgCardArtworkAdd))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CardArtistChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCardArtistChange)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CardArtistChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/CardArtistChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CardArtistChange(ctx, req.(*MsgCardArtistChange))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CouncilRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCouncilRegister)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CouncilRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/CouncilRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CouncilRegister(ctx, req.(*MsgCouncilRegister))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CouncilDeregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCouncilDeregister)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CouncilDeregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/CouncilDeregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CouncilDeregister(ctx, req.(*MsgCouncilDeregister))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MatchReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMatchReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MatchReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/MatchReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MatchReport(ctx, req.(*MsgMatchReport))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CouncilCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCouncilCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CouncilCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/CouncilCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CouncilCreate(ctx, req.(*MsgCouncilCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MatchReporterAppoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMatchReporterAppoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MatchReporterAppoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/MatchReporterAppoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MatchReporterAppoint(ctx, req.(*MsgMatchReporterAppoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/SetCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetCreate(ctx, req.(*MsgSetCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetCardAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetCardAdd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetCardAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/SetCardAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetCardAdd(ctx, req.(*MsgSetCardAdd))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetCardRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetCardRemove)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetCardRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/SetCardRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetCardRemove(ctx, req.(*MsgSetCardRemove))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetContributorAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetContributorAdd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetContributorAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/SetContributorAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetContributorAdd(ctx, req.(*MsgSetContributorAdd))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetContributorRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetContributorRemove)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetContributorRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/SetContributorRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetContributorRemove(ctx, req.(*MsgSetContributorRemove))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetFinalize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetFinalize)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetFinalize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/SetFinalize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetFinalize(ctx, req.(*MsgSetFinalize))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetArtworkAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetArtworkAdd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetArtworkAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/SetArtworkAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetArtworkAdd(ctx, req.(*MsgSetArtworkAdd))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetStoryAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetStoryAdd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetStoryAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/SetStoryAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetStoryAdd(ctx, req.(*MsgSetStoryAdd))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BoosterPackBuy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBoosterPackBuy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BoosterPackBuy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/BoosterPackBuy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BoosterPackBuy(ctx, req.(*MsgBoosterPackBuy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SellOfferCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSellOfferCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SellOfferCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/SellOfferCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SellOfferCreate(ctx, req.(*MsgSellOfferCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SellOfferBuy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSellOfferBuy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SellOfferBuy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/SellOfferBuy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SellOfferBuy(ctx, req.(*MsgSellOfferBuy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SellOfferRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSellOfferRemove)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SellOfferRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cardchain.cardchain.Msg/SellOfferRemove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SellOfferRemove(ctx, req.(*MsgSellOfferRemove))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cardchain.cardchain.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "UserCreate",
			Handler:    _Msg_UserCreate_Handler,
		},
		{
			MethodName: "CardSchemeBuy",
			Handler:    _Msg_CardSchemeBuy_Handler,
		},
		{
			MethodName: "CardSaveContent",
			Handler:    _Msg_CardSaveContent_Handler,
		},
		{
			MethodName: "CardVote",
			Handler:    _Msg_CardVote_Handler,
		},
		{
			MethodName: "CardTransfer",
			Handler:    _Msg_CardTransfer_Handler,
		},
		{
			MethodName: "CardDonate",
			Handler:    _Msg_CardDonate_Handler,
		},
		{
			MethodName: "CardArtworkAdd",
			Handler:    _Msg_CardArtworkAdd_Handler,
		},
		{
			MethodName: "CardArtistChange",
			Handler:    _Msg_CardArtistChange_Handler,
		},
		{
			MethodName: "CouncilRegister",
			Handler:    _Msg_CouncilRegister_Handler,
		},
		{
			MethodName: "CouncilDeregister",
			Handler:    _Msg_CouncilDeregister_Handler,
		},
		{
			MethodName: "MatchReport",
			Handler:    _Msg_MatchReport_Handler,
		},
		{
			MethodName: "CouncilCreate",
			Handler:    _Msg_CouncilCreate_Handler,
		},
		{
			MethodName: "MatchReporterAppoint",
			Handler:    _Msg_MatchReporterAppoint_Handler,
		},
		{
			MethodName: "SetCreate",
			Handler:    _Msg_SetCreate_Handler,
		},
		{
			MethodName: "SetCardAdd",
			Handler:    _Msg_SetCardAdd_Handler,
		},
		{
			MethodName: "SetCardRemove",
			Handler:    _Msg_SetCardRemove_Handler,
		},
		{
			MethodName: "SetContributorAdd",
			Handler:    _Msg_SetContributorAdd_Handler,
		},
		{
			MethodName: "SetContributorRemove",
			Handler:    _Msg_SetContributorRemove_Handler,
		},
		{
			MethodName: "SetFinalize",
			Handler:    _Msg_SetFinalize_Handler,
		},
		{
			MethodName: "SetArtworkAdd",
			Handler:    _Msg_SetArtworkAdd_Handler,
		},
		{
			MethodName: "SetStoryAdd",
			Handler:    _Msg_SetStoryAdd_Handler,
		},
		{
			MethodName: "BoosterPackBuy",
			Handler:    _Msg_BoosterPackBuy_Handler,
		},
		{
			MethodName: "SellOfferCreate",
			Handler:    _Msg_SellOfferCreate_Handler,
		},
		{
			MethodName: "SellOfferBuy",
			Handler:    _Msg_SellOfferBuy_Handler,
		},
		{
			MethodName: "SellOfferRemove",
			Handler:    _Msg_SellOfferRemove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cardchain/cardchain/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUserCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUserCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUserCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Alias) > 0 {
		i -= len(m.Alias)
		copy(dAtA[i:], m.Alias)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Alias)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NewUser) > 0 {
		i -= len(m.NewUser)
		copy(dAtA[i:], m.NewUser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewUser)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUserCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUserCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUserCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCardSchemeBuy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardSchemeBuy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardSchemeBuy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Bid.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardSchemeBuyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardSchemeBuyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardSchemeBuyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardSaveContent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardSaveContent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardSaveContent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BalanceAnchor {
		i--
		if m.BalanceAnchor {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Artist) > 0 {
		i -= len(m.Artist)
		copy(dAtA[i:], m.Artist)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Artist)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Notes) > 0 {
		i -= len(m.Notes)
		copy(dAtA[i:], m.Notes)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Notes)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardSaveContentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardSaveContentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardSaveContentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AirdropClaimed {
		i--
		if m.AirdropClaimed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardVote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardVote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Vote != nil {
		{
			size, err := m.Vote.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardVoteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardVoteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardVoteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AirdropClaimed {
		i--
		if m.AirdropClaimed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardTransfer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardTransfer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardTransfer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardTransferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardTransferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardTransferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCardDonate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardDonate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardDonate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardDonateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardDonateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardDonateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCardArtworkAdd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardArtworkAdd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardArtworkAdd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FullArt {
		i--
		if m.FullArt {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardArtworkAddResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardArtworkAddResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardArtworkAddResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCardArtistChange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardArtistChange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardArtistChange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Artist) > 0 {
		i -= len(m.Artist)
		copy(dAtA[i:], m.Artist)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Artist)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardArtistChangeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardArtistChangeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardArtistChangeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCouncilRegister) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCouncilRegister) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCouncilRegister) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCouncilRegisterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCouncilRegisterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCouncilRegisterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCouncilDeregister) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCouncilDeregister) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCouncilDeregister) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCouncilDeregisterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCouncilDeregisterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCouncilDeregisterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMatchReport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMatchReport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMatchReport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Outcome != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Outcome))
		i--
		dAtA[i] = 0x28
	}
	if len(m.PlayedCardsB) > 0 {
		dAtA6 := make([]byte, len(m.PlayedCardsB)*10)
		var j5 int
		for _, num := range m.PlayedCardsB {
			for num >= 1<<7 {
				dAtA6[j5] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j5++
			}
			dAtA6[j5] = uint8(num)
			j5++
		}
		i -= j5
		copy(dAtA[i:], dAtA6[:j5])
		i = encodeVarintTx(dAtA, i, uint64(j5))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PlayedCardsA) > 0 {
		dAtA8 := make([]byte, len(m.PlayedCardsA)*10)
		var j7 int
		for _, num := range m.PlayedCardsA {
			for num >= 1<<7 {
				dAtA8[j7] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j7++
			}
			dAtA8[j7] = uint8(num)
			j7++
		}
		i -= j7
		copy(dAtA[i:], dAtA8[:j7])
		i = encodeVarintTx(dAtA, i, uint64(j7))
		i--
		dAtA[i] = 0x1a
	}
	if m.MatchId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MatchId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMatchReportResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMatchReportResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMatchReportResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCouncilCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCouncilCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCouncilCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCouncilCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCouncilCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCouncilCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMatchReporterAppoint) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMatchReporterAppoint) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMatchReporterAppoint) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Reporter) > 0 {
		i -= len(m.Reporter)
		copy(dAtA[i:], m.Reporter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Reporter)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMatchReporterAppointResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMatchReporterAppointResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMatchReporterAppointResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Contributors) > 0 {
		for iNdEx := len(m.Contributors) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Contributors[iNdEx])
			copy(dAtA[i:], m.Contributors[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Contributors[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.StoryWriter) > 0 {
		i -= len(m.StoryWriter)
		copy(dAtA[i:], m.StoryWriter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StoryWriter)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Artist) > 0 {
		i -= len(m.Artist)
		copy(dAtA[i:], m.Artist)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Artist)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetCardAdd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCardAdd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCardAdd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x18
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetCardAddResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCardAddResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCardAddResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetCardRemove) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCardRemove) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCardRemove) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x18
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetCardRemoveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetCardRemoveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetCardRemoveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetContributorAdd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetContributorAdd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetContributorAdd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetContributorAddResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetContributorAddResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetContributorAddResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetContributorRemove) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetContributorRemove) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetContributorRemove) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetContributorRemoveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetContributorRemoveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetContributorRemoveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetFinalize) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetFinalize) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetFinalize) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetFinalizeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetFinalizeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetFinalizeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetArtworkAdd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetArtworkAdd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetArtworkAdd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetArtworkAddResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetArtworkAddResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetArtworkAddResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetStoryAdd) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetStoryAdd) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetStoryAdd) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Story) > 0 {
		i -= len(m.Story)
		copy(dAtA[i:], m.Story)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Story)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetStoryAddResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetStoryAddResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetStoryAddResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBoosterPackBuy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBoosterPackBuy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBoosterPackBuy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SetId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SetId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBoosterPackBuyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBoosterPackBuyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBoosterPackBuyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AirdropClaimed {
		i--
		if m.AirdropClaimed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgSellOfferCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSellOfferCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSellOfferCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Price.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSellOfferCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSellOfferCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSellOfferCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSellOfferBuy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSellOfferBuy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSellOfferBuy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SellOfferId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SellOfferId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSellOfferBuyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSellOfferBuyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSellOfferBuyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSellOfferRemove) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSellOfferRemove) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSellOfferRemove) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SellOfferId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SellOfferId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSellOfferRemoveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSellOfferRemoveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSellOfferRemoveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUserCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewUser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Alias)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUserCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCardSchemeBuy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Bid.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCardSchemeBuyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgCardSaveContent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Notes)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Artist)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.BalanceAnchor {
		n += 2
	}
	return n
}

func (m *MsgCardSaveContentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AirdropClaimed {
		n += 2
	}
	return n
}

func (m *MsgCardVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Vote != nil {
		l = m.Vote.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCardVoteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AirdropClaimed {
		n += 2
	}
	return n
}

func (m *MsgCardTransfer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCardTransferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCardDonate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCardDonateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCardArtworkAdd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.FullArt {
		n += 2
	}
	return n
}

func (m *MsgCardArtworkAddResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCardArtistChange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Artist)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCardArtistChangeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCouncilRegister) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCouncilRegisterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCouncilDeregister) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCouncilDeregisterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMatchReport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MatchId != 0 {
		n += 1 + sovTx(uint64(m.MatchId))
	}
	if len(m.PlayedCardsA) > 0 {
		l = 0
		for _, e := range m.PlayedCardsA {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if len(m.PlayedCardsB) > 0 {
		l = 0
		for _, e := range m.PlayedCardsB {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if m.Outcome != 0 {
		n += 1 + sovTx(uint64(m.Outcome))
	}
	return n
}

func (m *MsgMatchReportResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCouncilCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgCouncilCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMatchReporterAppoint) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Reporter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMatchReporterAppointResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Artist)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StoryWriter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Contributors) > 0 {
		for _, s := range m.Contributors {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgSetCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetCardAdd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgSetCardAddResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetCardRemove) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgSetCardRemoveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetContributorAdd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetContributorAddResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetContributorRemove) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetContributorRemoveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetFinalize) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	return n
}

func (m *MsgSetFinalizeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetArtworkAdd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetArtworkAddResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetStoryAdd) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	l = len(m.Story)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetStoryAddResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBoosterPackBuy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SetId != 0 {
		n += 1 + sovTx(uint64(m.SetId))
	}
	return n
}

func (m *MsgBoosterPackBuyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AirdropClaimed {
		n += 2
	}
	return n
}

func (m *MsgSellOfferCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = m.Price.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSellOfferCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSellOfferBuy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SellOfferId != 0 {
		n += 1 + sovTx(uint64(m.SellOfferId))
	}
	return n
}

func (m *MsgSellOfferBuyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSellOfferRemove) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SellOfferId != 0 {
		n += 1 + sovTx(uint64(m.SellOfferId))
	}
	return n
}

func (m *MsgSellOfferRemoveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUserCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUserCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUserCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewUser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewUser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUserCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUserCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUserCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardSchemeBuy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardSchemeBuy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardSchemeBuy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Bid.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardSchemeBuyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardSchemeBuyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardSchemeBuyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardSaveContent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardSaveContent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardSaveContent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = append(m.Content[:0], dAtA[iNdEx:postIndex]...)
			if m.Content == nil {
				m.Content = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Notes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BalanceAnchor", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BalanceAnchor = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardSaveContentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardSaveContentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardSaveContentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AirdropClaimed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AirdropClaimed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vote", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Vote == nil {
				m.Vote = &SingleVote{}
			}
			if err := m.Vote.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardVoteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardVoteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardVoteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AirdropClaimed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AirdropClaimed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardTransfer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardTransfer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardTransferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardTransferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardTransferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardDonate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardDonate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardDonate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardDonateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardDonateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardDonateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardArtworkAdd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardArtworkAdd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardArtworkAdd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = append(m.Image[:0], dAtA[iNdEx:postIndex]...)
			if m.Image == nil {
				m.Image = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FullArt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FullArt = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardArtworkAddResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardArtworkAddResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardArtworkAddResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardArtistChange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardArtistChange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardArtistChange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardArtistChangeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardArtistChangeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardArtistChangeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCouncilRegister) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCouncilRegister: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCouncilRegister: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCouncilRegisterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCouncilRegisterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCouncilRegisterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCouncilDeregister) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCouncilDeregister: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCouncilDeregister: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCouncilDeregisterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCouncilDeregisterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCouncilDeregisterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMatchReport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMatchReport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMatchReport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MatchId", wireType)
			}
			m.MatchId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MatchId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.PlayedCardsA = append(m.PlayedCardsA, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.PlayedCardsA) == 0 {
					m.PlayedCardsA = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.PlayedCardsA = append(m.PlayedCardsA, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayedCardsA", wireType)
			}
		case 4:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.PlayedCardsB = append(m.PlayedCardsB, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.PlayedCardsB) == 0 {
					m.PlayedCardsB = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.PlayedCardsB = append(m.PlayedCardsB, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field PlayedCardsB", wireType)
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outcome", wireType)
			}
			m.Outcome = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Outcome |= Outcome(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMatchReportResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMatchReportResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMatchReportResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCouncilCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCouncilCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCouncilCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCouncilCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCouncilCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCouncilCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMatchReporterAppoint) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMatchReporterAppoint: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMatchReporterAppoint: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reporter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reporter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMatchReporterAppointResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMatchReporterAppointResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMatchReporterAppointResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoryWriter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StoryWriter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contributors", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contributors = append(m.Contributors, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetCardAdd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCardAdd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCardAdd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetCardAddResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCardAddResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCardAddResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetCardRemove) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCardRemove: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCardRemove: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetCardRemoveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetCardRemoveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetCardRemoveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetContributorAdd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetContributorAdd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetContributorAdd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetContributorAddResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetContributorAddResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetContributorAddResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetContributorRemove) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetContributorRemove: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetContributorRemove: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetContributorRemoveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetContributorRemoveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetContributorRemoveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetFinalize) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetFinalize: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetFinalize: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetFinalizeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetFinalizeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetFinalizeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetArtworkAdd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetArtworkAdd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetArtworkAdd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = append(m.Image[:0], dAtA[iNdEx:postIndex]...)
			if m.Image == nil {
				m.Image = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetArtworkAddResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetArtworkAddResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetArtworkAddResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetStoryAdd) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetStoryAdd: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetStoryAdd: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Story", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Story = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetStoryAddResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetStoryAddResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetStoryAddResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBoosterPackBuy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBoosterPackBuy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBoosterPackBuy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SetId", wireType)
			}
			m.SetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SetId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBoosterPackBuyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBoosterPackBuyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBoosterPackBuyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AirdropClaimed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AirdropClaimed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSellOfferCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSellOfferCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSellOfferCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Price.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSellOfferCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSellOfferCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSellOfferCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSellOfferBuy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSellOfferBuy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSellOfferBuy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellOfferId", wireType)
			}
			m.SellOfferId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SellOfferId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSellOfferBuyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSellOfferBuyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSellOfferBuyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSellOfferRemove) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSellOfferRemove: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSellOfferRemove: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellOfferId", wireType)
			}
			m.SellOfferId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SellOfferId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSellOfferRemoveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSellOfferRemoveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSellOfferRemoveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
