// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cardchain/cardchain/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgUserCreate struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	NewUser string `protobuf:"bytes,2,opt,name=newUser,proto3" json:"newUser,omitempty"`
	Alias   string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (m *MsgUserCreate) Reset()         { *m = MsgUserCreate{} }
func (m *MsgUserCreate) String() string { return proto.CompactTextString(m) }
func (*MsgUserCreate) ProtoMessage()    {}
func (*MsgUserCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{0}
}
func (m *MsgUserCreate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUserCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUserCreate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUserCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUserCreate.Merge(m, src)
}
func (m *MsgUserCreate) XXX_Size() int {
	return m.Size()
}
func (m *MsgUserCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUserCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUserCreate proto.InternalMessageInfo

func (m *MsgUserCreate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUserCreate) GetNewUser() string {
	if m != nil {
		return m.NewUser
	}
	return ""
}

func (m *MsgUserCreate) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type MsgUserCreateResponse struct {
}

func (m *MsgUserCreateResponse) Reset()         { *m = MsgUserCreateResponse{} }
func (m *MsgUserCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUserCreateResponse) ProtoMessage()    {}
func (*MsgUserCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{1}
}
func (m *MsgUserCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUserCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUserCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUserCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUserCreateResponse.Merge(m, src)
}
func (m *MsgUserCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUserCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUserCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUserCreateResponse proto.InternalMessageInfo

type MsgCardSchemeBuy struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Bid     types.Coin `protobuf:"bytes,2,opt,name=bid,proto3" json:"bid"`
}

func (m *MsgCardSchemeBuy) Reset()         { *m = MsgCardSchemeBuy{} }
func (m *MsgCardSchemeBuy) String() string { return proto.CompactTextString(m) }
func (*MsgCardSchemeBuy) ProtoMessage()    {}
func (*MsgCardSchemeBuy) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{2}
}
func (m *MsgCardSchemeBuy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardSchemeBuy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardSchemeBuy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardSchemeBuy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardSchemeBuy.Merge(m, src)
}
func (m *MsgCardSchemeBuy) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardSchemeBuy) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardSchemeBuy.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardSchemeBuy proto.InternalMessageInfo

func (m *MsgCardSchemeBuy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCardSchemeBuy) GetBid() types.Coin {
	if m != nil {
		return m.Bid
	}
	return types.Coin{}
}

type MsgCardSchemeBuyResponse struct {
	CardId uint64 `protobuf:"varint,1,opt,name=cardId,proto3" json:"cardId,omitempty"`
}

func (m *MsgCardSchemeBuyResponse) Reset()         { *m = MsgCardSchemeBuyResponse{} }
func (m *MsgCardSchemeBuyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCardSchemeBuyResponse) ProtoMessage()    {}
func (*MsgCardSchemeBuyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{3}
}
func (m *MsgCardSchemeBuyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardSchemeBuyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardSchemeBuyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardSchemeBuyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardSchemeBuyResponse.Merge(m, src)
}
func (m *MsgCardSchemeBuyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardSchemeBuyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardSchemeBuyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardSchemeBuyResponse proto.InternalMessageInfo

func (m *MsgCardSchemeBuyResponse) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

type MsgCardSaveContent struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CardId        uint64 `protobuf:"varint,2,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Content       string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Notes         string `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	Artist        string `protobuf:"bytes,5,opt,name=artist,proto3" json:"artist,omitempty"`
	BalanceAnchor bool   `protobuf:"varint,6,opt,name=balanceAnchor,proto3" json:"balanceAnchor,omitempty"`
}

func (m *MsgCardSaveContent) Reset()         { *m = MsgCardSaveContent{} }
func (m *MsgCardSaveContent) String() string { return proto.CompactTextString(m) }
func (*MsgCardSaveContent) ProtoMessage()    {}
func (*MsgCardSaveContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{4}
}
func (m *MsgCardSaveContent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardSaveContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardSaveContent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardSaveContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardSaveContent.Merge(m, src)
}
func (m *MsgCardSaveContent) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardSaveContent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardSaveContent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardSaveContent proto.InternalMessageInfo

func (m *MsgCardSaveContent) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCardSaveContent) GetCardId() uint64 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *MsgCardSaveContent) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MsgCardSaveContent) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *MsgCardSaveContent) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

func (m *MsgCardSaveContent) GetBalanceAnchor() bool {
	if m != nil {
		return m.BalanceAnchor
	}
	return false
}

type MsgCardSaveContentResponse struct {
	AirdropClaimed bool `protobuf:"varint,1,opt,name=airdropClaimed,proto3" json:"airdropClaimed,omitempty"`
}

func (m *MsgCardSaveContentResponse) Reset()         { *m = MsgCardSaveContentResponse{} }
func (m *MsgCardSaveContentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCardSaveContentResponse) ProtoMessage()    {}
func (*MsgCardSaveContentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{5}
}
func (m *MsgCardSaveContentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardSaveContentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardSaveContentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardSaveContentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardSaveContentResponse.Merge(m, src)
}
func (m *MsgCardSaveContentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardSaveContentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardSaveContentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardSaveContentResponse proto.InternalMessageInfo

func (m *MsgCardSaveContentResponse) GetAirdropClaimed() bool {
	if m != nil {
		return m.AirdropClaimed
	}
	return false
}

type MsgCardVote struct {
	Creator string      `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Vote    *SingleVote `protobuf:"bytes,2,opt,name=vote,proto3" json:"vote,omitempty"`
}

func (m *MsgCardVote) Reset()         { *m = MsgCardVote{} }
func (m *MsgCardVote) String() string { return proto.CompactTextString(m) }
func (*MsgCardVote) ProtoMessage()    {}
func (*MsgCardVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{6}
}
func (m *MsgCardVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardVote.Merge(m, src)
}
func (m *MsgCardVote) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardVote) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardVote.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardVote proto.InternalMessageInfo

func (m *MsgCardVote) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCardVote) GetVote() *SingleVote {
	if m != nil {
		return m.Vote
	}
	return nil
}

type MsgCardVoteResponse struct {
	AirdropClaimed bool `protobuf:"varint,1,opt,name=airdropClaimed,proto3" json:"airdropClaimed,omitempty"`
}

func (m *MsgCardVoteResponse) Reset()         { *m = MsgCardVoteResponse{} }
func (m *MsgCardVoteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCardVoteResponse) ProtoMessage()    {}
func (*MsgCardVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4a3aba0ac94bc8, []int{7}
}
func (m *MsgCardVoteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCardVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCardVoteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCardVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCardVoteResponse.Merge(m, src)
}
func (m *MsgCardVoteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCardVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCardVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCardVoteResponse proto.InternalMessageInfo

func (m *MsgCardVoteResponse) GetAirdropClaimed() bool {
	if m != nil {
		return m.AirdropClaimed
	}
	return false
}

func init() {
	proto.RegisterType((*MsgUserCreate)(nil), "decentralcardgame.cardchain.cardchain.MsgUserCreate")
	proto.RegisterType((*MsgUserCreateResponse)(nil), "decentralcardgame.cardchain.cardchain.MsgUserCreateResponse")
	proto.RegisterType((*MsgCardSchemeBuy)(nil), "decentralcardgame.cardchain.cardchain.MsgCardSchemeBuy")
	proto.RegisterType((*MsgCardSchemeBuyResponse)(nil), "decentralcardgame.cardchain.cardchain.MsgCardSchemeBuyResponse")
	proto.RegisterType((*MsgCardSaveContent)(nil), "decentralcardgame.cardchain.cardchain.MsgCardSaveContent")
	proto.RegisterType((*MsgCardSaveContentResponse)(nil), "decentralcardgame.cardchain.cardchain.MsgCardSaveContentResponse")
	proto.RegisterType((*MsgCardVote)(nil), "decentralcardgame.cardchain.cardchain.MsgCardVote")
	proto.RegisterType((*MsgCardVoteResponse)(nil), "decentralcardgame.cardchain.cardchain.MsgCardVoteResponse")
}

func init() { proto.RegisterFile("cardchain/cardchain/tx.proto", fileDescriptor_3b4a3aba0ac94bc8) }

var fileDescriptor_3b4a3aba0ac94bc8 = []byte{
	// 557 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcd, 0x8a, 0xd3, 0x50,
	0x14, 0x6e, 0xa6, 0x9d, 0x5a, 0xcf, 0x50, 0x95, 0x38, 0x6a, 0x0c, 0x12, 0x4b, 0x50, 0x99, 0x55,
	0x42, 0xab, 0xe0, 0x0f, 0x8a, 0x4c, 0x3b, 0x22, 0x2e, 0xba, 0xc9, 0xa0, 0xa0, 0x1b, 0xb9, 0x49,
	0x0e, 0x69, 0xa0, 0xb9, 0xb7, 0xdc, 0x7b, 0xa7, 0xce, 0xb8, 0x72, 0xeb, 0x4a, 0x9f, 0xc1, 0x67,
	0xf0, 0x21, 0x66, 0x39, 0x4b, 0x57, 0x22, 0xed, 0x8b, 0xc8, 0xcd, 0x5f, 0x7f, 0x94, 0xd2, 0x76,
	0x77, 0x7e, 0xf2, 0x7d, 0xe7, 0x3b, 0x27, 0x1f, 0x17, 0xee, 0x04, 0x84, 0x87, 0xc1, 0x80, 0xc4,
	0xd4, 0x9d, 0x45, 0xf2, 0xd4, 0x19, 0x71, 0x26, 0x99, 0x7e, 0x3f, 0xc4, 0x00, 0xa9, 0xe4, 0x64,
	0xa8, 0x9a, 0x11, 0x49, 0xd0, 0x29, 0xbf, 0x9a, 0x45, 0x66, 0xeb, 0x7f, 0x24, 0x63, 0x26, 0x63,
	0x1a, 0x65, 0x44, 0xa6, 0x15, 0x30, 0x91, 0x30, 0xe1, 0xfa, 0x44, 0xa0, 0x3b, 0x6e, 0xfb, 0x28,
	0x49, 0xdb, 0x0d, 0x58, 0x4c, 0xf3, 0xfe, 0x7e, 0xc4, 0x22, 0x96, 0x86, 0xae, 0x8a, 0xb2, 0xaa,
	0xfd, 0x1e, 0x9a, 0x7d, 0x11, 0xbd, 0x15, 0xc8, 0x7b, 0x1c, 0x89, 0x44, 0xdd, 0x80, 0x4b, 0x81,
	0x8a, 0x18, 0x37, 0xb4, 0x96, 0x76, 0x70, 0xd9, 0x2b, 0x52, 0xd5, 0xa1, 0xf8, 0x49, 0x7d, 0x6a,
	0xec, 0x64, 0x9d, 0x3c, 0xd5, 0xf7, 0x61, 0x97, 0x0c, 0x63, 0x22, 0x8c, 0x6a, 0x5a, 0xcf, 0x12,
	0xfb, 0x16, 0xdc, 0x58, 0xa0, 0xf6, 0x50, 0x8c, 0x18, 0x15, 0x68, 0x7f, 0x84, 0x6b, 0x7d, 0x11,
	0xf5, 0x08, 0x0f, 0x8f, 0x83, 0x01, 0x26, 0xd8, 0x3d, 0x39, 0x5b, 0x31, 0xb6, 0x0d, 0x55, 0x3f,
	0x0e, 0xd3, 0x91, 0x7b, 0x9d, 0xdb, 0x4e, 0xb6, 0xa5, 0xa3, 0xb6, 0x74, 0xf2, 0x2d, 0x9d, 0x1e,
	0x8b, 0x69, 0xb7, 0x76, 0xfe, 0xfb, 0x6e, 0xc5, 0x53, 0xdf, 0xda, 0x1d, 0x30, 0x96, 0x07, 0x14,
	0xc3, 0xf5, 0x9b, 0x50, 0x57, 0x07, 0x7c, 0x13, 0xa6, 0x73, 0x6a, 0x5e, 0x9e, 0xd9, 0x3f, 0x35,
	0xd0, 0x0b, 0x10, 0x19, 0x63, 0x8f, 0x51, 0x89, 0x54, 0xae, 0xd0, 0x35, 0x23, 0xda, 0x99, 0x27,
	0x4a, 0x11, 0x19, 0x38, 0x3f, 0x47, 0x91, 0xaa, 0x33, 0x51, 0x26, 0x51, 0x18, 0xb5, 0xec, 0x4c,
	0x69, 0xa2, 0x78, 0x08, 0x97, 0xb1, 0x90, 0xc6, 0x6e, 0x5a, 0xce, 0x33, 0xfd, 0x1e, 0x34, 0x7d,
	0x32, 0x24, 0x34, 0xc0, 0x43, 0x1a, 0x0c, 0x18, 0x37, 0xea, 0x2d, 0xed, 0xa0, 0xe1, 0x2d, 0x16,
	0xed, 0x23, 0x30, 0xff, 0x55, 0x5d, 0x2e, 0xfb, 0x00, 0xae, 0x90, 0x98, 0x87, 0x9c, 0x8d, 0x7a,
	0x43, 0x12, 0x27, 0x98, 0x2d, 0xdd, 0xf0, 0x96, 0xaa, 0x36, 0x85, 0xbd, 0x9c, 0xe5, 0x1d, 0x5b,
	0xe9, 0x81, 0x57, 0x50, 0x1b, 0x33, 0x89, 0xf9, 0xdf, 0x68, 0x3b, 0x6b, 0x99, 0xd7, 0x39, 0x8e,
	0x69, 0x34, 0x44, 0x45, 0xed, 0xa5, 0x70, 0xfb, 0x05, 0x5c, 0x9f, 0x9b, 0xb7, 0xa9, 0xdc, 0xce,
	0x8f, 0x1a, 0x54, 0xfb, 0x22, 0xd2, 0xbf, 0x68, 0x00, 0x73, 0xd6, 0x7d, 0xb4, 0xa6, 0x9c, 0x05,
	0x57, 0x9a, 0xcf, 0xb7, 0x41, 0x95, 0x92, 0xbf, 0x6a, 0xd0, 0x5c, 0x74, 0xf2, 0xe3, 0xf5, 0xf9,
	0x16, 0x80, 0xe6, 0xcb, 0x2d, 0x81, 0xa5, 0x96, 0x6f, 0x1a, 0x5c, 0x5d, 0xf6, 0xef, 0xd3, 0x0d,
	0x49, 0x67, 0x50, 0xf3, 0x70, 0x6b, 0x68, 0xa9, 0xe8, 0x33, 0x34, 0x4a, 0x53, 0x75, 0x36, 0xa3,
	0x53, 0x18, 0xf3, 0xd9, 0xe6, 0x98, 0x62, 0x76, 0xd7, 0x3b, 0x9f, 0x58, 0xda, 0xc5, 0xc4, 0xd2,
	0xfe, 0x4c, 0x2c, 0xed, 0xfb, 0xd4, 0xaa, 0x5c, 0x4c, 0xad, 0xca, 0xaf, 0xa9, 0x55, 0xf9, 0xf0,
	0x24, 0x8a, 0xe5, 0xe0, 0xc4, 0x77, 0x02, 0x96, 0xb8, 0x47, 0x05, 0xbf, 0xc2, 0xbf, 0x26, 0x09,
	0xce, 0x3d, 0xaf, 0xa7, 0xf3, 0xef, 0xf5, 0xd9, 0x08, 0x85, 0x5f, 0x4f, 0x1f, 0xcd, 0x87, 0x7f,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x90, 0xcc, 0x92, 0xef, 0xd3, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	UserCreate(ctx context.Context, in *MsgUserCreate, opts ...grpc.CallOption) (*MsgUserCreateResponse, error)
	CardSchemeBuy(ctx context.Context, in *MsgCardSchemeBuy, opts ...grpc.CallOption) (*MsgCardSchemeBuyResponse, error)
	CardSaveContent(ctx context.Context, in *MsgCardSaveContent, opts ...grpc.CallOption) (*MsgCardSaveContentResponse, error)
	CardVote(ctx context.Context, in *MsgCardVote, opts ...grpc.CallOption) (*MsgCardVoteResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UserCreate(ctx context.Context, in *MsgUserCreate, opts ...grpc.CallOption) (*MsgUserCreateResponse, error) {
	out := new(MsgUserCreateResponse)
	err := c.cc.Invoke(ctx, "/decentralcardgame.cardchain.cardchain.Msg/UserCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CardSchemeBuy(ctx context.Context, in *MsgCardSchemeBuy, opts ...grpc.CallOption) (*MsgCardSchemeBuyResponse, error) {
	out := new(MsgCardSchemeBuyResponse)
	err := c.cc.Invoke(ctx, "/decentralcardgame.cardchain.cardchain.Msg/CardSchemeBuy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CardSaveContent(ctx context.Context, in *MsgCardSaveContent, opts ...grpc.CallOption) (*MsgCardSaveContentResponse, error) {
	out := new(MsgCardSaveContentResponse)
	err := c.cc.Invoke(ctx, "/decentralcardgame.cardchain.cardchain.Msg/CardSaveContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CardVote(ctx context.Context, in *MsgCardVote, opts ...grpc.CallOption) (*MsgCardVoteResponse, error) {
	out := new(MsgCardVoteResponse)
	err := c.cc.Invoke(ctx, "/decentralcardgame.cardchain.cardchain.Msg/CardVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	UserCreate(context.Context, *MsgUserCreate) (*MsgUserCreateResponse, error)
	CardSchemeBuy(context.Context, *MsgCardSchemeBuy) (*MsgCardSchemeBuyResponse, error)
	CardSaveContent(context.Context, *MsgCardSaveContent) (*MsgCardSaveContentResponse, error)
	CardVote(context.Context, *MsgCardVote) (*MsgCardVoteResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UserCreate(ctx context.Context, req *MsgUserCreate) (*MsgUserCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserCreate not implemented")
}
func (*UnimplementedMsgServer) CardSchemeBuy(ctx context.Context, req *MsgCardSchemeBuy) (*MsgCardSchemeBuyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardSchemeBuy not implemented")
}
func (*UnimplementedMsgServer) CardSaveContent(ctx context.Context, req *MsgCardSaveContent) (*MsgCardSaveContentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardSaveContent not implemented")
}
func (*UnimplementedMsgServer) CardVote(ctx context.Context, req *MsgCardVote) (*MsgCardVoteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CardVote not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UserCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUserCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UserCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/decentralcardgame.cardchain.cardchain.Msg/UserCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UserCreate(ctx, req.(*MsgUserCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CardSchemeBuy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCardSchemeBuy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CardSchemeBuy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/decentralcardgame.cardchain.cardchain.Msg/CardSchemeBuy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CardSchemeBuy(ctx, req.(*MsgCardSchemeBuy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CardSaveContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCardSaveContent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CardSaveContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/decentralcardgame.cardchain.cardchain.Msg/CardSaveContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CardSaveContent(ctx, req.(*MsgCardSaveContent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CardVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCardVote)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CardVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/decentralcardgame.cardchain.cardchain.Msg/CardVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CardVote(ctx, req.(*MsgCardVote))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "decentralcardgame.cardchain.cardchain.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserCreate",
			Handler:    _Msg_UserCreate_Handler,
		},
		{
			MethodName: "CardSchemeBuy",
			Handler:    _Msg_CardSchemeBuy_Handler,
		},
		{
			MethodName: "CardSaveContent",
			Handler:    _Msg_CardSaveContent_Handler,
		},
		{
			MethodName: "CardVote",
			Handler:    _Msg_CardVote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cardchain/cardchain/tx.proto",
}

func (m *MsgUserCreate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUserCreate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUserCreate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Alias) > 0 {
		i -= len(m.Alias)
		copy(dAtA[i:], m.Alias)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Alias)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NewUser) > 0 {
		i -= len(m.NewUser)
		copy(dAtA[i:], m.NewUser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewUser)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUserCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUserCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUserCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCardSchemeBuy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardSchemeBuy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardSchemeBuy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Bid.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardSchemeBuyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardSchemeBuyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardSchemeBuyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardSaveContent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardSaveContent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardSaveContent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BalanceAnchor {
		i--
		if m.BalanceAnchor {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Artist) > 0 {
		i -= len(m.Artist)
		copy(dAtA[i:], m.Artist)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Artist)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Notes) > 0 {
		i -= len(m.Notes)
		copy(dAtA[i:], m.Notes)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Notes)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x1a
	}
	if m.CardId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CardId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardSaveContentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardSaveContentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardSaveContentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AirdropClaimed {
		i--
		if m.AirdropClaimed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardVote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardVote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Vote != nil {
		{
			size, err := m.Vote.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCardVoteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCardVoteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCardVoteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AirdropClaimed {
		i--
		if m.AirdropClaimed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUserCreate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewUser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Alias)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUserCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCardSchemeBuy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Bid.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCardSchemeBuyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	return n
}

func (m *MsgCardSaveContent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CardId != 0 {
		n += 1 + sovTx(uint64(m.CardId))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Notes)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Artist)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.BalanceAnchor {
		n += 2
	}
	return n
}

func (m *MsgCardSaveContentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AirdropClaimed {
		n += 2
	}
	return n
}

func (m *MsgCardVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Vote != nil {
		l = m.Vote.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCardVoteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AirdropClaimed {
		n += 2
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUserCreate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUserCreate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUserCreate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewUser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewUser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alias", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alias = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUserCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUserCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUserCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardSchemeBuy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardSchemeBuy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardSchemeBuy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bid", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Bid.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardSchemeBuyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardSchemeBuyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardSchemeBuyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardSaveContent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardSaveContent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardSaveContent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
			}
			m.CardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Notes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Artist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BalanceAnchor", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BalanceAnchor = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardSaveContentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardSaveContentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardSaveContentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AirdropClaimed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AirdropClaimed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vote", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Vote == nil {
				m.Vote = &SingleVote{}
			}
			if err := m.Vote.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCardVoteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCardVoteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCardVoteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AirdropClaimed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AirdropClaimed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
