server {
    server_name hottub.crowdcontrol.network;

    listen 80;
    listen [::]:80;

    access_log /var/log/nginx/hottub.access.log;
    error_log /var/log/nginx/hottub.error.log;

    location / {
      return 301 https://$server_name$request_uri;
    }
}

server {
    server_name hottub.crowdcontrol.network;

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    access_log /var/log/nginx/hottub.access.log;
    error_log /var/log/nginx/hottub.error.log;

    # Use Mozilla's guidelines for SSL/TLS settings
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    # NOTE: some settings below might be redundant
    ssl_certificate /etc/letsencrypt/live/hottub.crowdcontrol.network/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hottub.crowdcontrol.network/privkey.pem;

    location / {
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Headers' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
    add_header 'Access-Control-Max-Age' 1728000 always;

	if ($request_method = 'OPTIONS') {
		return 200;
	}

         proxy_set_header Host $http_host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
         proxy_set_header X-NginX-Proxy true;
         proxy_read_timeout 90;

         proxy_redirect off;
         proxy_pass http://hottub:1323;
    }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name cardchain.crowdcontrol.network;
  ssl_certificate /etc/letsencrypt/live/cardchain.crowdcontrol.network/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/cardchain.crowdcontrol.network/privkey.pem;

  # Improve HTTPS performance with session resumption
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 10m;

	# Enable server-side protection against BEAST attacks
	ssl_protocols TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";

  # RFC-7919 recommended: https://wiki.mozilla.org/Security/Server_Side_TLS#ffdhe4096
  ssl_dhparam /etc/nginx/ssl/dhparam-4096.pem;
  ssl_ecdh_curve secp521r1:secp384r1;

	# Aditional Security Headers
	# ref: https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

	# ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
	add_header X-Frame-Options DENY always;

	# ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
	add_header X-Content-Type-Options nosniff always;

	# ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
	add_header X-Xss-Protection "1; mode=block" always;

  # Enable OCSP stapling
	# ref. http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox
	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate /etc/letsencrypt/live/cardchain.crowdcontrol.network/fullchain.pem;
	resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001] valid=300s; # Cloudflare
	resolver_timeout 5s;

  location / {
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Headers' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
    add_header 'Access-Control-Max-Age' 1728000 always;

    if ($request_method = 'OPTIONS') {
      return 200;
    }

    proxy_redirect off;
    proxy_set_header host $host;
    proxy_set_header X-real-ip $remote_addr;
    proxy_set_header X-forward-for $proxy_add_x_forwarded_for;
    proxy_pass http://goat:1317;
  }
}
