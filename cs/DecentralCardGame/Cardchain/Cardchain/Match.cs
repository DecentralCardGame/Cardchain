// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cardchain/cardchain/match.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DecentralCardGame.Cardchain.Cardchain {

  /// <summary>Holder for reflection information generated from cardchain/cardchain/match.proto</summary>
  public static partial class MatchReflection {

    #region Descriptor
    /// <summary>File descriptor for cardchain/cardchain/match.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MatchReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9jYXJkY2hhaW4vY2FyZGNoYWluL21hdGNoLnByb3RvEiVEZWNlbnRyYWxD",
            "YXJkR2FtZS5jYXJkY2hhaW4uY2FyZGNoYWluGiBjYXJkY2hhaW4vY2FyZGNo",
            "YWluL3ZvdGluZy5wcm90byL9AgoFTWF0Y2gSHAoJdGltZXN0YW1wGAEgASgE",
            "Ugl0aW1lc3RhbXASGgoIcmVwb3J0ZXIYAiABKAlSCHJlcG9ydGVyEkwKB3Bs",
            "YXllckEYAyABKAsyMi5EZWNlbnRyYWxDYXJkR2FtZS5jYXJkY2hhaW4uY2Fy",
            "ZGNoYWluLk1hdGNoUGxheWVyUgdwbGF5ZXJBEkwKB3BsYXllckIYBCABKAsy",
            "Mi5EZWNlbnRyYWxDYXJkR2FtZS5jYXJkY2hhaW4uY2FyZGNoYWluLk1hdGNo",
            "UGxheWVyUgdwbGF5ZXJCEkgKB291dGNvbWUYByABKA4yLi5EZWNlbnRyYWxD",
            "YXJkR2FtZS5jYXJkY2hhaW4uY2FyZGNoYWluLk91dGNvbWVSB291dGNvbWUS",
            "KgoQY29pbnNEaXN0cmlidXRlZBgKIAEoCFIQY29pbnNEaXN0cmlidXRlZBIo",
            "Cg9zZXJ2ZXJDb25maXJtZWQYCCABKAhSD3NlcnZlckNvbmZpcm1lZCKSAgoL",
            "TWF0Y2hQbGF5ZXISEgoEYWRkchgBIAEoCVIEYWRkchIgCgtwbGF5ZWRDYXJk",
            "cxgCIAMoBFILcGxheWVkQ2FyZHMSHAoJY29uZmlybWVkGAMgASgIUgljb25m",
            "aXJtZWQSSAoHb3V0Y29tZRgEIAEoDjIuLkRlY2VudHJhbENhcmRHYW1lLmNh",
            "cmRjaGFpbi5jYXJkY2hhaW4uT3V0Y29tZVIHb3V0Y29tZRISCgRkZWNrGAUg",
            "AygEUgRkZWNrElEKCnZvdGVkQ2FyZHMYBiADKAsyMS5EZWNlbnRyYWxDYXJk",
            "R2FtZS5jYXJkY2hhaW4uY2FyZGNoYWluLlNpbmdsZVZvdGVSCnZvdGVkQ2Fy",
            "ZHMqNAoHT3V0Y29tZRIICgRBV29uEAASCAoEQldvbhABEggKBERyYXcQAhIL",
            "CgdBYm9ydGVkEANCpwIKKWNvbS5EZWNlbnRyYWxDYXJkR2FtZS5jYXJkY2hh",
            "aW4uY2FyZGNoYWluQgpNYXRjaFByb3RvUAFaOGdpdGh1Yi5jb20vRGVjZW50",
            "cmFsQ2FyZEdhbWUvQ2FyZGNoYWluL3gvY2FyZGNoYWluL3R5cGVzogIDREND",
            "qgIlRGVjZW50cmFsQ2FyZEdhbWUuQ2FyZGNoYWluLkNhcmRjaGFpbsoCJURl",
            "Y2VudHJhbENhcmRHYW1lXENhcmRjaGFpblxDYXJkY2hhaW7iAjFEZWNlbnRy",
            "YWxDYXJkR2FtZVxDYXJkY2hhaW5cQ2FyZGNoYWluXEdQQk1ldGFkYXRh6gIn",
            "RGVjZW50cmFsQ2FyZEdhbWU6OkNhcmRjaGFpbjo6Q2FyZGNoYWluYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DecentralCardGame.Cardchain.Cardchain.VotingReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DecentralCardGame.Cardchain.Cardchain.Outcome), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DecentralCardGame.Cardchain.Cardchain.Match), global::DecentralCardGame.Cardchain.Cardchain.Match.Parser, new[]{ "Timestamp", "Reporter", "PlayerA", "PlayerB", "Outcome", "CoinsDistributed", "ServerConfirmed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer), global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer.Parser, new[]{ "Addr", "PlayedCards", "Confirmed", "Outcome", "Deck", "VotedCards" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Outcome {
    [pbr::OriginalName("AWon")] Awon = 0,
    [pbr::OriginalName("BWon")] Bwon = 1,
    [pbr::OriginalName("Draw")] Draw = 2,
    [pbr::OriginalName("Aborted")] Aborted = 3,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Match : pb::IMessage<Match>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Match> _parser = new pb::MessageParser<Match>(() => new Match());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Match> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DecentralCardGame.Cardchain.Cardchain.MatchReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match(Match other) : this() {
      timestamp_ = other.timestamp_;
      reporter_ = other.reporter_;
      playerA_ = other.playerA_ != null ? other.playerA_.Clone() : null;
      playerB_ = other.playerB_ != null ? other.playerB_.Clone() : null;
      outcome_ = other.outcome_;
      coinsDistributed_ = other.coinsDistributed_;
      serverConfirmed_ = other.serverConfirmed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match Clone() {
      return new Match(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "reporter" field.</summary>
    public const int ReporterFieldNumber = 2;
    private string reporter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reporter {
      get { return reporter_; }
      set {
        reporter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerA" field.</summary>
    public const int PlayerAFieldNumber = 3;
    private global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer playerA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer PlayerA {
      get { return playerA_; }
      set {
        playerA_ = value;
      }
    }

    /// <summary>Field number for the "playerB" field.</summary>
    public const int PlayerBFieldNumber = 4;
    private global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer playerB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer PlayerB {
      get { return playerB_; }
      set {
        playerB_ = value;
      }
    }

    /// <summary>Field number for the "outcome" field.</summary>
    public const int OutcomeFieldNumber = 7;
    private global::DecentralCardGame.Cardchain.Cardchain.Outcome outcome_ = global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DecentralCardGame.Cardchain.Cardchain.Outcome Outcome {
      get { return outcome_; }
      set {
        outcome_ = value;
      }
    }

    /// <summary>Field number for the "coinsDistributed" field.</summary>
    public const int CoinsDistributedFieldNumber = 10;
    private bool coinsDistributed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CoinsDistributed {
      get { return coinsDistributed_; }
      set {
        coinsDistributed_ = value;
      }
    }

    /// <summary>Field number for the "serverConfirmed" field.</summary>
    public const int ServerConfirmedFieldNumber = 8;
    private bool serverConfirmed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServerConfirmed {
      get { return serverConfirmed_; }
      set {
        serverConfirmed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Match);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Match other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (Reporter != other.Reporter) return false;
      if (!object.Equals(PlayerA, other.PlayerA)) return false;
      if (!object.Equals(PlayerB, other.PlayerB)) return false;
      if (Outcome != other.Outcome) return false;
      if (CoinsDistributed != other.CoinsDistributed) return false;
      if (ServerConfirmed != other.ServerConfirmed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (Reporter.Length != 0) hash ^= Reporter.GetHashCode();
      if (playerA_ != null) hash ^= PlayerA.GetHashCode();
      if (playerB_ != null) hash ^= PlayerB.GetHashCode();
      if (Outcome != global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon) hash ^= Outcome.GetHashCode();
      if (CoinsDistributed != false) hash ^= CoinsDistributed.GetHashCode();
      if (ServerConfirmed != false) hash ^= ServerConfirmed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Timestamp != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Timestamp);
      }
      if (Reporter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Reporter);
      }
      if (playerA_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerA);
      }
      if (playerB_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayerB);
      }
      if (Outcome != global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Outcome);
      }
      if (ServerConfirmed != false) {
        output.WriteRawTag(64);
        output.WriteBool(ServerConfirmed);
      }
      if (CoinsDistributed != false) {
        output.WriteRawTag(80);
        output.WriteBool(CoinsDistributed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Timestamp != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Timestamp);
      }
      if (Reporter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Reporter);
      }
      if (playerA_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerA);
      }
      if (playerB_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayerB);
      }
      if (Outcome != global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Outcome);
      }
      if (ServerConfirmed != false) {
        output.WriteRawTag(64);
        output.WriteBool(ServerConfirmed);
      }
      if (CoinsDistributed != false) {
        output.WriteRawTag(80);
        output.WriteBool(CoinsDistributed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (Reporter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reporter);
      }
      if (playerA_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerA);
      }
      if (playerB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerB);
      }
      if (Outcome != global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Outcome);
      }
      if (CoinsDistributed != false) {
        size += 1 + 1;
      }
      if (ServerConfirmed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Match other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.Reporter.Length != 0) {
        Reporter = other.Reporter;
      }
      if (other.playerA_ != null) {
        if (playerA_ == null) {
          PlayerA = new global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer();
        }
        PlayerA.MergeFrom(other.PlayerA);
      }
      if (other.playerB_ != null) {
        if (playerB_ == null) {
          PlayerB = new global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer();
        }
        PlayerB.MergeFrom(other.PlayerB);
      }
      if (other.Outcome != global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon) {
        Outcome = other.Outcome;
      }
      if (other.CoinsDistributed != false) {
        CoinsDistributed = other.CoinsDistributed;
      }
      if (other.ServerConfirmed != false) {
        ServerConfirmed = other.ServerConfirmed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 18: {
            Reporter = input.ReadString();
            break;
          }
          case 26: {
            if (playerA_ == null) {
              PlayerA = new global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer();
            }
            input.ReadMessage(PlayerA);
            break;
          }
          case 34: {
            if (playerB_ == null) {
              PlayerB = new global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer();
            }
            input.ReadMessage(PlayerB);
            break;
          }
          case 56: {
            Outcome = (global::DecentralCardGame.Cardchain.Cardchain.Outcome) input.ReadEnum();
            break;
          }
          case 64: {
            ServerConfirmed = input.ReadBool();
            break;
          }
          case 80: {
            CoinsDistributed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 18: {
            Reporter = input.ReadString();
            break;
          }
          case 26: {
            if (playerA_ == null) {
              PlayerA = new global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer();
            }
            input.ReadMessage(PlayerA);
            break;
          }
          case 34: {
            if (playerB_ == null) {
              PlayerB = new global::DecentralCardGame.Cardchain.Cardchain.MatchPlayer();
            }
            input.ReadMessage(PlayerB);
            break;
          }
          case 56: {
            Outcome = (global::DecentralCardGame.Cardchain.Cardchain.Outcome) input.ReadEnum();
            break;
          }
          case 64: {
            ServerConfirmed = input.ReadBool();
            break;
          }
          case 80: {
            CoinsDistributed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MatchPlayer : pb::IMessage<MatchPlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchPlayer> _parser = new pb::MessageParser<MatchPlayer>(() => new MatchPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatchPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DecentralCardGame.Cardchain.Cardchain.MatchReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchPlayer(MatchPlayer other) : this() {
      addr_ = other.addr_;
      playedCards_ = other.playedCards_.Clone();
      confirmed_ = other.confirmed_;
      outcome_ = other.outcome_;
      deck_ = other.deck_.Clone();
      votedCards_ = other.votedCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatchPlayer Clone() {
      return new MatchPlayer(this);
    }

    /// <summary>Field number for the "addr" field.</summary>
    public const int AddrFieldNumber = 1;
    private string addr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Addr {
      get { return addr_; }
      set {
        addr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playedCards" field.</summary>
    public const int PlayedCardsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_playedCards_codec
        = pb::FieldCodec.ForUInt64(18);
    private readonly pbc::RepeatedField<ulong> playedCards_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> PlayedCards {
      get { return playedCards_; }
    }

    /// <summary>Field number for the "confirmed" field.</summary>
    public const int ConfirmedFieldNumber = 3;
    private bool confirmed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Confirmed {
      get { return confirmed_; }
      set {
        confirmed_ = value;
      }
    }

    /// <summary>Field number for the "outcome" field.</summary>
    public const int OutcomeFieldNumber = 4;
    private global::DecentralCardGame.Cardchain.Cardchain.Outcome outcome_ = global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DecentralCardGame.Cardchain.Cardchain.Outcome Outcome {
      get { return outcome_; }
      set {
        outcome_ = value;
      }
    }

    /// <summary>Field number for the "deck" field.</summary>
    public const int DeckFieldNumber = 5;
    private static readonly pb::FieldCodec<ulong> _repeated_deck_codec
        = pb::FieldCodec.ForUInt64(42);
    private readonly pbc::RepeatedField<ulong> deck_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> Deck {
      get { return deck_; }
    }

    /// <summary>Field number for the "votedCards" field.</summary>
    public const int VotedCardsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::DecentralCardGame.Cardchain.Cardchain.SingleVote> _repeated_votedCards_codec
        = pb::FieldCodec.ForMessage(50, global::DecentralCardGame.Cardchain.Cardchain.SingleVote.Parser);
    private readonly pbc::RepeatedField<global::DecentralCardGame.Cardchain.Cardchain.SingleVote> votedCards_ = new pbc::RepeatedField<global::DecentralCardGame.Cardchain.Cardchain.SingleVote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::DecentralCardGame.Cardchain.Cardchain.SingleVote> VotedCards {
      get { return votedCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatchPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatchPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Addr != other.Addr) return false;
      if(!playedCards_.Equals(other.playedCards_)) return false;
      if (Confirmed != other.Confirmed) return false;
      if (Outcome != other.Outcome) return false;
      if(!deck_.Equals(other.deck_)) return false;
      if(!votedCards_.Equals(other.votedCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Addr.Length != 0) hash ^= Addr.GetHashCode();
      hash ^= playedCards_.GetHashCode();
      if (Confirmed != false) hash ^= Confirmed.GetHashCode();
      if (Outcome != global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon) hash ^= Outcome.GetHashCode();
      hash ^= deck_.GetHashCode();
      hash ^= votedCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Addr.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Addr);
      }
      playedCards_.WriteTo(output, _repeated_playedCards_codec);
      if (Confirmed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Confirmed);
      }
      if (Outcome != global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Outcome);
      }
      deck_.WriteTo(output, _repeated_deck_codec);
      votedCards_.WriteTo(output, _repeated_votedCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Addr.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Addr);
      }
      playedCards_.WriteTo(ref output, _repeated_playedCards_codec);
      if (Confirmed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Confirmed);
      }
      if (Outcome != global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Outcome);
      }
      deck_.WriteTo(ref output, _repeated_deck_codec);
      votedCards_.WriteTo(ref output, _repeated_votedCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Addr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Addr);
      }
      size += playedCards_.CalculateSize(_repeated_playedCards_codec);
      if (Confirmed != false) {
        size += 1 + 1;
      }
      if (Outcome != global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Outcome);
      }
      size += deck_.CalculateSize(_repeated_deck_codec);
      size += votedCards_.CalculateSize(_repeated_votedCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatchPlayer other) {
      if (other == null) {
        return;
      }
      if (other.Addr.Length != 0) {
        Addr = other.Addr;
      }
      playedCards_.Add(other.playedCards_);
      if (other.Confirmed != false) {
        Confirmed = other.Confirmed;
      }
      if (other.Outcome != global::DecentralCardGame.Cardchain.Cardchain.Outcome.Awon) {
        Outcome = other.Outcome;
      }
      deck_.Add(other.deck_);
      votedCards_.Add(other.votedCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Addr = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            playedCards_.AddEntriesFrom(input, _repeated_playedCards_codec);
            break;
          }
          case 24: {
            Confirmed = input.ReadBool();
            break;
          }
          case 32: {
            Outcome = (global::DecentralCardGame.Cardchain.Cardchain.Outcome) input.ReadEnum();
            break;
          }
          case 42:
          case 40: {
            deck_.AddEntriesFrom(input, _repeated_deck_codec);
            break;
          }
          case 50: {
            votedCards_.AddEntriesFrom(input, _repeated_votedCards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Addr = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            playedCards_.AddEntriesFrom(ref input, _repeated_playedCards_codec);
            break;
          }
          case 24: {
            Confirmed = input.ReadBool();
            break;
          }
          case 32: {
            Outcome = (global::DecentralCardGame.Cardchain.Cardchain.Outcome) input.ReadEnum();
            break;
          }
          case 42:
          case 40: {
            deck_.AddEntriesFrom(ref input, _repeated_deck_codec);
            break;
          }
          case 50: {
            votedCards_.AddEntriesFrom(ref input, _repeated_votedCards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
