// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cardchain/cardchain/set.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DecentralCardGame.Cardchain.Cardchain {

  /// <summary>Holder for reflection information generated from cardchain/cardchain/set.proto</summary>
  public static partial class SetReflection {

    #region Descriptor
    /// <summary>File descriptor for cardchain/cardchain/set.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1jYXJkY2hhaW4vY2FyZGNoYWluL3NldC5wcm90bxIlRGVjZW50cmFsQ2Fy",
            "ZEdhbWUuY2FyZGNoYWluLmNhcmRjaGFpbiKnAgoDU2V0EhIKBG5hbWUYASAB",
            "KAlSBG5hbWUSFAoFY2FyZHMYAiADKARSBWNhcmRzEhYKBmFydGlzdBgDIAEo",
            "CVIGYXJ0aXN0EiAKC3N0b3J5V3JpdGVyGAQgASgJUgtzdG9yeVdyaXRlchIi",
            "Cgxjb250cmlidXRvcnMYBSADKAlSDGNvbnRyaWJ1dG9ycxIUCgVzdG9yeRgG",
            "IAEoCVIFc3RvcnkSHAoJYXJ0d29ya0lkGAcgASgEUglhcnR3b3JrSWQSRgoG",
            "c3RhdHVzGAggASgOMi4uRGVjZW50cmFsQ2FyZEdhbWUuY2FyZGNoYWluLmNh",
            "cmRjaGFpbi5DU3RhdHVzUgZzdGF0dXMSHAoJdGltZVN0YW1wGAkgASgDUgl0",
            "aW1lU3RhbXAipwIKB091dHBTZXQSEgoEbmFtZRgBIAEoCVIEbmFtZRIUCgVj",
            "YXJkcxgCIAMoBFIFY2FyZHMSFgoGYXJ0aXN0GAMgASgJUgZhcnRpc3QSIAoL",
            "c3RvcnlXcml0ZXIYBCABKAlSC3N0b3J5V3JpdGVyEiIKDGNvbnRyaWJ1dG9y",
            "cxgFIAMoCVIMY29udHJpYnV0b3JzEhQKBXN0b3J5GAYgASgJUgVzdG9yeRIY",
            "CgdhcnR3b3JrGAcgASgJUgdhcnR3b3JrEkYKBnN0YXR1cxgIIAEoDjIuLkRl",
            "Y2VudHJhbENhcmRHYW1lLmNhcmRjaGFpbi5jYXJkY2hhaW4uQ1N0YXR1c1IG",
            "c3RhdHVzEhwKCXRpbWVTdGFtcBgJIAEoA1IJdGltZVN0YW1wKj4KB0NTdGF0",
            "dXMSCgoGZGVzaWduEAASDQoJZmluYWxpemVkEAESCgoGYWN0aXZlEAISDAoI",
            "YXJjaGl2ZWQQA0KlAgopY29tLkRlY2VudHJhbENhcmRHYW1lLmNhcmRjaGFp",
            "bi5jYXJkY2hhaW5CCFNldFByb3RvUAFaOGdpdGh1Yi5jb20vRGVjZW50cmFs",
            "Q2FyZEdhbWUvQ2FyZGNoYWluL3gvY2FyZGNoYWluL3R5cGVzogIDRENDqgIl",
            "RGVjZW50cmFsQ2FyZEdhbWUuQ2FyZGNoYWluLkNhcmRjaGFpbsoCJURlY2Vu",
            "dHJhbENhcmRHYW1lXENhcmRjaGFpblxDYXJkY2hhaW7iAjFEZWNlbnRyYWxD",
            "YXJkR2FtZVxDYXJkY2hhaW5cQ2FyZGNoYWluXEdQQk1ldGFkYXRh6gInRGVj",
            "ZW50cmFsQ2FyZEdhbWU6OkNhcmRjaGFpbjo6Q2FyZGNoYWluYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DecentralCardGame.Cardchain.Cardchain.CStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DecentralCardGame.Cardchain.Cardchain.Set), global::DecentralCardGame.Cardchain.Cardchain.Set.Parser, new[]{ "Name", "Cards", "Artist", "StoryWriter", "Contributors", "Story", "ArtworkId", "Status", "TimeStamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DecentralCardGame.Cardchain.Cardchain.OutpSet), global::DecentralCardGame.Cardchain.Cardchain.OutpSet.Parser, new[]{ "Name", "Cards", "Artist", "StoryWriter", "Contributors", "Story", "Artwork", "Status", "TimeStamp" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CStatus {
    [pbr::OriginalName("design")] Design = 0,
    [pbr::OriginalName("finalized")] Finalized = 1,
    [pbr::OriginalName("active")] Active = 2,
    [pbr::OriginalName("archived")] Archived = 3,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Set : pb::IMessage<Set>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Set> _parser = new pb::MessageParser<Set>(() => new Set());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Set> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DecentralCardGame.Cardchain.Cardchain.SetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Set() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Set(Set other) : this() {
      name_ = other.name_;
      cards_ = other.cards_.Clone();
      artist_ = other.artist_;
      storyWriter_ = other.storyWriter_;
      contributors_ = other.contributors_.Clone();
      story_ = other.story_;
      artworkId_ = other.artworkId_;
      status_ = other.status_;
      timeStamp_ = other.timeStamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Set Clone() {
      return new Set(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_cards_codec
        = pb::FieldCodec.ForUInt64(18);
    private readonly pbc::RepeatedField<ulong> cards_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> Cards {
      get { return cards_; }
    }

    /// <summary>Field number for the "artist" field.</summary>
    public const int ArtistFieldNumber = 3;
    private string artist_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Artist {
      get { return artist_; }
      set {
        artist_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "storyWriter" field.</summary>
    public const int StoryWriterFieldNumber = 4;
    private string storyWriter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StoryWriter {
      get { return storyWriter_; }
      set {
        storyWriter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contributors" field.</summary>
    public const int ContributorsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_contributors_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> contributors_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Contributors {
      get { return contributors_; }
    }

    /// <summary>Field number for the "story" field.</summary>
    public const int StoryFieldNumber = 6;
    private string story_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Story {
      get { return story_; }
      set {
        story_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "artworkId" field.</summary>
    public const int ArtworkIdFieldNumber = 7;
    private ulong artworkId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ArtworkId {
      get { return artworkId_; }
      set {
        artworkId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 8;
    private global::DecentralCardGame.Cardchain.Cardchain.CStatus status_ = global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DecentralCardGame.Cardchain.Cardchain.CStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "timeStamp" field.</summary>
    public const int TimeStampFieldNumber = 9;
    private long timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Set);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Set other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!cards_.Equals(other.cards_)) return false;
      if (Artist != other.Artist) return false;
      if (StoryWriter != other.StoryWriter) return false;
      if(!contributors_.Equals(other.contributors_)) return false;
      if (Story != other.Story) return false;
      if (ArtworkId != other.ArtworkId) return false;
      if (Status != other.Status) return false;
      if (TimeStamp != other.TimeStamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= cards_.GetHashCode();
      if (Artist.Length != 0) hash ^= Artist.GetHashCode();
      if (StoryWriter.Length != 0) hash ^= StoryWriter.GetHashCode();
      hash ^= contributors_.GetHashCode();
      if (Story.Length != 0) hash ^= Story.GetHashCode();
      if (ArtworkId != 0UL) hash ^= ArtworkId.GetHashCode();
      if (Status != global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design) hash ^= Status.GetHashCode();
      if (TimeStamp != 0L) hash ^= TimeStamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      cards_.WriteTo(output, _repeated_cards_codec);
      if (Artist.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Artist);
      }
      if (StoryWriter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StoryWriter);
      }
      contributors_.WriteTo(output, _repeated_contributors_codec);
      if (Story.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Story);
      }
      if (ArtworkId != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(ArtworkId);
      }
      if (Status != global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (TimeStamp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (Artist.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Artist);
      }
      if (StoryWriter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StoryWriter);
      }
      contributors_.WriteTo(ref output, _repeated_contributors_codec);
      if (Story.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Story);
      }
      if (ArtworkId != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(ArtworkId);
      }
      if (Status != global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (TimeStamp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (Artist.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Artist);
      }
      if (StoryWriter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoryWriter);
      }
      size += contributors_.CalculateSize(_repeated_contributors_codec);
      if (Story.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Story);
      }
      if (ArtworkId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ArtworkId);
      }
      if (Status != global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (TimeStamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeStamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Set other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      cards_.Add(other.cards_);
      if (other.Artist.Length != 0) {
        Artist = other.Artist;
      }
      if (other.StoryWriter.Length != 0) {
        StoryWriter = other.StoryWriter;
      }
      contributors_.Add(other.contributors_);
      if (other.Story.Length != 0) {
        Story = other.Story;
      }
      if (other.ArtworkId != 0UL) {
        ArtworkId = other.ArtworkId;
      }
      if (other.Status != global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design) {
        Status = other.Status;
      }
      if (other.TimeStamp != 0L) {
        TimeStamp = other.TimeStamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
          case 26: {
            Artist = input.ReadString();
            break;
          }
          case 34: {
            StoryWriter = input.ReadString();
            break;
          }
          case 42: {
            contributors_.AddEntriesFrom(input, _repeated_contributors_codec);
            break;
          }
          case 50: {
            Story = input.ReadString();
            break;
          }
          case 56: {
            ArtworkId = input.ReadUInt64();
            break;
          }
          case 64: {
            Status = (global::DecentralCardGame.Cardchain.Cardchain.CStatus) input.ReadEnum();
            break;
          }
          case 72: {
            TimeStamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
          case 26: {
            Artist = input.ReadString();
            break;
          }
          case 34: {
            StoryWriter = input.ReadString();
            break;
          }
          case 42: {
            contributors_.AddEntriesFrom(ref input, _repeated_contributors_codec);
            break;
          }
          case 50: {
            Story = input.ReadString();
            break;
          }
          case 56: {
            ArtworkId = input.ReadUInt64();
            break;
          }
          case 64: {
            Status = (global::DecentralCardGame.Cardchain.Cardchain.CStatus) input.ReadEnum();
            break;
          }
          case 72: {
            TimeStamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OutpSet : pb::IMessage<OutpSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OutpSet> _parser = new pb::MessageParser<OutpSet>(() => new OutpSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OutpSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DecentralCardGame.Cardchain.Cardchain.SetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutpSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutpSet(OutpSet other) : this() {
      name_ = other.name_;
      cards_ = other.cards_.Clone();
      artist_ = other.artist_;
      storyWriter_ = other.storyWriter_;
      contributors_ = other.contributors_.Clone();
      story_ = other.story_;
      artwork_ = other.artwork_;
      status_ = other.status_;
      timeStamp_ = other.timeStamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutpSet Clone() {
      return new OutpSet(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_cards_codec
        = pb::FieldCodec.ForUInt64(18);
    private readonly pbc::RepeatedField<ulong> cards_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> Cards {
      get { return cards_; }
    }

    /// <summary>Field number for the "artist" field.</summary>
    public const int ArtistFieldNumber = 3;
    private string artist_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Artist {
      get { return artist_; }
      set {
        artist_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "storyWriter" field.</summary>
    public const int StoryWriterFieldNumber = 4;
    private string storyWriter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StoryWriter {
      get { return storyWriter_; }
      set {
        storyWriter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contributors" field.</summary>
    public const int ContributorsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_contributors_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> contributors_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Contributors {
      get { return contributors_; }
    }

    /// <summary>Field number for the "story" field.</summary>
    public const int StoryFieldNumber = 6;
    private string story_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Story {
      get { return story_; }
      set {
        story_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "artwork" field.</summary>
    public const int ArtworkFieldNumber = 7;
    private string artwork_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Artwork {
      get { return artwork_; }
      set {
        artwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 8;
    private global::DecentralCardGame.Cardchain.Cardchain.CStatus status_ = global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DecentralCardGame.Cardchain.Cardchain.CStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "timeStamp" field.</summary>
    public const int TimeStampFieldNumber = 9;
    private long timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OutpSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OutpSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!cards_.Equals(other.cards_)) return false;
      if (Artist != other.Artist) return false;
      if (StoryWriter != other.StoryWriter) return false;
      if(!contributors_.Equals(other.contributors_)) return false;
      if (Story != other.Story) return false;
      if (Artwork != other.Artwork) return false;
      if (Status != other.Status) return false;
      if (TimeStamp != other.TimeStamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= cards_.GetHashCode();
      if (Artist.Length != 0) hash ^= Artist.GetHashCode();
      if (StoryWriter.Length != 0) hash ^= StoryWriter.GetHashCode();
      hash ^= contributors_.GetHashCode();
      if (Story.Length != 0) hash ^= Story.GetHashCode();
      if (Artwork.Length != 0) hash ^= Artwork.GetHashCode();
      if (Status != global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design) hash ^= Status.GetHashCode();
      if (TimeStamp != 0L) hash ^= TimeStamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      cards_.WriteTo(output, _repeated_cards_codec);
      if (Artist.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Artist);
      }
      if (StoryWriter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StoryWriter);
      }
      contributors_.WriteTo(output, _repeated_contributors_codec);
      if (Story.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Story);
      }
      if (Artwork.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Artwork);
      }
      if (Status != global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (TimeStamp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (Artist.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Artist);
      }
      if (StoryWriter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StoryWriter);
      }
      contributors_.WriteTo(ref output, _repeated_contributors_codec);
      if (Story.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Story);
      }
      if (Artwork.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Artwork);
      }
      if (Status != global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (TimeStamp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (Artist.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Artist);
      }
      if (StoryWriter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoryWriter);
      }
      size += contributors_.CalculateSize(_repeated_contributors_codec);
      if (Story.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Story);
      }
      if (Artwork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Artwork);
      }
      if (Status != global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (TimeStamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeStamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OutpSet other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      cards_.Add(other.cards_);
      if (other.Artist.Length != 0) {
        Artist = other.Artist;
      }
      if (other.StoryWriter.Length != 0) {
        StoryWriter = other.StoryWriter;
      }
      contributors_.Add(other.contributors_);
      if (other.Story.Length != 0) {
        Story = other.Story;
      }
      if (other.Artwork.Length != 0) {
        Artwork = other.Artwork;
      }
      if (other.Status != global::DecentralCardGame.Cardchain.Cardchain.CStatus.Design) {
        Status = other.Status;
      }
      if (other.TimeStamp != 0L) {
        TimeStamp = other.TimeStamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
          case 26: {
            Artist = input.ReadString();
            break;
          }
          case 34: {
            StoryWriter = input.ReadString();
            break;
          }
          case 42: {
            contributors_.AddEntriesFrom(input, _repeated_contributors_codec);
            break;
          }
          case 50: {
            Story = input.ReadString();
            break;
          }
          case 58: {
            Artwork = input.ReadString();
            break;
          }
          case 64: {
            Status = (global::DecentralCardGame.Cardchain.Cardchain.CStatus) input.ReadEnum();
            break;
          }
          case 72: {
            TimeStamp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
          case 26: {
            Artist = input.ReadString();
            break;
          }
          case 34: {
            StoryWriter = input.ReadString();
            break;
          }
          case 42: {
            contributors_.AddEntriesFrom(ref input, _repeated_contributors_codec);
            break;
          }
          case 50: {
            Story = input.ReadString();
            break;
          }
          case 58: {
            Artwork = input.ReadString();
            break;
          }
          case 64: {
            Status = (global::DecentralCardGame.Cardchain.Cardchain.CStatus) input.ReadEnum();
            break;
          }
          case 72: {
            TimeStamp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
