// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package cardchain

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_Set_2_list)(nil)

type _Set_2_list struct {
	list *[]uint64
}

func (x *_Set_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Set_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_Set_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_Set_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_Set_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message Set at list field Cards as it is not of Message kind"))
}

func (x *_Set_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_Set_2_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_Set_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_Set_5_list)(nil)

type _Set_5_list struct {
	list *[]string
}

func (x *_Set_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Set_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_Set_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_Set_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_Set_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message Set at list field Contributors as it is not of Message kind"))
}

func (x *_Set_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_Set_5_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_Set_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_Set_10_list)(nil)

type _Set_10_list struct {
	list *[]*AddrWithQuantity
}

func (x *_Set_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Set_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Set_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddrWithQuantity)
	(*x.list)[i] = concreteValue
}

func (x *_Set_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddrWithQuantity)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Set_10_list) AppendMutable() protoreflect.Value {
	v := new(AddrWithQuantity)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Set_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Set_10_list) NewElement() protoreflect.Value {
	v := new(AddrWithQuantity)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Set_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_Set_11_list)(nil)

type _Set_11_list struct {
	list *[]*InnerRarities
}

func (x *_Set_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Set_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Set_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*InnerRarities)
	(*x.list)[i] = concreteValue
}

func (x *_Set_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*InnerRarities)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Set_11_list) AppendMutable() protoreflect.Value {
	v := new(InnerRarities)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Set_11_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Set_11_list) NewElement() protoreflect.Value {
	v := new(InnerRarities)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Set_11_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Set                          protoreflect.MessageDescriptor
	fd_Set_name                     protoreflect.FieldDescriptor
	fd_Set_cards                    protoreflect.FieldDescriptor
	fd_Set_artist                   protoreflect.FieldDescriptor
	fd_Set_storyWriter              protoreflect.FieldDescriptor
	fd_Set_contributors             protoreflect.FieldDescriptor
	fd_Set_story                    protoreflect.FieldDescriptor
	fd_Set_artworkId                protoreflect.FieldDescriptor
	fd_Set_status                   protoreflect.FieldDescriptor
	fd_Set_timeStamp                protoreflect.FieldDescriptor
	fd_Set_contributorsDistribution protoreflect.FieldDescriptor
	fd_Set_Rarities                 protoreflect.FieldDescriptor
)

func init() {
	file_cardchain_cardchain_set_proto_init()
	md_Set = File_cardchain_cardchain_set_proto.Messages().ByName("Set")
	fd_Set_name = md_Set.Fields().ByName("name")
	fd_Set_cards = md_Set.Fields().ByName("cards")
	fd_Set_artist = md_Set.Fields().ByName("artist")
	fd_Set_storyWriter = md_Set.Fields().ByName("storyWriter")
	fd_Set_contributors = md_Set.Fields().ByName("contributors")
	fd_Set_story = md_Set.Fields().ByName("story")
	fd_Set_artworkId = md_Set.Fields().ByName("artworkId")
	fd_Set_status = md_Set.Fields().ByName("status")
	fd_Set_timeStamp = md_Set.Fields().ByName("timeStamp")
	fd_Set_contributorsDistribution = md_Set.Fields().ByName("contributorsDistribution")
	fd_Set_Rarities = md_Set.Fields().ByName("Rarities")
}

var _ protoreflect.Message = (*fastReflection_Set)(nil)

type fastReflection_Set Set

func (x *Set) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Set)(x)
}

func (x *Set) slowProtoReflect() protoreflect.Message {
	mi := &file_cardchain_cardchain_set_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Set_messageType fastReflection_Set_messageType
var _ protoreflect.MessageType = fastReflection_Set_messageType{}

type fastReflection_Set_messageType struct{}

func (x fastReflection_Set_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Set)(nil)
}
func (x fastReflection_Set_messageType) New() protoreflect.Message {
	return new(fastReflection_Set)
}
func (x fastReflection_Set_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Set
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Set) Descriptor() protoreflect.MessageDescriptor {
	return md_Set
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Set) Type() protoreflect.MessageType {
	return _fastReflection_Set_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Set) New() protoreflect.Message {
	return new(fastReflection_Set)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Set) Interface() protoreflect.ProtoMessage {
	return (*Set)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Set) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Name != "" {
		value := protoreflect.ValueOfString(x.Name)
		if !f(fd_Set_name, value) {
			return
		}
	}
	if len(x.Cards) != 0 {
		value := protoreflect.ValueOfList(&_Set_2_list{list: &x.Cards})
		if !f(fd_Set_cards, value) {
			return
		}
	}
	if x.Artist != "" {
		value := protoreflect.ValueOfString(x.Artist)
		if !f(fd_Set_artist, value) {
			return
		}
	}
	if x.StoryWriter != "" {
		value := protoreflect.ValueOfString(x.StoryWriter)
		if !f(fd_Set_storyWriter, value) {
			return
		}
	}
	if len(x.Contributors) != 0 {
		value := protoreflect.ValueOfList(&_Set_5_list{list: &x.Contributors})
		if !f(fd_Set_contributors, value) {
			return
		}
	}
	if x.Story != "" {
		value := protoreflect.ValueOfString(x.Story)
		if !f(fd_Set_story, value) {
			return
		}
	}
	if x.ArtworkId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ArtworkId)
		if !f(fd_Set_artworkId, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_Set_status, value) {
			return
		}
	}
	if x.TimeStamp != int64(0) {
		value := protoreflect.ValueOfInt64(x.TimeStamp)
		if !f(fd_Set_timeStamp, value) {
			return
		}
	}
	if len(x.ContributorsDistribution) != 0 {
		value := protoreflect.ValueOfList(&_Set_10_list{list: &x.ContributorsDistribution})
		if !f(fd_Set_contributorsDistribution, value) {
			return
		}
	}
	if len(x.Rarities) != 0 {
		value := protoreflect.ValueOfList(&_Set_11_list{list: &x.Rarities})
		if !f(fd_Set_Rarities, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Set) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cardchain.cardchain.Set.name":
		return x.Name != ""
	case "cardchain.cardchain.Set.cards":
		return len(x.Cards) != 0
	case "cardchain.cardchain.Set.artist":
		return x.Artist != ""
	case "cardchain.cardchain.Set.storyWriter":
		return x.StoryWriter != ""
	case "cardchain.cardchain.Set.contributors":
		return len(x.Contributors) != 0
	case "cardchain.cardchain.Set.story":
		return x.Story != ""
	case "cardchain.cardchain.Set.artworkId":
		return x.ArtworkId != uint64(0)
	case "cardchain.cardchain.Set.status":
		return x.Status != 0
	case "cardchain.cardchain.Set.timeStamp":
		return x.TimeStamp != int64(0)
	case "cardchain.cardchain.Set.contributorsDistribution":
		return len(x.ContributorsDistribution) != 0
	case "cardchain.cardchain.Set.Rarities":
		return len(x.Rarities) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Set"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Set does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Set) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cardchain.cardchain.Set.name":
		x.Name = ""
	case "cardchain.cardchain.Set.cards":
		x.Cards = nil
	case "cardchain.cardchain.Set.artist":
		x.Artist = ""
	case "cardchain.cardchain.Set.storyWriter":
		x.StoryWriter = ""
	case "cardchain.cardchain.Set.contributors":
		x.Contributors = nil
	case "cardchain.cardchain.Set.story":
		x.Story = ""
	case "cardchain.cardchain.Set.artworkId":
		x.ArtworkId = uint64(0)
	case "cardchain.cardchain.Set.status":
		x.Status = 0
	case "cardchain.cardchain.Set.timeStamp":
		x.TimeStamp = int64(0)
	case "cardchain.cardchain.Set.contributorsDistribution":
		x.ContributorsDistribution = nil
	case "cardchain.cardchain.Set.Rarities":
		x.Rarities = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Set"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Set does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Set) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cardchain.cardchain.Set.name":
		value := x.Name
		return protoreflect.ValueOfString(value)
	case "cardchain.cardchain.Set.cards":
		if len(x.Cards) == 0 {
			return protoreflect.ValueOfList(&_Set_2_list{})
		}
		listValue := &_Set_2_list{list: &x.Cards}
		return protoreflect.ValueOfList(listValue)
	case "cardchain.cardchain.Set.artist":
		value := x.Artist
		return protoreflect.ValueOfString(value)
	case "cardchain.cardchain.Set.storyWriter":
		value := x.StoryWriter
		return protoreflect.ValueOfString(value)
	case "cardchain.cardchain.Set.contributors":
		if len(x.Contributors) == 0 {
			return protoreflect.ValueOfList(&_Set_5_list{})
		}
		listValue := &_Set_5_list{list: &x.Contributors}
		return protoreflect.ValueOfList(listValue)
	case "cardchain.cardchain.Set.story":
		value := x.Story
		return protoreflect.ValueOfString(value)
	case "cardchain.cardchain.Set.artworkId":
		value := x.ArtworkId
		return protoreflect.ValueOfUint64(value)
	case "cardchain.cardchain.Set.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "cardchain.cardchain.Set.timeStamp":
		value := x.TimeStamp
		return protoreflect.ValueOfInt64(value)
	case "cardchain.cardchain.Set.contributorsDistribution":
		if len(x.ContributorsDistribution) == 0 {
			return protoreflect.ValueOfList(&_Set_10_list{})
		}
		listValue := &_Set_10_list{list: &x.ContributorsDistribution}
		return protoreflect.ValueOfList(listValue)
	case "cardchain.cardchain.Set.Rarities":
		if len(x.Rarities) == 0 {
			return protoreflect.ValueOfList(&_Set_11_list{})
		}
		listValue := &_Set_11_list{list: &x.Rarities}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Set"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Set does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Set) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cardchain.cardchain.Set.name":
		x.Name = value.Interface().(string)
	case "cardchain.cardchain.Set.cards":
		lv := value.List()
		clv := lv.(*_Set_2_list)
		x.Cards = *clv.list
	case "cardchain.cardchain.Set.artist":
		x.Artist = value.Interface().(string)
	case "cardchain.cardchain.Set.storyWriter":
		x.StoryWriter = value.Interface().(string)
	case "cardchain.cardchain.Set.contributors":
		lv := value.List()
		clv := lv.(*_Set_5_list)
		x.Contributors = *clv.list
	case "cardchain.cardchain.Set.story":
		x.Story = value.Interface().(string)
	case "cardchain.cardchain.Set.artworkId":
		x.ArtworkId = value.Uint()
	case "cardchain.cardchain.Set.status":
		x.Status = (SetStatus)(value.Enum())
	case "cardchain.cardchain.Set.timeStamp":
		x.TimeStamp = value.Int()
	case "cardchain.cardchain.Set.contributorsDistribution":
		lv := value.List()
		clv := lv.(*_Set_10_list)
		x.ContributorsDistribution = *clv.list
	case "cardchain.cardchain.Set.Rarities":
		lv := value.List()
		clv := lv.(*_Set_11_list)
		x.Rarities = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Set"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Set does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Set) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.Set.cards":
		if x.Cards == nil {
			x.Cards = []uint64{}
		}
		value := &_Set_2_list{list: &x.Cards}
		return protoreflect.ValueOfList(value)
	case "cardchain.cardchain.Set.contributors":
		if x.Contributors == nil {
			x.Contributors = []string{}
		}
		value := &_Set_5_list{list: &x.Contributors}
		return protoreflect.ValueOfList(value)
	case "cardchain.cardchain.Set.contributorsDistribution":
		if x.ContributorsDistribution == nil {
			x.ContributorsDistribution = []*AddrWithQuantity{}
		}
		value := &_Set_10_list{list: &x.ContributorsDistribution}
		return protoreflect.ValueOfList(value)
	case "cardchain.cardchain.Set.Rarities":
		if x.Rarities == nil {
			x.Rarities = []*InnerRarities{}
		}
		value := &_Set_11_list{list: &x.Rarities}
		return protoreflect.ValueOfList(value)
	case "cardchain.cardchain.Set.name":
		panic(fmt.Errorf("field name of message cardchain.cardchain.Set is not mutable"))
	case "cardchain.cardchain.Set.artist":
		panic(fmt.Errorf("field artist of message cardchain.cardchain.Set is not mutable"))
	case "cardchain.cardchain.Set.storyWriter":
		panic(fmt.Errorf("field storyWriter of message cardchain.cardchain.Set is not mutable"))
	case "cardchain.cardchain.Set.story":
		panic(fmt.Errorf("field story of message cardchain.cardchain.Set is not mutable"))
	case "cardchain.cardchain.Set.artworkId":
		panic(fmt.Errorf("field artworkId of message cardchain.cardchain.Set is not mutable"))
	case "cardchain.cardchain.Set.status":
		panic(fmt.Errorf("field status of message cardchain.cardchain.Set is not mutable"))
	case "cardchain.cardchain.Set.timeStamp":
		panic(fmt.Errorf("field timeStamp of message cardchain.cardchain.Set is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Set"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Set does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Set) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.Set.name":
		return protoreflect.ValueOfString("")
	case "cardchain.cardchain.Set.cards":
		list := []uint64{}
		return protoreflect.ValueOfList(&_Set_2_list{list: &list})
	case "cardchain.cardchain.Set.artist":
		return protoreflect.ValueOfString("")
	case "cardchain.cardchain.Set.storyWriter":
		return protoreflect.ValueOfString("")
	case "cardchain.cardchain.Set.contributors":
		list := []string{}
		return protoreflect.ValueOfList(&_Set_5_list{list: &list})
	case "cardchain.cardchain.Set.story":
		return protoreflect.ValueOfString("")
	case "cardchain.cardchain.Set.artworkId":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cardchain.cardchain.Set.status":
		return protoreflect.ValueOfEnum(0)
	case "cardchain.cardchain.Set.timeStamp":
		return protoreflect.ValueOfInt64(int64(0))
	case "cardchain.cardchain.Set.contributorsDistribution":
		list := []*AddrWithQuantity{}
		return protoreflect.ValueOfList(&_Set_10_list{list: &list})
	case "cardchain.cardchain.Set.Rarities":
		list := []*InnerRarities{}
		return protoreflect.ValueOfList(&_Set_11_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Set"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Set does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Set) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cardchain.cardchain.Set", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Set) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Set) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Set) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Set) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Set)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Name)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Cards) > 0 {
			l = 0
			for _, e := range x.Cards {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		l = len(x.Artist)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.StoryWriter)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Contributors) > 0 {
			for _, s := range x.Contributors {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Story)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ArtworkId != 0 {
			n += 1 + runtime.Sov(uint64(x.ArtworkId))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.TimeStamp != 0 {
			n += 1 + runtime.Sov(uint64(x.TimeStamp))
		}
		if len(x.ContributorsDistribution) > 0 {
			for _, e := range x.ContributorsDistribution {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Rarities) > 0 {
			for _, e := range x.Rarities {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Set)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Rarities) > 0 {
			for iNdEx := len(x.Rarities) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Rarities[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.ContributorsDistribution) > 0 {
			for iNdEx := len(x.ContributorsDistribution) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ContributorsDistribution[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if x.TimeStamp != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TimeStamp))
			i--
			dAtA[i] = 0x48
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x40
		}
		if x.ArtworkId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ArtworkId))
			i--
			dAtA[i] = 0x38
		}
		if len(x.Story) > 0 {
			i -= len(x.Story)
			copy(dAtA[i:], x.Story)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Story)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.Contributors) > 0 {
			for iNdEx := len(x.Contributors) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Contributors[iNdEx])
				copy(dAtA[i:], x.Contributors[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Contributors[iNdEx])))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.StoryWriter) > 0 {
			i -= len(x.StoryWriter)
			copy(dAtA[i:], x.StoryWriter)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StoryWriter)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Artist) > 0 {
			i -= len(x.Artist)
			copy(dAtA[i:], x.Artist)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Artist)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Cards) > 0 {
			var pksize2 int
			for _, num := range x.Cards {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.Cards {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Name) > 0 {
			i -= len(x.Name)
			copy(dAtA[i:], x.Name)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Name)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Set)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Set: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Set: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Name = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.Cards = append(x.Cards, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.Cards) == 0 {
						x.Cards = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.Cards = append(x.Cards, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Cards", wireType)
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Artist", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Artist = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StoryWriter", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StoryWriter = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Contributors", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Contributors = append(x.Contributors, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Story", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Story = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ArtworkId", wireType)
				}
				x.ArtworkId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ArtworkId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= SetStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimeStamp", wireType)
				}
				x.TimeStamp = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TimeStamp |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ContributorsDistribution", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ContributorsDistribution = append(x.ContributorsDistribution, &AddrWithQuantity{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ContributorsDistribution[len(x.ContributorsDistribution)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Rarities", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Rarities = append(x.Rarities, &InnerRarities{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Rarities[len(x.Rarities)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_InnerRarities_1_list)(nil)

type _InnerRarities_1_list struct {
	list *[]uint64
}

func (x *_InnerRarities_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_InnerRarities_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfUint64((*x.list)[i])
}

func (x *_InnerRarities_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_InnerRarities_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Uint()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_InnerRarities_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message InnerRarities at list field R as it is not of Message kind"))
}

func (x *_InnerRarities_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_InnerRarities_1_list) NewElement() protoreflect.Value {
	v := uint64(0)
	return protoreflect.ValueOfUint64(v)
}

func (x *_InnerRarities_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_InnerRarities   protoreflect.MessageDescriptor
	fd_InnerRarities_R protoreflect.FieldDescriptor
)

func init() {
	file_cardchain_cardchain_set_proto_init()
	md_InnerRarities = File_cardchain_cardchain_set_proto.Messages().ByName("InnerRarities")
	fd_InnerRarities_R = md_InnerRarities.Fields().ByName("R")
}

var _ protoreflect.Message = (*fastReflection_InnerRarities)(nil)

type fastReflection_InnerRarities InnerRarities

func (x *InnerRarities) ProtoReflect() protoreflect.Message {
	return (*fastReflection_InnerRarities)(x)
}

func (x *InnerRarities) slowProtoReflect() protoreflect.Message {
	mi := &file_cardchain_cardchain_set_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_InnerRarities_messageType fastReflection_InnerRarities_messageType
var _ protoreflect.MessageType = fastReflection_InnerRarities_messageType{}

type fastReflection_InnerRarities_messageType struct{}

func (x fastReflection_InnerRarities_messageType) Zero() protoreflect.Message {
	return (*fastReflection_InnerRarities)(nil)
}
func (x fastReflection_InnerRarities_messageType) New() protoreflect.Message {
	return new(fastReflection_InnerRarities)
}
func (x fastReflection_InnerRarities_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_InnerRarities
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_InnerRarities) Descriptor() protoreflect.MessageDescriptor {
	return md_InnerRarities
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_InnerRarities) Type() protoreflect.MessageType {
	return _fastReflection_InnerRarities_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_InnerRarities) New() protoreflect.Message {
	return new(fastReflection_InnerRarities)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_InnerRarities) Interface() protoreflect.ProtoMessage {
	return (*InnerRarities)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_InnerRarities) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.R) != 0 {
		value := protoreflect.ValueOfList(&_InnerRarities_1_list{list: &x.R})
		if !f(fd_InnerRarities_R, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_InnerRarities) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cardchain.cardchain.InnerRarities.R":
		return len(x.R) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.InnerRarities"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.InnerRarities does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InnerRarities) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cardchain.cardchain.InnerRarities.R":
		x.R = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.InnerRarities"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.InnerRarities does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_InnerRarities) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cardchain.cardchain.InnerRarities.R":
		if len(x.R) == 0 {
			return protoreflect.ValueOfList(&_InnerRarities_1_list{})
		}
		listValue := &_InnerRarities_1_list{list: &x.R}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.InnerRarities"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.InnerRarities does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InnerRarities) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cardchain.cardchain.InnerRarities.R":
		lv := value.List()
		clv := lv.(*_InnerRarities_1_list)
		x.R = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.InnerRarities"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.InnerRarities does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InnerRarities) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.InnerRarities.R":
		if x.R == nil {
			x.R = []uint64{}
		}
		value := &_InnerRarities_1_list{list: &x.R}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.InnerRarities"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.InnerRarities does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_InnerRarities) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.InnerRarities.R":
		list := []uint64{}
		return protoreflect.ValueOfList(&_InnerRarities_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.InnerRarities"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.InnerRarities does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_InnerRarities) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cardchain.cardchain.InnerRarities", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_InnerRarities) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InnerRarities) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_InnerRarities) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_InnerRarities) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*InnerRarities)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.R) > 0 {
			l = 0
			for _, e := range x.R {
				l += runtime.Sov(uint64(e))
			}
			n += 1 + runtime.Sov(uint64(l)) + l
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*InnerRarities)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.R) > 0 {
			var pksize2 int
			for _, num := range x.R {
				pksize2 += runtime.Sov(uint64(num))
			}
			i -= pksize2
			j1 := i
			for _, num := range x.R {
				for num >= 1<<7 {
					dAtA[j1] = uint8(uint64(num)&0x7f | 0x80)
					num >>= 7
					j1++
				}
				dAtA[j1] = uint8(num)
				j1++
			}
			i = runtime.EncodeVarint(dAtA, i, uint64(pksize2))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*InnerRarities)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InnerRarities: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InnerRarities: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType == 0 {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					x.R = append(x.R, v)
				} else if wireType == 2 {
					var packedLen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
						}
						if iNdEx >= l {
							return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						packedLen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if packedLen < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					postIndex := iNdEx + packedLen
					if postIndex < 0 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
					}
					if postIndex > l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					var elementCount int
					var count int
					for _, integer := range dAtA[iNdEx:postIndex] {
						if integer < 128 {
							count++
						}
					}
					elementCount = count
					if elementCount != 0 && len(x.R) == 0 {
						x.R = make([]uint64, 0, elementCount)
					}
					for iNdEx < postIndex {
						var v uint64
						for shift := uint(0); ; shift += 7 {
							if shift >= 64 {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
							}
							if iNdEx >= l {
								return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
							}
							b := dAtA[iNdEx]
							iNdEx++
							v |= uint64(b&0x7F) << shift
							if b < 0x80 {
								break
							}
						}
						x.R = append(x.R, v)
					}
				} else {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field R", wireType)
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AddrWithQuantity         protoreflect.MessageDescriptor
	fd_AddrWithQuantity_addr    protoreflect.FieldDescriptor
	fd_AddrWithQuantity_q       protoreflect.FieldDescriptor
	fd_AddrWithQuantity_payment protoreflect.FieldDescriptor
)

func init() {
	file_cardchain_cardchain_set_proto_init()
	md_AddrWithQuantity = File_cardchain_cardchain_set_proto.Messages().ByName("AddrWithQuantity")
	fd_AddrWithQuantity_addr = md_AddrWithQuantity.Fields().ByName("addr")
	fd_AddrWithQuantity_q = md_AddrWithQuantity.Fields().ByName("q")
	fd_AddrWithQuantity_payment = md_AddrWithQuantity.Fields().ByName("payment")
}

var _ protoreflect.Message = (*fastReflection_AddrWithQuantity)(nil)

type fastReflection_AddrWithQuantity AddrWithQuantity

func (x *AddrWithQuantity) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AddrWithQuantity)(x)
}

func (x *AddrWithQuantity) slowProtoReflect() protoreflect.Message {
	mi := &file_cardchain_cardchain_set_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AddrWithQuantity_messageType fastReflection_AddrWithQuantity_messageType
var _ protoreflect.MessageType = fastReflection_AddrWithQuantity_messageType{}

type fastReflection_AddrWithQuantity_messageType struct{}

func (x fastReflection_AddrWithQuantity_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AddrWithQuantity)(nil)
}
func (x fastReflection_AddrWithQuantity_messageType) New() protoreflect.Message {
	return new(fastReflection_AddrWithQuantity)
}
func (x fastReflection_AddrWithQuantity_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AddrWithQuantity
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AddrWithQuantity) Descriptor() protoreflect.MessageDescriptor {
	return md_AddrWithQuantity
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AddrWithQuantity) Type() protoreflect.MessageType {
	return _fastReflection_AddrWithQuantity_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AddrWithQuantity) New() protoreflect.Message {
	return new(fastReflection_AddrWithQuantity)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AddrWithQuantity) Interface() protoreflect.ProtoMessage {
	return (*AddrWithQuantity)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AddrWithQuantity) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Addr != "" {
		value := protoreflect.ValueOfString(x.Addr)
		if !f(fd_AddrWithQuantity_addr, value) {
			return
		}
	}
	if x.Q != uint32(0) {
		value := protoreflect.ValueOfUint32(x.Q)
		if !f(fd_AddrWithQuantity_q, value) {
			return
		}
	}
	if x.Payment != nil {
		value := protoreflect.ValueOfMessage(x.Payment.ProtoReflect())
		if !f(fd_AddrWithQuantity_payment, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AddrWithQuantity) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cardchain.cardchain.AddrWithQuantity.addr":
		return x.Addr != ""
	case "cardchain.cardchain.AddrWithQuantity.q":
		return x.Q != uint32(0)
	case "cardchain.cardchain.AddrWithQuantity.payment":
		return x.Payment != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.AddrWithQuantity"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.AddrWithQuantity does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddrWithQuantity) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cardchain.cardchain.AddrWithQuantity.addr":
		x.Addr = ""
	case "cardchain.cardchain.AddrWithQuantity.q":
		x.Q = uint32(0)
	case "cardchain.cardchain.AddrWithQuantity.payment":
		x.Payment = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.AddrWithQuantity"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.AddrWithQuantity does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AddrWithQuantity) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cardchain.cardchain.AddrWithQuantity.addr":
		value := x.Addr
		return protoreflect.ValueOfString(value)
	case "cardchain.cardchain.AddrWithQuantity.q":
		value := x.Q
		return protoreflect.ValueOfUint32(value)
	case "cardchain.cardchain.AddrWithQuantity.payment":
		value := x.Payment
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.AddrWithQuantity"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.AddrWithQuantity does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddrWithQuantity) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cardchain.cardchain.AddrWithQuantity.addr":
		x.Addr = value.Interface().(string)
	case "cardchain.cardchain.AddrWithQuantity.q":
		x.Q = uint32(value.Uint())
	case "cardchain.cardchain.AddrWithQuantity.payment":
		x.Payment = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.AddrWithQuantity"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.AddrWithQuantity does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddrWithQuantity) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.AddrWithQuantity.payment":
		if x.Payment == nil {
			x.Payment = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Payment.ProtoReflect())
	case "cardchain.cardchain.AddrWithQuantity.addr":
		panic(fmt.Errorf("field addr of message cardchain.cardchain.AddrWithQuantity is not mutable"))
	case "cardchain.cardchain.AddrWithQuantity.q":
		panic(fmt.Errorf("field q of message cardchain.cardchain.AddrWithQuantity is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.AddrWithQuantity"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.AddrWithQuantity does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AddrWithQuantity) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.AddrWithQuantity.addr":
		return protoreflect.ValueOfString("")
	case "cardchain.cardchain.AddrWithQuantity.q":
		return protoreflect.ValueOfUint32(uint32(0))
	case "cardchain.cardchain.AddrWithQuantity.payment":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.AddrWithQuantity"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.AddrWithQuantity does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AddrWithQuantity) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cardchain.cardchain.AddrWithQuantity", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AddrWithQuantity) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddrWithQuantity) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AddrWithQuantity) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AddrWithQuantity) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AddrWithQuantity)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Addr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Q != 0 {
			n += 1 + runtime.Sov(uint64(x.Q))
		}
		if x.Payment != nil {
			l = options.Size(x.Payment)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AddrWithQuantity)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Payment != nil {
			encoded, err := options.Marshal(x.Payment)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Q != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Q))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Addr) > 0 {
			i -= len(x.Addr)
			copy(dAtA[i:], x.Addr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Addr)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AddrWithQuantity)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddrWithQuantity: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddrWithQuantity: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Addr = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
				}
				x.Q = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Q |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Payment", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Payment == nil {
					x.Payment = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Payment); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: cardchain/cardchain/set.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetStatus int32

const (
	SetStatus_undefined SetStatus = 0
	SetStatus_design    SetStatus = 1
	SetStatus_finalized SetStatus = 2
	SetStatus_active    SetStatus = 3
	SetStatus_archived  SetStatus = 4
)

// Enum value maps for SetStatus.
var (
	SetStatus_name = map[int32]string{
		0: "undefined",
		1: "design",
		2: "finalized",
		3: "active",
		4: "archived",
	}
	SetStatus_value = map[string]int32{
		"undefined": 0,
		"design":    1,
		"finalized": 2,
		"active":    3,
		"archived":  4,
	}
)

func (x SetStatus) Enum() *SetStatus {
	p := new(SetStatus)
	*p = x
	return p
}

func (x SetStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_cardchain_cardchain_set_proto_enumTypes[0].Descriptor()
}

func (SetStatus) Type() protoreflect.EnumType {
	return &file_cardchain_cardchain_set_proto_enumTypes[0]
}

func (x SetStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetStatus.Descriptor instead.
func (SetStatus) EnumDescriptor() ([]byte, []int) {
	return file_cardchain_cardchain_set_proto_rawDescGZIP(), []int{0}
}

type Set struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cards                    []uint64            `protobuf:"varint,2,rep,packed,name=cards,proto3" json:"cards,omitempty"`
	Artist                   string              `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	StoryWriter              string              `protobuf:"bytes,4,opt,name=storyWriter,proto3" json:"storyWriter,omitempty"`
	Contributors             []string            `protobuf:"bytes,5,rep,name=contributors,proto3" json:"contributors,omitempty"`
	Story                    string              `protobuf:"bytes,6,opt,name=story,proto3" json:"story,omitempty"`
	ArtworkId                uint64              `protobuf:"varint,7,opt,name=artworkId,proto3" json:"artworkId,omitempty"`
	Status                   SetStatus           `protobuf:"varint,8,opt,name=status,proto3,enum=cardchain.cardchain.SetStatus" json:"status,omitempty"`
	TimeStamp                int64               `protobuf:"varint,9,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	ContributorsDistribution []*AddrWithQuantity `protobuf:"bytes,10,rep,name=contributorsDistribution,proto3" json:"contributorsDistribution,omitempty"`
	Rarities                 []*InnerRarities    `protobuf:"bytes,11,rep,name=Rarities,proto3" json:"Rarities,omitempty"`
}

func (x *Set) Reset() {
	*x = Set{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cardchain_cardchain_set_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Set) ProtoMessage() {}

// Deprecated: Use Set.ProtoReflect.Descriptor instead.
func (*Set) Descriptor() ([]byte, []int) {
	return file_cardchain_cardchain_set_proto_rawDescGZIP(), []int{0}
}

func (x *Set) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Set) GetCards() []uint64 {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *Set) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *Set) GetStoryWriter() string {
	if x != nil {
		return x.StoryWriter
	}
	return ""
}

func (x *Set) GetContributors() []string {
	if x != nil {
		return x.Contributors
	}
	return nil
}

func (x *Set) GetStory() string {
	if x != nil {
		return x.Story
	}
	return ""
}

func (x *Set) GetArtworkId() uint64 {
	if x != nil {
		return x.ArtworkId
	}
	return 0
}

func (x *Set) GetStatus() SetStatus {
	if x != nil {
		return x.Status
	}
	return SetStatus_undefined
}

func (x *Set) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *Set) GetContributorsDistribution() []*AddrWithQuantity {
	if x != nil {
		return x.ContributorsDistribution
	}
	return nil
}

func (x *Set) GetRarities() []*InnerRarities {
	if x != nil {
		return x.Rarities
	}
	return nil
}

type InnerRarities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R []uint64 `protobuf:"varint,1,rep,packed,name=R,proto3" json:"R,omitempty"`
}

func (x *InnerRarities) Reset() {
	*x = InnerRarities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cardchain_cardchain_set_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerRarities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerRarities) ProtoMessage() {}

// Deprecated: Use InnerRarities.ProtoReflect.Descriptor instead.
func (*InnerRarities) Descriptor() ([]byte, []int) {
	return file_cardchain_cardchain_set_proto_rawDescGZIP(), []int{1}
}

func (x *InnerRarities) GetR() []uint64 {
	if x != nil {
		return x.R
	}
	return nil
}

type AddrWithQuantity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr    string        `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Q       uint32        `protobuf:"varint,2,opt,name=q,proto3" json:"q,omitempty"`
	Payment *v1beta1.Coin `protobuf:"bytes,3,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *AddrWithQuantity) Reset() {
	*x = AddrWithQuantity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cardchain_cardchain_set_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrWithQuantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrWithQuantity) ProtoMessage() {}

// Deprecated: Use AddrWithQuantity.ProtoReflect.Descriptor instead.
func (*AddrWithQuantity) Descriptor() ([]byte, []int) {
	return file_cardchain_cardchain_set_proto_rawDescGZIP(), []int{2}
}

func (x *AddrWithQuantity) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *AddrWithQuantity) GetQ() uint32 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *AddrWithQuantity) GetPayment() *v1beta1.Coin {
	if x != nil {
		return x.Payment
	}
	return nil
}

var File_cardchain_cardchain_set_proto protoreflect.FileDescriptor

var file_cardchain_cardchain_set_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x61, 0x72, 0x64,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x03, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61,
	0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x61,
	0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x57, 0x69, 0x74, 0x68, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x73, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3e, 0x0a, 0x08, 0x52, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x61, 0x72, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x08, 0x52, 0x61, 0x72, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x22, 0x1d, 0x0a, 0x0d, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x72, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x52, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x01, 0x52,
	0x22, 0x69, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x72, 0x57, 0x69, 0x74, 0x68, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x01, 0x71, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2a, 0x4f, 0x0a, 0x09, 0x53,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x75, 0x6e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x10, 0x04, 0x42, 0xd0, 0x01, 0x0a,
	0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x08, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x44, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x47, 0x61,
	0x6d, 0x65, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0xa2, 0x02, 0x03, 0x43, 0x43, 0x58, 0xaa, 0x02, 0x13, 0x43, 0x61, 0x72,
	0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0xca, 0x02, 0x13, 0x43, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x43, 0x61, 0x72,
	0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0xe2, 0x02, 0x1f, 0x43, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5c, 0x43, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x43, 0x61, 0x72, 0x64, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x43, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cardchain_cardchain_set_proto_rawDescOnce sync.Once
	file_cardchain_cardchain_set_proto_rawDescData = file_cardchain_cardchain_set_proto_rawDesc
)

func file_cardchain_cardchain_set_proto_rawDescGZIP() []byte {
	file_cardchain_cardchain_set_proto_rawDescOnce.Do(func() {
		file_cardchain_cardchain_set_proto_rawDescData = protoimpl.X.CompressGZIP(file_cardchain_cardchain_set_proto_rawDescData)
	})
	return file_cardchain_cardchain_set_proto_rawDescData
}

var file_cardchain_cardchain_set_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cardchain_cardchain_set_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cardchain_cardchain_set_proto_goTypes = []interface{}{
	(SetStatus)(0),           // 0: cardchain.cardchain.SetStatus
	(*Set)(nil),              // 1: cardchain.cardchain.Set
	(*InnerRarities)(nil),    // 2: cardchain.cardchain.InnerRarities
	(*AddrWithQuantity)(nil), // 3: cardchain.cardchain.AddrWithQuantity
	(*v1beta1.Coin)(nil),     // 4: cosmos.base.v1beta1.Coin
}
var file_cardchain_cardchain_set_proto_depIdxs = []int32{
	0, // 0: cardchain.cardchain.Set.status:type_name -> cardchain.cardchain.SetStatus
	3, // 1: cardchain.cardchain.Set.contributorsDistribution:type_name -> cardchain.cardchain.AddrWithQuantity
	2, // 2: cardchain.cardchain.Set.Rarities:type_name -> cardchain.cardchain.InnerRarities
	4, // 3: cardchain.cardchain.AddrWithQuantity.payment:type_name -> cosmos.base.v1beta1.Coin
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_cardchain_cardchain_set_proto_init() }
func file_cardchain_cardchain_set_proto_init() {
	if File_cardchain_cardchain_set_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cardchain_cardchain_set_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Set); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cardchain_cardchain_set_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InnerRarities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cardchain_cardchain_set_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrWithQuantity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cardchain_cardchain_set_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cardchain_cardchain_set_proto_goTypes,
		DependencyIndexes: file_cardchain_cardchain_set_proto_depIdxs,
		EnumInfos:         file_cardchain_cardchain_set_proto_enumTypes,
		MessageInfos:      file_cardchain_cardchain_set_proto_msgTypes,
	}.Build()
	File_cardchain_cardchain_set_proto = out.File
	file_cardchain_cardchain_set_proto_rawDesc = nil
	file_cardchain_cardchain_set_proto_goTypes = nil
	file_cardchain_cardchain_set_proto_depIdxs = nil
}
