// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package cardchain

import (
	fmt "fmt"
	io "io"
	reflect "reflect"
	sync "sync"

	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

var _ protoreflect.List = (*_Council_2_list)(nil)

type _Council_2_list struct {
	list *[]string
}

func (x *_Council_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Council_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_Council_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_Council_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_Council_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message Council at list field Voters as it is not of Message kind"))
}

func (x *_Council_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_Council_2_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_Council_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_Council_3_list)(nil)

type _Council_3_list struct {
	list *[]*WrapHashResponse
}

func (x *_Council_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Council_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Council_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WrapHashResponse)
	(*x.list)[i] = concreteValue
}

func (x *_Council_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WrapHashResponse)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Council_3_list) AppendMutable() protoreflect.Value {
	v := new(WrapHashResponse)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Council_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Council_3_list) NewElement() protoreflect.Value {
	v := new(WrapHashResponse)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Council_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_Council_4_list)(nil)

type _Council_4_list struct {
	list *[]*WrapClearResponse
}

func (x *_Council_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Council_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Council_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WrapClearResponse)
	(*x.list)[i] = concreteValue
}

func (x *_Council_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WrapClearResponse)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Council_4_list) AppendMutable() protoreflect.Value {
	v := new(WrapClearResponse)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Council_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Council_4_list) NewElement() protoreflect.Value {
	v := new(WrapClearResponse)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Council_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Council                protoreflect.MessageDescriptor
	fd_Council_cardId         protoreflect.FieldDescriptor
	fd_Council_voters         protoreflect.FieldDescriptor
	fd_Council_hashResponses  protoreflect.FieldDescriptor
	fd_Council_clearResponses protoreflect.FieldDescriptor
	fd_Council_treasury       protoreflect.FieldDescriptor
	fd_Council_status         protoreflect.FieldDescriptor
	fd_Council_trialStart     protoreflect.FieldDescriptor
)

func init() {
	file_cardchain_cardchain_council_proto_init()
	md_Council = File_cardchain_cardchain_council_proto.Messages().ByName("Council")
	fd_Council_cardId = md_Council.Fields().ByName("cardId")
	fd_Council_voters = md_Council.Fields().ByName("voters")
	fd_Council_hashResponses = md_Council.Fields().ByName("hashResponses")
	fd_Council_clearResponses = md_Council.Fields().ByName("clearResponses")
	fd_Council_treasury = md_Council.Fields().ByName("treasury")
	fd_Council_status = md_Council.Fields().ByName("status")
	fd_Council_trialStart = md_Council.Fields().ByName("trialStart")
}

var _ protoreflect.Message = (*fastReflection_Council)(nil)

type fastReflection_Council Council

func (x *Council) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Council)(x)
}

func (x *Council) slowProtoReflect() protoreflect.Message {
	mi := &file_cardchain_cardchain_council_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Council_messageType fastReflection_Council_messageType
var _ protoreflect.MessageType = fastReflection_Council_messageType{}

type fastReflection_Council_messageType struct{}

func (x fastReflection_Council_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Council)(nil)
}
func (x fastReflection_Council_messageType) New() protoreflect.Message {
	return new(fastReflection_Council)
}
func (x fastReflection_Council_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Council
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Council) Descriptor() protoreflect.MessageDescriptor {
	return md_Council
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Council) Type() protoreflect.MessageType {
	return _fastReflection_Council_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Council) New() protoreflect.Message {
	return new(fastReflection_Council)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Council) Interface() protoreflect.ProtoMessage {
	return (*Council)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Council) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CardId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CardId)
		if !f(fd_Council_cardId, value) {
			return
		}
	}
	if len(x.Voters) != 0 {
		value := protoreflect.ValueOfList(&_Council_2_list{list: &x.Voters})
		if !f(fd_Council_voters, value) {
			return
		}
	}
	if len(x.HashResponses) != 0 {
		value := protoreflect.ValueOfList(&_Council_3_list{list: &x.HashResponses})
		if !f(fd_Council_hashResponses, value) {
			return
		}
	}
	if len(x.ClearResponses) != 0 {
		value := protoreflect.ValueOfList(&_Council_4_list{list: &x.ClearResponses})
		if !f(fd_Council_clearResponses, value) {
			return
		}
	}
	if x.Treasury != nil {
		value := protoreflect.ValueOfMessage(x.Treasury.ProtoReflect())
		if !f(fd_Council_treasury, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_Council_status, value) {
			return
		}
	}
	if x.TrialStart != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TrialStart)
		if !f(fd_Council_trialStart, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Council) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cardchain.cardchain.Council.cardId":
		return x.CardId != uint64(0)
	case "cardchain.cardchain.Council.voters":
		return len(x.Voters) != 0
	case "cardchain.cardchain.Council.hashResponses":
		return len(x.HashResponses) != 0
	case "cardchain.cardchain.Council.clearResponses":
		return len(x.ClearResponses) != 0
	case "cardchain.cardchain.Council.treasury":
		return x.Treasury != nil
	case "cardchain.cardchain.Council.status":
		return x.Status != 0
	case "cardchain.cardchain.Council.trialStart":
		return x.TrialStart != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Council"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Council does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Council) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cardchain.cardchain.Council.cardId":
		x.CardId = uint64(0)
	case "cardchain.cardchain.Council.voters":
		x.Voters = nil
	case "cardchain.cardchain.Council.hashResponses":
		x.HashResponses = nil
	case "cardchain.cardchain.Council.clearResponses":
		x.ClearResponses = nil
	case "cardchain.cardchain.Council.treasury":
		x.Treasury = nil
	case "cardchain.cardchain.Council.status":
		x.Status = 0
	case "cardchain.cardchain.Council.trialStart":
		x.TrialStart = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Council"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Council does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Council) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cardchain.cardchain.Council.cardId":
		value := x.CardId
		return protoreflect.ValueOfUint64(value)
	case "cardchain.cardchain.Council.voters":
		if len(x.Voters) == 0 {
			return protoreflect.ValueOfList(&_Council_2_list{})
		}
		listValue := &_Council_2_list{list: &x.Voters}
		return protoreflect.ValueOfList(listValue)
	case "cardchain.cardchain.Council.hashResponses":
		if len(x.HashResponses) == 0 {
			return protoreflect.ValueOfList(&_Council_3_list{})
		}
		listValue := &_Council_3_list{list: &x.HashResponses}
		return protoreflect.ValueOfList(listValue)
	case "cardchain.cardchain.Council.clearResponses":
		if len(x.ClearResponses) == 0 {
			return protoreflect.ValueOfList(&_Council_4_list{})
		}
		listValue := &_Council_4_list{list: &x.ClearResponses}
		return protoreflect.ValueOfList(listValue)
	case "cardchain.cardchain.Council.treasury":
		value := x.Treasury
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "cardchain.cardchain.Council.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "cardchain.cardchain.Council.trialStart":
		value := x.TrialStart
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Council"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Council does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Council) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cardchain.cardchain.Council.cardId":
		x.CardId = value.Uint()
	case "cardchain.cardchain.Council.voters":
		lv := value.List()
		clv := lv.(*_Council_2_list)
		x.Voters = *clv.list
	case "cardchain.cardchain.Council.hashResponses":
		lv := value.List()
		clv := lv.(*_Council_3_list)
		x.HashResponses = *clv.list
	case "cardchain.cardchain.Council.clearResponses":
		lv := value.List()
		clv := lv.(*_Council_4_list)
		x.ClearResponses = *clv.list
	case "cardchain.cardchain.Council.treasury":
		x.Treasury = value.Message().Interface().(*v1beta1.Coin)
	case "cardchain.cardchain.Council.status":
		x.Status = (CouncelingStatus)(value.Enum())
	case "cardchain.cardchain.Council.trialStart":
		x.TrialStart = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Council"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Council does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Council) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.Council.voters":
		if x.Voters == nil {
			x.Voters = []string{}
		}
		value := &_Council_2_list{list: &x.Voters}
		return protoreflect.ValueOfList(value)
	case "cardchain.cardchain.Council.hashResponses":
		if x.HashResponses == nil {
			x.HashResponses = []*WrapHashResponse{}
		}
		value := &_Council_3_list{list: &x.HashResponses}
		return protoreflect.ValueOfList(value)
	case "cardchain.cardchain.Council.clearResponses":
		if x.ClearResponses == nil {
			x.ClearResponses = []*WrapClearResponse{}
		}
		value := &_Council_4_list{list: &x.ClearResponses}
		return protoreflect.ValueOfList(value)
	case "cardchain.cardchain.Council.treasury":
		if x.Treasury == nil {
			x.Treasury = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Treasury.ProtoReflect())
	case "cardchain.cardchain.Council.cardId":
		panic(fmt.Errorf("field cardId of message cardchain.cardchain.Council is not mutable"))
	case "cardchain.cardchain.Council.status":
		panic(fmt.Errorf("field status of message cardchain.cardchain.Council is not mutable"))
	case "cardchain.cardchain.Council.trialStart":
		panic(fmt.Errorf("field trialStart of message cardchain.cardchain.Council is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Council"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Council does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Council) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.Council.cardId":
		return protoreflect.ValueOfUint64(uint64(0))
	case "cardchain.cardchain.Council.voters":
		list := []string{}
		return protoreflect.ValueOfList(&_Council_2_list{list: &list})
	case "cardchain.cardchain.Council.hashResponses":
		list := []*WrapHashResponse{}
		return protoreflect.ValueOfList(&_Council_3_list{list: &list})
	case "cardchain.cardchain.Council.clearResponses":
		list := []*WrapClearResponse{}
		return protoreflect.ValueOfList(&_Council_4_list{list: &list})
	case "cardchain.cardchain.Council.treasury":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "cardchain.cardchain.Council.status":
		return protoreflect.ValueOfEnum(0)
	case "cardchain.cardchain.Council.trialStart":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.Council"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.Council does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Council) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cardchain.cardchain.Council", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Council) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Council) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Council) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Council) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Council)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.CardId != 0 {
			n += 1 + runtime.Sov(uint64(x.CardId))
		}
		if len(x.Voters) > 0 {
			for _, s := range x.Voters {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.HashResponses) > 0 {
			for _, e := range x.HashResponses {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.ClearResponses) > 0 {
			for _, e := range x.ClearResponses {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Treasury != nil {
			l = options.Size(x.Treasury)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.TrialStart != 0 {
			n += 1 + runtime.Sov(uint64(x.TrialStart))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Council)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Treasury != nil {
			encoded, err := options.Marshal(x.Treasury)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if x.TrialStart != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TrialStart))
			i--
			dAtA[i] = 0x38
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x30
		}
		if len(x.ClearResponses) > 0 {
			for iNdEx := len(x.ClearResponses) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ClearResponses[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.HashResponses) > 0 {
			for iNdEx := len(x.HashResponses) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.HashResponses[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.Voters) > 0 {
			for iNdEx := len(x.Voters) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Voters[iNdEx])
				copy(dAtA[i:], x.Voters[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Voters[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.CardId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CardId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Council)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Council: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Council: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CardId", wireType)
				}
				x.CardId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CardId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Voters", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Voters = append(x.Voters, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HashResponses", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HashResponses = append(x.HashResponses, &WrapHashResponse{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.HashResponses[len(x.HashResponses)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ClearResponses", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ClearResponses = append(x.ClearResponses, &WrapClearResponse{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ClearResponses[len(x.ClearResponses)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Treasury", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Treasury == nil {
					x.Treasury = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Treasury); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= CouncelingStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrialStart", wireType)
				}
				x.TrialStart = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TrialStart |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_WrapClearResponse            protoreflect.MessageDescriptor
	fd_WrapClearResponse_user       protoreflect.FieldDescriptor
	fd_WrapClearResponse_response   protoreflect.FieldDescriptor
	fd_WrapClearResponse_suggestion protoreflect.FieldDescriptor
)

func init() {
	file_cardchain_cardchain_council_proto_init()
	md_WrapClearResponse = File_cardchain_cardchain_council_proto.Messages().ByName("WrapClearResponse")
	fd_WrapClearResponse_user = md_WrapClearResponse.Fields().ByName("user")
	fd_WrapClearResponse_response = md_WrapClearResponse.Fields().ByName("response")
	fd_WrapClearResponse_suggestion = md_WrapClearResponse.Fields().ByName("suggestion")
}

var _ protoreflect.Message = (*fastReflection_WrapClearResponse)(nil)

type fastReflection_WrapClearResponse WrapClearResponse

func (x *WrapClearResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_WrapClearResponse)(x)
}

func (x *WrapClearResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cardchain_cardchain_council_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_WrapClearResponse_messageType fastReflection_WrapClearResponse_messageType
var _ protoreflect.MessageType = fastReflection_WrapClearResponse_messageType{}

type fastReflection_WrapClearResponse_messageType struct{}

func (x fastReflection_WrapClearResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_WrapClearResponse)(nil)
}
func (x fastReflection_WrapClearResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_WrapClearResponse)
}
func (x fastReflection_WrapClearResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_WrapClearResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_WrapClearResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_WrapClearResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_WrapClearResponse) Type() protoreflect.MessageType {
	return _fastReflection_WrapClearResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_WrapClearResponse) New() protoreflect.Message {
	return new(fastReflection_WrapClearResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_WrapClearResponse) Interface() protoreflect.ProtoMessage {
	return (*WrapClearResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_WrapClearResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.User != "" {
		value := protoreflect.ValueOfString(x.User)
		if !f(fd_WrapClearResponse_user, value) {
			return
		}
	}
	if x.Response != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Response))
		if !f(fd_WrapClearResponse_response, value) {
			return
		}
	}
	if x.Suggestion != "" {
		value := protoreflect.ValueOfString(x.Suggestion)
		if !f(fd_WrapClearResponse_suggestion, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_WrapClearResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cardchain.cardchain.WrapClearResponse.user":
		return x.User != ""
	case "cardchain.cardchain.WrapClearResponse.response":
		return x.Response != 0
	case "cardchain.cardchain.WrapClearResponse.suggestion":
		return x.Suggestion != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapClearResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapClearResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WrapClearResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cardchain.cardchain.WrapClearResponse.user":
		x.User = ""
	case "cardchain.cardchain.WrapClearResponse.response":
		x.Response = 0
	case "cardchain.cardchain.WrapClearResponse.suggestion":
		x.Suggestion = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapClearResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapClearResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_WrapClearResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cardchain.cardchain.WrapClearResponse.user":
		value := x.User
		return protoreflect.ValueOfString(value)
	case "cardchain.cardchain.WrapClearResponse.response":
		value := x.Response
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "cardchain.cardchain.WrapClearResponse.suggestion":
		value := x.Suggestion
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapClearResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapClearResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WrapClearResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cardchain.cardchain.WrapClearResponse.user":
		x.User = value.Interface().(string)
	case "cardchain.cardchain.WrapClearResponse.response":
		x.Response = (Response)(value.Enum())
	case "cardchain.cardchain.WrapClearResponse.suggestion":
		x.Suggestion = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapClearResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapClearResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WrapClearResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.WrapClearResponse.user":
		panic(fmt.Errorf("field user of message cardchain.cardchain.WrapClearResponse is not mutable"))
	case "cardchain.cardchain.WrapClearResponse.response":
		panic(fmt.Errorf("field response of message cardchain.cardchain.WrapClearResponse is not mutable"))
	case "cardchain.cardchain.WrapClearResponse.suggestion":
		panic(fmt.Errorf("field suggestion of message cardchain.cardchain.WrapClearResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapClearResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapClearResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_WrapClearResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.WrapClearResponse.user":
		return protoreflect.ValueOfString("")
	case "cardchain.cardchain.WrapClearResponse.response":
		return protoreflect.ValueOfEnum(0)
	case "cardchain.cardchain.WrapClearResponse.suggestion":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapClearResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapClearResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_WrapClearResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cardchain.cardchain.WrapClearResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_WrapClearResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WrapClearResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_WrapClearResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_WrapClearResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*WrapClearResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.User)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Response != 0 {
			n += 1 + runtime.Sov(uint64(x.Response))
		}
		l = len(x.Suggestion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*WrapClearResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Suggestion) > 0 {
			i -= len(x.Suggestion)
			copy(dAtA[i:], x.Suggestion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Suggestion)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Response != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Response))
			i--
			dAtA[i] = 0x10
		}
		if len(x.User) > 0 {
			i -= len(x.User)
			copy(dAtA[i:], x.User)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.User)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*WrapClearResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WrapClearResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WrapClearResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.User = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Response", wireType)
				}
				x.Response = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Response |= Response(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Suggestion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Suggestion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_WrapHashResponse      protoreflect.MessageDescriptor
	fd_WrapHashResponse_user protoreflect.FieldDescriptor
	fd_WrapHashResponse_hash protoreflect.FieldDescriptor
)

func init() {
	file_cardchain_cardchain_council_proto_init()
	md_WrapHashResponse = File_cardchain_cardchain_council_proto.Messages().ByName("WrapHashResponse")
	fd_WrapHashResponse_user = md_WrapHashResponse.Fields().ByName("user")
	fd_WrapHashResponse_hash = md_WrapHashResponse.Fields().ByName("hash")
}

var _ protoreflect.Message = (*fastReflection_WrapHashResponse)(nil)

type fastReflection_WrapHashResponse WrapHashResponse

func (x *WrapHashResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_WrapHashResponse)(x)
}

func (x *WrapHashResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cardchain_cardchain_council_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_WrapHashResponse_messageType fastReflection_WrapHashResponse_messageType
var _ protoreflect.MessageType = fastReflection_WrapHashResponse_messageType{}

type fastReflection_WrapHashResponse_messageType struct{}

func (x fastReflection_WrapHashResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_WrapHashResponse)(nil)
}
func (x fastReflection_WrapHashResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_WrapHashResponse)
}
func (x fastReflection_WrapHashResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_WrapHashResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_WrapHashResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_WrapHashResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_WrapHashResponse) Type() protoreflect.MessageType {
	return _fastReflection_WrapHashResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_WrapHashResponse) New() protoreflect.Message {
	return new(fastReflection_WrapHashResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_WrapHashResponse) Interface() protoreflect.ProtoMessage {
	return (*WrapHashResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_WrapHashResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.User != "" {
		value := protoreflect.ValueOfString(x.User)
		if !f(fd_WrapHashResponse_user, value) {
			return
		}
	}
	if x.Hash != "" {
		value := protoreflect.ValueOfString(x.Hash)
		if !f(fd_WrapHashResponse_hash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_WrapHashResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cardchain.cardchain.WrapHashResponse.user":
		return x.User != ""
	case "cardchain.cardchain.WrapHashResponse.hash":
		return x.Hash != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapHashResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapHashResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WrapHashResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cardchain.cardchain.WrapHashResponse.user":
		x.User = ""
	case "cardchain.cardchain.WrapHashResponse.hash":
		x.Hash = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapHashResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapHashResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_WrapHashResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cardchain.cardchain.WrapHashResponse.user":
		value := x.User
		return protoreflect.ValueOfString(value)
	case "cardchain.cardchain.WrapHashResponse.hash":
		value := x.Hash
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapHashResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapHashResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WrapHashResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cardchain.cardchain.WrapHashResponse.user":
		x.User = value.Interface().(string)
	case "cardchain.cardchain.WrapHashResponse.hash":
		x.Hash = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapHashResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapHashResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WrapHashResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.WrapHashResponse.user":
		panic(fmt.Errorf("field user of message cardchain.cardchain.WrapHashResponse is not mutable"))
	case "cardchain.cardchain.WrapHashResponse.hash":
		panic(fmt.Errorf("field hash of message cardchain.cardchain.WrapHashResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapHashResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapHashResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_WrapHashResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cardchain.cardchain.WrapHashResponse.user":
		return protoreflect.ValueOfString("")
	case "cardchain.cardchain.WrapHashResponse.hash":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cardchain.cardchain.WrapHashResponse"))
		}
		panic(fmt.Errorf("message cardchain.cardchain.WrapHashResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_WrapHashResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cardchain.cardchain.WrapHashResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_WrapHashResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WrapHashResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_WrapHashResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_WrapHashResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*WrapHashResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.User)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Hash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*WrapHashResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Hash) > 0 {
			i -= len(x.Hash)
			copy(dAtA[i:], x.Hash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Hash)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.User) > 0 {
			i -= len(x.User)
			copy(dAtA[i:], x.User)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.User)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*WrapHashResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WrapHashResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WrapHashResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.User = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Hash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: cardchain/cardchain/council.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Response int32

const (
	Response_Yes        Response = 0
	Response_No         Response = 1
	Response_Suggestion Response = 2
)

// Enum value maps for Response.
var (
	Response_name = map[int32]string{
		0: "Yes",
		1: "No",
		2: "Suggestion",
	}
	Response_value = map[string]int32{
		"Yes":        0,
		"No":         1,
		"Suggestion": 2,
	}
)

func (x Response) Enum() *Response {
	p := new(Response)
	*p = x
	return p
}

func (x Response) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Response) Descriptor() protoreflect.EnumDescriptor {
	return file_cardchain_cardchain_council_proto_enumTypes[0].Descriptor()
}

func (Response) Type() protoreflect.EnumType {
	return &file_cardchain_cardchain_council_proto_enumTypes[0]
}

func (x Response) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Response.Descriptor instead.
func (Response) EnumDescriptor() ([]byte, []int) {
	return file_cardchain_cardchain_council_proto_rawDescGZIP(), []int{0}
}

type CouncelingStatus int32

const (
	CouncelingStatus_councilOpen     CouncelingStatus = 0
	CouncelingStatus_councilCreated  CouncelingStatus = 1
	CouncelingStatus_councilClosed   CouncelingStatus = 2
	CouncelingStatus_commited        CouncelingStatus = 3
	CouncelingStatus_revealed        CouncelingStatus = 4
	CouncelingStatus_suggestionsMade CouncelingStatus = 5
)

// Enum value maps for CouncelingStatus.
var (
	CouncelingStatus_name = map[int32]string{
		0: "councilOpen",
		1: "councilCreated",
		2: "councilClosed",
		3: "commited",
		4: "revealed",
		5: "suggestionsMade",
	}
	CouncelingStatus_value = map[string]int32{
		"councilOpen":     0,
		"councilCreated":  1,
		"councilClosed":   2,
		"commited":        3,
		"revealed":        4,
		"suggestionsMade": 5,
	}
)

func (x CouncelingStatus) Enum() *CouncelingStatus {
	p := new(CouncelingStatus)
	*p = x
	return p
}

func (x CouncelingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CouncelingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_cardchain_cardchain_council_proto_enumTypes[1].Descriptor()
}

func (CouncelingStatus) Type() protoreflect.EnumType {
	return &file_cardchain_cardchain_council_proto_enumTypes[1]
}

func (x CouncelingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CouncelingStatus.Descriptor instead.
func (CouncelingStatus) EnumDescriptor() ([]byte, []int) {
	return file_cardchain_cardchain_council_proto_rawDescGZIP(), []int{1}
}

type Council struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId         uint64               `protobuf:"varint,1,opt,name=cardId,proto3" json:"cardId,omitempty"`
	Voters         []string             `protobuf:"bytes,2,rep,name=voters,proto3" json:"voters,omitempty"`
	HashResponses  []*WrapHashResponse  `protobuf:"bytes,3,rep,name=hashResponses,proto3" json:"hashResponses,omitempty"`
	ClearResponses []*WrapClearResponse `protobuf:"bytes,4,rep,name=clearResponses,proto3" json:"clearResponses,omitempty"`
	Treasury       *v1beta1.Coin        `protobuf:"bytes,8,opt,name=treasury,proto3" json:"treasury,omitempty"`
	Status         CouncelingStatus     `protobuf:"varint,6,opt,name=status,proto3,enum=cardchain.cardchain.CouncelingStatus" json:"status,omitempty"`
	TrialStart     uint64               `protobuf:"varint,7,opt,name=trialStart,proto3" json:"trialStart,omitempty"`
}

func (x *Council) Reset() {
	*x = Council{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cardchain_cardchain_council_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Council) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Council) ProtoMessage() {}

// Deprecated: Use Council.ProtoReflect.Descriptor instead.
func (*Council) Descriptor() ([]byte, []int) {
	return file_cardchain_cardchain_council_proto_rawDescGZIP(), []int{0}
}

func (x *Council) GetCardId() uint64 {
	if x != nil {
		return x.CardId
	}
	return 0
}

func (x *Council) GetVoters() []string {
	if x != nil {
		return x.Voters
	}
	return nil
}

func (x *Council) GetHashResponses() []*WrapHashResponse {
	if x != nil {
		return x.HashResponses
	}
	return nil
}

func (x *Council) GetClearResponses() []*WrapClearResponse {
	if x != nil {
		return x.ClearResponses
	}
	return nil
}

func (x *Council) GetTreasury() *v1beta1.Coin {
	if x != nil {
		return x.Treasury
	}
	return nil
}

func (x *Council) GetStatus() CouncelingStatus {
	if x != nil {
		return x.Status
	}
	return CouncelingStatus_councilOpen
}

func (x *Council) GetTrialStart() uint64 {
	if x != nil {
		return x.TrialStart
	}
	return 0
}

type WrapClearResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User       string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Response   Response `protobuf:"varint,2,opt,name=response,proto3,enum=cardchain.cardchain.Response" json:"response,omitempty"`
	Suggestion string   `protobuf:"bytes,3,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
}

func (x *WrapClearResponse) Reset() {
	*x = WrapClearResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cardchain_cardchain_council_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WrapClearResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrapClearResponse) ProtoMessage() {}

// Deprecated: Use WrapClearResponse.ProtoReflect.Descriptor instead.
func (*WrapClearResponse) Descriptor() ([]byte, []int) {
	return file_cardchain_cardchain_council_proto_rawDescGZIP(), []int{1}
}

func (x *WrapClearResponse) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *WrapClearResponse) GetResponse() Response {
	if x != nil {
		return x.Response
	}
	return Response_Yes
}

func (x *WrapClearResponse) GetSuggestion() string {
	if x != nil {
		return x.Suggestion
	}
	return ""
}

type WrapHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *WrapHashResponse) Reset() {
	*x = WrapHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cardchain_cardchain_council_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WrapHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrapHashResponse) ProtoMessage() {}

// Deprecated: Use WrapHashResponse.ProtoReflect.Descriptor instead.
func (*WrapHashResponse) Descriptor() ([]byte, []int) {
	return file_cardchain_cardchain_council_proto_rawDescGZIP(), []int{2}
}

func (x *WrapHashResponse) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *WrapHashResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

var File_cardchain_cardchain_council_proto protoreflect.FileDescriptor

var file_cardchain_cardchain_council_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x61, 0x72, 0x64,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x63, 0x69, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63,
	0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2,
	0x02, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x63, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x12, 0x4b, 0x0a, 0x0d, 0x68, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x57, 0x72, 0x61, 0x70, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x08, 0x74, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x57, 0x72, 0x61, 0x70, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x39, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x10, 0x57, 0x72, 0x61, 0x70,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x2a, 0x2b, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x07, 0x0a, 0x03, 0x59, 0x65, 0x73, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x6f, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x02, 0x2a, 0x7b, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x63, 0x69, 0x6c,
	0x4f, 0x70, 0x65, 0x6e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x63, 0x69,
	0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x6f,
	0x75, 0x6e, 0x63, 0x69, 0x6c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x72,
	0x65, 0x76, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x61, 0x64, 0x65, 0x10, 0x05, 0x42, 0xd4,
	0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x0c, 0x43, 0x6f, 0x75, 0x6e,
	0x63, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c,
	0x43, 0x61, 0x72, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2f, 0x63, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0xa2, 0x02, 0x03, 0x43, 0x43, 0x58,
	0xaa, 0x02, 0x13, 0x43, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0xca, 0x02, 0x13, 0x43, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5c, 0x43, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0xe2, 0x02, 0x1f, 0x43,
	0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5c, 0x43, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x14, 0x43, 0x61, 0x72, 0x64, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x43, 0x61, 0x72, 0x64,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cardchain_cardchain_council_proto_rawDescOnce sync.Once
	file_cardchain_cardchain_council_proto_rawDescData = file_cardchain_cardchain_council_proto_rawDesc
)

func file_cardchain_cardchain_council_proto_rawDescGZIP() []byte {
	file_cardchain_cardchain_council_proto_rawDescOnce.Do(func() {
		file_cardchain_cardchain_council_proto_rawDescData = protoimpl.X.CompressGZIP(file_cardchain_cardchain_council_proto_rawDescData)
	})
	return file_cardchain_cardchain_council_proto_rawDescData
}

var file_cardchain_cardchain_council_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cardchain_cardchain_council_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cardchain_cardchain_council_proto_goTypes = []interface{}{
	(Response)(0),             // 0: cardchain.cardchain.Response
	(CouncelingStatus)(0),     // 1: cardchain.cardchain.CouncelingStatus
	(*Council)(nil),           // 2: cardchain.cardchain.Council
	(*WrapClearResponse)(nil), // 3: cardchain.cardchain.WrapClearResponse
	(*WrapHashResponse)(nil),  // 4: cardchain.cardchain.WrapHashResponse
	(*v1beta1.Coin)(nil),      // 5: cosmos.base.v1beta1.Coin
}
var file_cardchain_cardchain_council_proto_depIdxs = []int32{
	4, // 0: cardchain.cardchain.Council.hashResponses:type_name -> cardchain.cardchain.WrapHashResponse
	3, // 1: cardchain.cardchain.Council.clearResponses:type_name -> cardchain.cardchain.WrapClearResponse
	5, // 2: cardchain.cardchain.Council.treasury:type_name -> cosmos.base.v1beta1.Coin
	1, // 3: cardchain.cardchain.Council.status:type_name -> cardchain.cardchain.CouncelingStatus
	0, // 4: cardchain.cardchain.WrapClearResponse.response:type_name -> cardchain.cardchain.Response
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_cardchain_cardchain_council_proto_init() }
func file_cardchain_cardchain_council_proto_init() {
	if File_cardchain_cardchain_council_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cardchain_cardchain_council_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Council); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cardchain_cardchain_council_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WrapClearResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cardchain_cardchain_council_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WrapHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cardchain_cardchain_council_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cardchain_cardchain_council_proto_goTypes,
		DependencyIndexes: file_cardchain_cardchain_council_proto_depIdxs,
		EnumInfos:         file_cardchain_cardchain_council_proto_enumTypes,
		MessageInfos:      file_cardchain_cardchain_council_proto_msgTypes,
	}.Build()
	File_cardchain_cardchain_council_proto = out.File
	file_cardchain_cardchain_council_proto_rawDesc = nil
	file_cardchain_cardchain_council_proto_goTypes = nil
	file_cardchain_cardchain_council_proto_depIdxs = nil
}
